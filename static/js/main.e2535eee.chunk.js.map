{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","helpers/EPNSCoreHelper.js","segments/Feedbox.tsx","components/DisplayNotice.js","assets/Device.js","singletons/ChannelsDataStore.js","singletons/UsersDataStore.js","components/ViewChannelItem.js","segments/ViewChannels.tsx","components/SendNotifications.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","injected","InjectedConnector","supportedChainIds","network","NetworkConnector","urls","3","defaultChainId","pollingInterval","portis","PortisConnector","dAppId","networks","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","url","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","memberExists","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","Container","styled","InterestInfo","InterestRow","Title","span","Msg","props","theme","css","Feedbox","epnsReadProvider","useWeb3React","account","library","React","useState","userInterestInfo","setUserInterestInfo","useEffect","initUserInterest","getBlockNumber","blockNumber","calculateUserInterest","on","contractInstance","Contract","addresses","epnscore","abis","divisor","ratio","userInfo","interestClaimed","adaiERC20","aDai","erc20","balanceOf","availableFunds","totalProfit","sub","userProfit","mul","obj","pool","Number","formatEther","available","profit","Notice","DisplayNotice","title","animationIn","animationOut","durationOut","size","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","count","memberCount","bigNumberify","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","channelsDummy","getChannelMetaAsync","id","sort","b","channelAddress","getChannelMetaViaAddressAsync","getChannelJsonAsync","instance","UserEvents","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","add","PublicKeyRegistered","once","incrementUsersCountAsync","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","Pool","PoolShare","LineBreak","ChannelActions","ChannelActionButton","button","disabled","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","Toaster","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsWriteProvide","channelJson","setChannelJson","subscribed","setSubscribed","loading","setLoading","txInProgress","setTxInProgress","fetchChannelJson","registerCallbacks","subs","subscribe","subscribeAction","getSigner","signMessage","signature","recoverPublicKey","arrayify","hashMessage","formattedPubKey","slice","error","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","withPublicKey","subscribeWithPublicKey","tx","txToast","LoaderToast","color","waitForTransaction","hash","update","render","type","TYPE","SUCCESS","name","ERROR","unsubscribeAction","unsubscribe","height","width","src","icon","href","target","rel","info","poolContribution","onClick","ContainerInfo","Items","ViewChannels","setChannels","setUser","owner","setOwner","fetchChannels","ownerAddr","keys","index","channellized","NFTypes","DropdownStyledParent","DropdownStyled","Dropdown","SendNotifications","active","chainId","nfProcessing","setNFProcessing","nfRecipient","setNFRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","handleSendMessage","preventDefault","notificationToast","signer","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","JSON","stringify","at","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","INFO","wait","field","trim","padding","align","textTransform","spacing","weight","bg","flex","direction","margin","justify","onSubmit","self","minWidth","options","onChange","option","placeholder","display","radius","Switch","checked","required","border","right","top","pos","z","borderBottom","rows","autocomplete","cursor","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsReadProvider","epnsWriteProvider","setEpnsWriteProvider","controlAt","setControlAt","adminStatusLoaded","setAdminStatusLoaded","channelAdmin","setChannelAdmin","signerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","ref","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","toLowerCase","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","className","HeaderStyle","ProfileContainer","Logo","UserControls","NetworkDisplayer","PrimaryTheme","ThirdTheme","Connection","phase","Header","Array","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","dotenv","connectorsByName","Injected","Network","Portis","getLibrary","provider","connector","providers","Web3Provider","App","context","activate","deactivate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","HeaderContainer","ParentContainer","HomeContainer","ProviderUpperContainer","ProviderLogo","srcSet","ProviderContainer","currentConnector","activating","image","ProviderButton","ProviderImage","ProviderLabel","style","gridGap","gridTemplateColumns","maxWidth","marginTop","borderColor","alert","changeChainId","changeNetwork","close","newestOnTop","rtl","pauseOnFocusLoss","ToastContainer","attrs","Boolean","location","hostname","match","client","ApolloClient","uri","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","dai","erc20Abi","ownable","ownableAbi","epnscoreAbi","Step","activeBG","Line","Info","h1","Input","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","channelName","setChannelName","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","channelStakeFees","setChannelStakeFees","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","daiContract","fees","parseUnits","sendTransactionPromise","approve","createChannelWithFees","onChangeStatus","status","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","defaultValue","onChangeCommitted","event","aria-labelledby","valueLabelDisplay","step","marks","min","max","maxlength","randseed","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","data","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports","Section","section","gradient","overflow","Content","ItemBreak","Item","wrap","textAlign","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","transform","arcRGB","h2","family","H3","h3","P","p","Span","left","Anchor","ul","li","hoverBG","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.e2535eee.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: \"https://ropsten.infura.io/v3/084ddf3da9e240c5b5dd9264f37c0526\" as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [3] })\n\nexport const network = new NetworkConnector({\n  urls: { 3: RPC_URLS[3] },\n  defaultChainId: 3,\n  pollingInterval: POLLING_INTERVAL\n})\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 1: RPC_URLS[1] },\n//   bridge: 'https://bridge.walletconnect.org',\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\n// export const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n//\n// export const trezor = new TrezorConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [1, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.mapAddressChannels(channelID)\n        .then(response => {\n          console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(user, contract)\n        .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.memberExists(user, channel)\n        .then(response => {\n          console.log(\"getSubscribedStatus() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { BigNumber, bigNumberify, formatEther } from 'ethers/utils'\n\n// Create Header\nfunction Feedbox({ epnsReadProvider }) {\n  const { account, library } = useWeb3React();\n\n  const [userInterestInfo, setUserInterestInfo] = React.useState(null);\n\n  React.useEffect(() => {\n\n    if (!!account && !!library) {\n      initUserInterest();\n    }\n\n  }, [account, library]);\n\n  // Create Interest Calculation\n  const attachInterestCalculation = () => {\n    library.on('block', (blockNumber) => {\n      calculateUserInterest(blockNumber);\n    });\n  }\n\n  const initUserInterest = () => {\n    library.getBlockNumber().then((blockNumber) => {\n      calculateUserInterest(blockNumber);\n\n      attachInterestCalculation();\n    });\n  }\n\n  const calculateUserInterest = async (blockNumber) => {\n    // get all details\n    const contractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, library);\n\n    const divisor = 10000000;\n    const ratio = await EPNSCoreHelper.getFairShareOfUserAtBlock(account, blockNumber, contractInstance);\n    const poolFunds = await EPNSCoreHelper.getPoolFunds(contractInstance);\n    const userInfo = await EPNSCoreHelper.getUserInfo(account, contractInstance);\n    const interestClaimed = userInfo.interestClaimed;\n\n    const adaiERC20 = new ethers.Contract(addresses.aDai, abis.erc20, library);\n    const availableFunds = await adaiERC20.balanceOf(addresses.epnscore);\n\n    const totalProfit = availableFunds.sub(poolFunds);\n    const userProfit = (ratio.mul(totalProfit)).div(divisor);\n\n    // console.log(ratio.toNumber() / divisor);\n    // console.log(formatEther(poolFunds));\n    // console.log(formatEther(availableFunds));\n    // console.log(formatEther(totalProfit));\n    // console.log(formatEther(userProfit));\n    // console.log(formatEther(interestClaimed));\n\n    const obj = {\n      block: blockNumber,\n      pool: Number(formatEther(poolFunds)).toFixed(8),\n      available: Number(formatEther(availableFunds)).toFixed(8),\n      profit: Number(formatEther(totalProfit)).toFixed(8),\n      ratio: ((ratio.toNumber() / divisor) * 100).toFixed(8),\n      userProfit: Number(formatEther(userProfit)).toFixed(8),\n      interestClaimed: interestClaimed ? Number(formatEther(interestClaimed)).toFixed(8) + \" DAI\" : \"---\"\n    }\n\n    setUserInterestInfo(obj);\n\n  }\n\n  // Render\n  return (\n    <Container>\n      {userInterestInfo &&\n        <InterestInfo>\n          <InterestRow>\n            <Msg theme=\"block\">Block Number: {userInterestInfo.block}</Msg>\n          </InterestRow>\n          <InterestRow>\n            <Title>Interest Pool:</Title>\n            <Msg theme=\"primary\">{userInterestInfo.pool} DAI</Msg>\n          </InterestRow>\n          <InterestRow>\n            <Title>Pool + Interest Generated:</Title>\n            <Msg theme=\"primary\">{userInterestInfo.available} DAI</Msg>\n          </InterestRow>\n          <InterestRow>\n            <Title>Entire Pool Profit:</Title>\n            <Msg theme=\"primary\">{userInterestInfo.profit} DAI</Msg>\n          </InterestRow>\n          { userInterestInfo.ratio !=0 &&\n            <>\n              <InterestRow>\n                <Title>User Fair Share Percentage:</Title>\n                <Msg theme=\"secondary\">{userInterestInfo.ratio}%</Msg>\n              </InterestRow>\n              <InterestRow>\n                <Title>User Profit:</Title>\n                <Msg theme=\"secondary\">{userInterestInfo.userProfit} DAI</Msg>\n              </InterestRow>\n            </>\n          }\n          <InterestRow>\n            <Title>Interest Claimed:</Title>\n            <Msg theme=\"third\">{userInterestInfo.interestClaimed}</Msg>\n          </InterestRow>\n        </InterestInfo>\n      }\n      {!userInterestInfo &&\n      <>\n        Loading Interest Stats...\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  padding: 20px;\n  font-size: 16px;\n  display: flex;\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 40vh;\n`\n\nconst InterestInfo = styled.div`\n  border: 1px solid #ddd;\n  padding: 15px;\n  border-radius: 10px;\n`\n\nconst InterestRow = styled.div`\n  margin: 5px;\n  padding: 5px;\n  border-bottom: 1px solid #eee;\n  font-weight: 400;\n  font-size: 14px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Title = styled.span`\n  font-weight: 600;\n`\n\nconst Msg = styled.span`\n  padding: 2px 10px;\n  margin: 0px 10px;\n  font-size: 12px;\n  border-radius: 10px;\n  color: #000;\n\n  ${props => props.theme === 'block' && css`\n    background: #e20880;\n    color: #FFF;\n    font-size: 14px;\n    margin: 10px 0px;\n    font-weight: 600;\n  `};\n\n  ${props => props.theme === 'primary' && css`\n    background: #e2088011;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f311;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f11;\n  `};\n`\n\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber, bigNumberify } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count + 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count - 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    getChannelsMetaAsync = async (atIndex, numChannels) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n\n        if (atIndex == -1) {\n          atIndex = channelsCount - 1;\n        }\n\n        if (numChannels == -1) {\n          numChannels = channelsCount;\n        }\n\n        // Get channels\n        let channelsMeta = [];\n        let channelsDummy = [];\n\n        // prefil and then refil\n        let count = 0;\n        for (let i = 0; i < numChannels; i++) {\n          const assignedChannelID = atIndex - i;\n          channelsDummy[count] = assignedChannelID;\n          count = count + 1;\n        }\n\n        const promises = channelsDummy.map(async (channelID) => {\n          // Match the cache\n          await this.getChannelMetaAsync(channelID)\n            .then(response => {\n              const mappings = { ...response };\n              mappings.id = channelID;\n\n              channelsMeta = [mappings, ...channelsMeta];\n            })\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        await Promise.all(promises);\n\n        channelsMeta.sort((a, b) => {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        });\n\n        // return channels meta\n        console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", atIndex - numChannels + 1, atIndex, channelsMeta);\n        resolve(channelsMeta);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;\n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.publicKeyRegistered = true;\n      }\n\n      contract.once(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { Device } from 'assets/Device';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\nimport { IoMdPeople } from 'react-icons/io';\nimport { GiTwoCoins } from 'react-icons/gi';\n\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from \"ethers\";\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [ channelJson, setChannelJson ] = React.useState({});\n  const [ subscribed, setSubscribed ] = React.useState(false);\n  const [ loading, setLoading ] = React.useState(true);\n\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n\n\n  React.useEffect(() => {\n    fetchChannelJson();\n    registerCallbacks();\n  }, [account, channelObject]);\n\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\n    const subs = await EPNSCoreHelper.getSubscribedStatus(account, channelObject.addr, epnsReadProvider);\n    setSubscribed(subs);\n\n    setChannelJson(channelJson);\n    setLoading(false);\n  }\n\n  // to register callbacks\n  const registerCallbacks = () => {\n    UsersDataStore.instance.addCallbacks(\n      UserEvents.SUBSCRIBED,\n      \"FromViewChannelItem\",\n      () => {\n        setSubscribed(true);\n        channelObject.memberCount = channelObject.memberCount.add(1);\n      }\n    );\n\n    UsersDataStore.instance.addCallbacks(\n      UserEvents.UNSUBSCRIBED,\n      \"FromViewChannelItem\",\n      () => {\n        setSubscribed(false);\n        channelObject.memberCount = channelObject.memberCount.sub(1);\n      }\n    );\n\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.SUBSCRIBER_ANY_CHANNEL,\n      \"FromViewChannelItem\",\n      (channel, user) => {\n        if (channel === channelObject.addr) {\n          channelObject.memberCount = channelObject.memberCount.add(1);\n        }\n      }\n    );\n\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL,\n      \"FromViewChannelItem\",\n      (channel, user) => {\n        if (channel === channelObject.addr) {\n          channelObject.memberCount = channelObject.memberCount.sub(1);\n        }\n      }\n    );\n  }\n\n  // to subscribe\n  const subscribe = async () => {\n    // Check if public key is broadcasted or not\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    if (!userMeta.publicKeyRegistered) {\n      const msg = \"Sign to enable Secrets! (Encrypted Messages)\\n Read more: https://epns.io/secret-messages\";\n\n      // Sign a message and extract public key\n      library\n        .getSigner(account)\n        .signMessage(msg)\n        .then(async signature => {\n          const publicKey = recoverPublicKey(arrayify(hashMessage(msg)), signature);\n          const formattedPubKey = publicKey.slice(0, 2) + publicKey.slice(4);\n\n          subscribeAction(formattedPubKey);\n        })\n        .catch(error => {\n          // Show toast as well\n          toast.dark('Skipped for now... Encrypted messages will require this!', {\n            position: \"bottom-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          subscribeAction(false);\n        })\n    }\n    else {\n      subscribeAction(false);\n    }\n  }\n\n  const subscribeAction = async (withPublicKey) => {\n    setTxInProgress(true);\n\n    let sendWithTxPromise;\n\n    if (withPublicKey) {\n      sendWithTxPromise = epnsWriteProvide.subscribeWithPublicKey(channelObject.addr, withPublicKey);\n    }\n    else {\n      sendWithTxPromise = epnsWriteProvide.subscribe(channelObject.addr);\n    }\n\n    sendWithTxPromise\n      .then(async tx => {\n\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      })\n  }\n\n  const unsubscribeAction = async () => {\n    setTxInProgress(true);\n\n    let sendWithTxPromise = epnsWriteProvide.unsubscribe(channelObject.addr);\n\n    sendWithTxPromise\n      .then(async tx => {\n\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      })\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n          }\n          {!loading &&\n            <ChannelLogoImg src={`${channelJson.icon}`} />\n          }\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          }\n          {!loading &&\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\n          }\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          }\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\"/>\n                <SubscribersCount>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.memberCount)}\n                </SubscribersCount>\n              </Subscribers>\n              <Pool>\n                <GiTwoCoins size={20} color=\"#ccc\"/>\n                <PoolShare>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\n                </PoolShare>\n              </Pool>\n            </>\n          }\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library &&\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading &&\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            }\n            {!loading && !subscribed &&\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={txInProgress}>Subscribe</ActionTitle>\n              </SubscribeButton>\n            }\n            {!loading && subscribed &&\n              <>\n              {isOwner &&\n                <OwnerButton disabled>Owner</OwnerButton>\n              }\n              {!isOwner &&\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\n                  {txInProgress &&\n                    <ActionLoader>\n                      <Loader\n                       type=\"Oval\"\n                       color=\"#FFF\"\n                       height={16}\n                       width={16}\n                      />\n                    </ActionLoader>\n                  }\n                  <ActionTitle hideit={txInProgress}>Unsubscribe</ActionTitle>\n                </UnsubscribeButton>\n              }\n              </>\n            }\n          </ChannelActions>\n        </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  max-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n`\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [loading, setLoading] = React.useState(true);\n  const [channels, setChannels] = React.useState([]);\n  const [user, setUser] = React.useState(null);\n  const [owner, setOwner] = React.useState(null);\n\n  React.useEffect(() => {\n    fetchChannels();\n  }, [account]);\n\n  // to fetch channels\n  const fetchChannels = async () => {\n    // get and set user and owner first\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    setUser(userMeta);\n\n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\n    setOwner(ownerAddr);\n\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(-1, -1);\n\n    // sort this again, this time with subscriber count\n    // channelsMeta.sort((a, b) => {\n    //   if (a.memberCount.toNumber() < b.memberCount.toNumber()) return -1;\n    //   if (a.memberCount.toNumber() > b.memberCount.toNumber()) return 1;\n    //   return 0;\n    // });\n\n    // Filter out channel\n\n    setChannels(channelsMeta);\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && channels.length == 0 &&\n        <ContainerInfo>\n          <DisplayNotice\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n            theme=\"primary\"\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && channels.length != 0 &&\n        <Items id=\"scrollstyle-secondary\">\n\n          {Object.keys(channels).map(index => {\n            const isOwner = (\n              channels[index].addr === account ||\n              (account === owner && channels[index].addr === \"0x0000000000000000000000000000000000000000\")\n            );\n\n            if (channels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\n              return (\n                <ViewChannelItem\n                  key={channels[index].addr}\n                  channelObject={channels[index]}\n                  isOwner={isOwner}\n                  epnsReadProvider={epnsReadProvider}\n                  epnsWriteProvide={epnsWriteProvide}\n                />\n              );\n            }\n            else if (channels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\n              return (\n                <ViewChannelItem\n                  key={channels[index].addr}\n                  channelObject={channels[index]}\n                  isOwner={isOwner}\n                  epnsReadProvider={epnsReadProvider}\n                  epnsWriteProvide={epnsWriteProvide}\n                />\n              );\n            }\n            else {\n              return null;\n            }\n          })}\n        </Items>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default ViewChannels;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { FiLink } from 'react-icons/fi';\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport CryptoHelper from 'helpers/CryptoHelper';\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')();\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\n];\n\n// Create Header\nfunction SendNotifications() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n\n  const [nfRecipient, setNFRecipient] = React.useState('');\n  const [nfType, setNFType] = React.useState('');\n\n  const [nfSub, setNFSub] = React.useState('');\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n\n  const [nfMsg, setNFMsg] = React.useState('');\n\n  const [nfCTA, setNFCTA] = React.useState('');\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n\n  const [nfMedia, setNFMedia] = React.useState('');\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n\n  const [nfInfo, setNFInfo] = React.useState('');\n\n  React.useEffect(() => {\n    if (nfType === \"1\") {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    }\n    else {\n      setNFRecipient('');\n    }\n  }, [nfType]);\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Toastify\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // Form signer and contract connection\n    var signer = library.getSigner(account);\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = '';\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMediaEnabled)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      const input = JSON.stringify(\n        {\n          \"notification\": {\n            \"title\": nsub,\n            \"body\": nmsg\n          },\n          \"data\": {\n            \"type\": nfType,\n            \"secret\": secretEncrypted,\n            \"asub\": asub,\n            \"amsg\": amsg,\n            \"acta\": acta,\n            \"aimg\": aimg\n          }\n        }\n      );\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      }\n      catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log (\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.sendNotification(nfRecipient, identityBytes);\n\n    console.log (\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Transaction...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log (\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000\n        });\n\n        await tx.wait(1);\n        console.log (\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType('');\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n      })\n      .catch(err => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\n            </H2>\n            <H3>EPNS supports three types of notifications (for now!). <b>Groups</b>, <b>Secrets</b> and <b>Targetted</b>.</H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content>\n          <Item align=\"stretch\">\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleSendMessage}\n            >\n              <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\n                  <DropdownStyledParent>\n                    <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\n                  </DropdownStyledParent>\n                </Item>\n                <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\n\n                {nfType &&\n                  <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\n                    </ItemH>\n                  </ItemH>\n                }\n              </Item>\n\n              {!nfType &&\n                <Item padding=\"0px 20px 30px 20px\" />\n              }\n\n              {(nfType === \"2\" || nfType === \"3\") &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Enter recipient wallet address\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    border=\"1px solid #674c9f\"\n                    bg=\"#fff\"\n                    value={nfRecipient}\n                    onChange={(e) => {setNFRecipient(e.target.value)}}\n                  />\n                  {nfRecipient.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {nfType && nfSubEnabled &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Subject of Notification\"\n                    padding=\"12px\"\n                    borderBottom=\"1px solid #000\"\n                    weight=\"400\"\n                    size=\"1.2em\"\n                    bg=\"#fff\"\n                    value={nfSub}\n                    onChange={(e) => {setNFSub(e.target.value)}}\n                  />\n                  {nfSub.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <TextField\n                    required\n                    placeholder=\"Notification Message\"\n                    rows=\"6\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    weight=\"400\"\n                    border=\"1px solid #000\"\n                    bg=\"#fff\"\n                    value={nfMsg}\n                    onChange={(e) => {setNFMsg(e.target.value)}}\n                    autocomplete=\"off\"\n                  />\n                </Item>\n              }\n\n              {nfType && nfMediaEnabled &&\n                <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <BsFillImageFill size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Media URL for Notification\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfMedia}\n                      onChange={(e) => {setNFMedia(e.target.value)}}\n                    />\n                    {nfMedia.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfType && nfCTAEnabled &&\n                <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <FiLink size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Call to Action Link\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfCTA}\n                      onChange={(e) => {setNFCTA(e.target.value)}}\n                    />\n                    {nfCTA.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfInfo && nfProcessing != 1 &&\n                <Item\n                  color=\"#fff\"\n                  bg=\"#e1087f\"\n                  padding=\"10px 15px\"\n                  margin = \"15px 0px\"\n                >\n                  <Span\n                    color=\"#fff\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                    weight=\"400\"\n                    size=\"1em\"\n                  >\n                    {nfInfo}\n                  </Span>\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Button\n                    bg='#e20880'\n                    color='#fff'\n                    flex=\"1\"\n                    radius=\"0px\"\n                    padding=\"20px 10px\"\n                    disabled={nfProcessing == 1 ? true : false}\n                  >\n                    {nfProcessing == 1 &&\n                      <Loader\n                         type=\"Oval\"\n                         color=\"#fff\"\n                         height={24}\n                         width={24}\n                        />\n                    }\n                    {nfProcessing != 1 &&\n                      <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\n                    }\n                  </Button>\n                </Item>\n              }\n            </FormSubmision>\n          </Item>\n        </Content>\n      </Section>\n\n\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst DropdownStyledParent = styled.div `\n  .is-open {\n    margin-bottom: 130px;\n  }\n`\n\nconst DropdownStyled = styled(Dropdown)`\n\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`\n\n\n// Export Default\nexport default SendNotifications;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport SendNotifications from 'components/SendNotifications';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <SendNotifications />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport Loader from 'react-loader-spinner'\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nimport Feedbox from 'segments/Feedbox';\nimport ViewChannels from 'segments/ViewChannels';\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  React.useEffect(() => {\n    const contractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, library);\n    setEpnsReadProvider(contractInstance);\n\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n      setEpnsWriteProvider(signerInstance);\n    }\n\n  }, [account]);\n\n  React.useEffect(() => {\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(1);\n    setChannelJson([]);\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(account, epnsReadProvider);\n      ChannelsDataStore.instance.init(account, epnsReadProvider);\n\n      checkUserForChannelRights();\n    }\n\n  }, [epnsReadProvider]);\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.ADD_CHANNEL_SELF,\n      \"FromCreateChannel\",\n      () => {\n        checkUserForChannelRights();\n      }\n    );\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n    // Check if account is admin or not and handle accordingly\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, epnsReadProvider)\n      .then(response => {\n        console.log(response);\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 &&\n          <Feedbox\n            epnsReadProvider={epnsReadProvider}\n           />\n        }\n        {controlAt == 1 &&\n          <ViewChannels\n            epnsReadProvider={epnsReadProvider}\n            epnsWriteProvide={epnsWriteProvider}\n          />\n        }\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\n          <ChannelCreationDashboard />\n        }\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\n          <ChannelOwnerDashboard />\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 25%;\n  height: 120px;\n  min-width: 240px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.5) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\n\nimport styled, { css } from 'styled-components';\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const { active, error, account, chainId } = useWeb3React();\n  const randseed = new Array(4);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n\n    }\n  }, [account]);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Ropsten\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  // to create blockies\n\n  return (\n    <HeaderStyle>\n      <ProfileContainer>\n      {active && !error &&\n        <Profile />\n      }\n      {!active &&\n        <Logo src=\"epns.png\" />\n      }\n      </ProfileContainer>\n      <UserControls>\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressedCB}\n            width={40}\n            height={40}\n          />\n        }\n      </UserControls>\n      <NetworkDisplayer>\n        {!!error &&\n          <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n        }\n        {!active && !error &&\n          <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n        }\n        <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n      </NetworkDisplayer>\n\n    </HeaderStyle>\n  );\n}\n\n// CSS Styles\nconst HeaderStyle = styled.div`\n  height: 100%;\n  padding: 10px 15px;\n  background: rgb(255,255,255);\n  background: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 21%);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justfy-content: flex-start;\n`\n\nconst Logo = styled.img`\n  height: 45px;\n`\n\nconst UserControls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ImageButton = styled.button`\n\n`\n\nconst NetworkDisplayer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport Loader from 'react-loader-spinner'\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  portis,\n  network\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst connectorsByName: { [name: string]: AbstractConnector } = {\n  Injected: injected,\n  Network: network,\n  Portis: portis\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        🔢\n      </span>\n      <span>\n        {Number.isInteger(blockNumber)\n          ? blockNumber.toLocaleString()\n          : blockNumber === null\n          ? 'Error'\n          : !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        🤖\n      </span>\n      <span>\n        {account === undefined\n          ? ''\n          : account === null\n          ? '-'\n          : `${account.substring(0, 6)}...${account.substring(account.length - 4)}`}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        💰\n      </span>\n      <span>\n        {!!balance\n          ? `Ξ${parseFloat(balance).toPrecision(4)}`\n          : balance === null\n          ? 'Error'\n          : account === null\n          ? '-'\n          : !!account && !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction HeaderOld() {\n  const { active, error } = useWeb3React()\n\n  return (\n    <>\n\n      <h5\n        style={{\n          display: 'grid',\n          gridGap: '0rem',\n          gridTemplateColumns: '1fr min-content 1fr',\n          maxWidth: '20rem',\n          lineHeight: '2rem',\n          margin: 'auto'\n        }}\n      >\n        <ChainId />\n        <BlockNumber />\n        <Account />\n        <Balance />\n      </h5>\n    </>\n  )\n}\n\nfunction initializeGA() {\n  ReactGA.initialize('231212683');\n  ReactGA.pageview('/homepage');\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-1');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <ProviderUpperContainer>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <ProviderContainer>\n              {Object.keys(connectorsByName).map(name => {\n                const currentConnector = connectorsByName[name]\n                const activating = currentConnector === activatingConnector\n                const connected = currentConnector === connector\n                const disabled = !triedEager || !!activatingConnector || connected || !!error\n                const image = name === 'Injected' ? './metamask.png' : name === 'Portis' ? './portis.png' : './ninja.png';\n\n                return (\n                  <ProviderButton\n                    disabled={disabled}\n                    key={name}\n                    onClick={() => {\n                      setActivatingConnector(currentConnector)\n                      activate(connectorsByName[name])\n                    }}\n                    border={name === 'Injected' ? '#e20880' : name === 'Portis' ? '#35c5f3' : '#674c9f'}\n                  >\n                    <ProviderImage src={image} />\n\n                    <ProviderLabel>\n                      {activating &&\n                        <Loader\n                           type=\"Oval\"\n                           color=\"#35c5f3\"\n                           height={20}\n                           width={20}\n                        />\n                      }\n                      {!activating &&\n                        <>\n                        {name === 'Injected' ? 'Connect with MetaMask' : name === 'Portis' ? 'Connect with Portis' : 'Login as Ninja'}\n                        </>\n                      }\n\n                    </ProviderLabel>\n\n                  </ProviderButton>\n                )\n              })}\n            </ProviderContainer>\n          </ProviderUpperContainer>\n        }\n\n        {active &&\n          <div\n            style={{\n              display: 'grid',\n              gridGap: '1rem',\n              gridTemplateColumns: 'fit-content',\n              maxWidth: '20rem',\n              margin: 'auto',\n              marginTop: '1200px'\n            }}\n          >\n            {(active || error) && (\n              <button\n                style={{\n                  height: '3rem',\n                  marginTop: '2rem',\n                  borderRadius: '1rem',\n                  borderColor: 'red',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  deactivate()\n                }}\n              >\n                Deactivate\n              </button>\n            )}\n\n            {!!(library && account) && (\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  library\n                    .getSigner(account)\n                    .signMessage('👋')\n                    .then((signature: any) => {\n                      window.alert(`Success!\\n\\n${signature}`)\n                    })\n                    .catch((error: any) => {\n                      window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\n                    })\n                }}\n              >\n                Sign Message\n              </button>\n            )}\n            {!!(connector === network && chainId) && (\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  ;(connector as any).changeChainId(chainId === 1 ? 3 : 1)\n                }}\n              >\n                Switch Networks\n              </button>\n            )}\n            {connector === portis && (\n              <>\n                {chainId !== undefined && (\n                  <button\n                    style={{\n                      height: '3rem',\n                      borderRadius: '1rem',\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => {\n                      ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\n                    }}\n                  >\n                    Switch Networks\n                  </button>\n                )}\n                <button\n                  style={{\n                    height: '3rem',\n                    borderRadius: '1rem',\n                    cursor: 'pointer'\n                  }}\n                  onClick={() => {\n                    ;(connector as any).close()\n                  }}\n                >\n                  Kill Portis Session\n                </button>\n              </>\n            )}\n          </div>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.div`\n  height: 55px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 20px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderUpperContainer = styled.div`\n  display: flex;\n  flex: 1,\n  align-self: center;\n  flex-direction: column;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 20px;\n  min-width: 200px;\n`\n\nconst ProviderContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 200px;\n  background: #fff;\n  outline: 0;\n  max-width: 200px;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  height: 60px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0xc882dA9660d29c084345083922F8a9292E58787D\",\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { FiLink } from 'react-icons/fi';\n\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport Loader from 'react-loader-spinner';\nimport { bigNumberify, parseUnits } from 'ethers/utils'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')()\n\nconst minStakeFees = 50;\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState('');\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [channelName, setChannelName] = React.useState('');\n  const [channelInfo, setChannelInfo] = React.useState('');\n  const [channelURL, setChannelURL] = React.useState('');\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {\n\n  });\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n  const onDropHandler=(files) =>{\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach(f => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function (e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        }\n        else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      }\n    })\n  }\n\n  const handleLogoSizeLimitation = (base64) => {\n      // Setup Error on higher size of 128px\n      var sizeOf = require('image-size');\n      var base64Data = base64.split(';base64,').pop();\n      var img = Buffer.from(base64Data, 'base64');\n      var dimensions = sizeOf(img);\n\n      // Only proceed if image is equal to or less than 128\n      if (dimensions.width > 128 || dimensions.height > 128) {\n        console.log(\"Image size check failed... returning\");\n        return {\n          success: 0,\n          info: \"Image size check failed, Image should be 128X128PX\"\n        };\n      }\n\n      // only proceed if png or jpg\n      // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n      // char(0) => '/' : jpg\n      // char(0) => 'i' : png\n      let fileext;\n      console.log(base64Data.charAt(0));\n      if (base64Data.charAt(0) == '/') {\n        return {\n          success: 1,\n          info: \"Image checks passed\"\n        };\n      }\n      else if (base64Data.charAt(0) == 'i') {\n        return {\n          success: 1,\n          info: \"Image checks passed\"\n        };\n      }\n      else {\n        return {\n          success: 0,\n          info: \"Image extension should be jpg or png\"\n        };\n      }\n  }\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (isEmpty(channelName) || isEmpty(channelInfo) || isEmpty(channelURL) || isEmpty(channelFile)) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    const input = JSON.stringify(\n      {\n        \"name\": channelName,\n        \"info\": channelInfo,\n        \"url\": channelURL,\n        \"icon\": channelFile\n      }\n    )\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\")\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\")\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(channelType, identityBytes);\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n\n        await library.waitForTransaction(tx.hash);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch(err => {\n        console.log(\"Error --> %o\", err);\n        setProcessing(3);\n        setProcessingInfo(\"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\");\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Create</Span><Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3><b>Ethereum Push Notification Service</b> (EPNS) makes it extremely easy to open and maintain a genuine channel of communication with your users.</H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 1 ? \"active\" : \"inactive\"} />\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 2 ? \"active\" : \"inactive\"} />\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 3 ? \"active\" : \"inactive\"} />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone &&\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">Upload Channel Logo to start the process. Make sure image is 128x128px.</H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n          </Content>\n        </Section>\n      }\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen &&\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item margin=\"-10px 20px 20px 20px\" padding=\"20px 20px 10px 20px\" bg=\"#f1f1f1\">\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span weight=\"400\" size=\"1.0em\" textTransform=\"uppercase\" spacing=\"0.2em\">Amount Staked: {channelStakeFees} DAI</Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg='#e20880'\n                color='#fff'\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {setStakeFeesChoosen(true); setStepFlow(3)}}\n              >\n                <Span color=\"#fff\" weight=\"400\" textTransform=\"uppercase\" spacing=\"0.1em\">Continue</Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      }\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone &&\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n\n              <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength = \"40\"\n                  padding=\"12px\"\n                  borderBottom=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {setChannelName(e.target.value)}}\n                />\n                {channelName.trim().length == 0 &&\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Name of Channel\n                    </Span>\n                  }\n              </Item>\n\n              <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {setChannelInfo(e.target.value)}}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\"/>\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {setChannelURL(e.target.value)}}\n                  />\n                  {channelURL.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Channel's Website URL\n                      </Span>\n                    }\n                  </Item>\n              </ItemH>\n\n              <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Button\n                  bg='#e20880'\n                  color='#fff'\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 &&\n                    <Loader\n                       type=\"Oval\"\n                       color=\"#fff\"\n                       height={24}\n                       width={24}\n                      />\n                  }\n                  {processing != 1 &&\n                    <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Setup Channel\" />\n                  }\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      }\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) &&\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 &&\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader\n                  type=\"Oval\"\n                  color=\"#000\"\n                  height={24}\n                  width={24}\n                />\n              </Item>\n            }\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin = \"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n\n          </Content>\n        </Section>\n      }\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${props => props.bg || \"#fff\"};\n  border: 4px solid ${props => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) => type == \"active\" && css`\n    background: ${props => props.activeBG || \"#ddd\"};\n    border: 4px solid #00000022;\n  `};\n`\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`\n\nconst Info2 = styled(Info)`\n\n`\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`\n\nconst Text = styled.span`\n\n`\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${props => props.theme || '#674c9f'};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`\n\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"0px\"};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: relative;\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"inital\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inital\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inital\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n\n  flex: ${props => props.flex || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-bottom: ${props => props.borderBottom || \"inital\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}