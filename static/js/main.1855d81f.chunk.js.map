{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","components/AliasVerificationModal.js","helpers/EPNSCoreHelper.js","config/index.js","components/NotificationToast.js","api/index.js","singletons/ChannelsDataStore.js","components/ViewNotificationItem.js","segments/Feedbox.tsx","components/DisplayNotice.js","assets/Device.js","singletons/UsersDataStore.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","components/ViewInfoItem.js","segments/Info.tsx","assets/icons/index.js","components/SendNotifications.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","ethers","AliasVerificationModal","onClose","onSuccess","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","color","padding","CustomInput","required","placeholder","radius","border","value","onChange","e","target","margin","flex","self","disabled","onClick","verifyChannelAlias","tx","setTimeout","catch","type","height","width","StyledInput","cursor","size","styled","Input","div","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","num","digits","si","symbol","toFixed","replace","dotenv","etherscanToken","REACT_APP_INFURA_API_KEY","NotificationWrapper","Toaster","NotificationToast","notification","clearToast","LoaderToast","notificationTitle","notificationBody","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","BASE_URL","postReq","path","obj","axios","post","headers","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","epnsReadProvider","epnsCommReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","op","data","subscribers","getChannelJsonAsync","instance","ChannelDetailsWrapper","Container","SkeletonWrapper","props","atW","atH","borderRadius","marginBottom","marginRight","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Pool","PoolShare","ViewNotificationItem","notificationObject","React","setNotification","useEffect","notifications","id","indexTimeStamp","moment","utc","parseInt","local","format","Items","Feedbox","setEpnsReadProvider","setNotifications","finishedFetching","setFinishedFetching","showToast","currentPage","setCurrentPage","ethCommsContract","epnsEthComm","ALLOWED_CORE_NETWORK","loadNotifications","body","count","parsedNotification","results","parseAPINotifications","oldNotifications","finally","subscribe","handlePagination","prevPage","newPage","newNotification","onReceive","existingNotifications","fn","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","notificationId","toLocaleLowerCase","ipfsId","channelJson","ipfsNotification","now","title","name","memberExists","isSubscribed","off","bind","oneAPINotification","payloadId","payload_id","payload","amsg","timeStamp","matches","match","oneNotification","index","Number","showWayPoint","onEnter","Notice","span","theme","css","DisplayNotice","animationIn","animationOut","durationOut","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsCommWriteProvider","epnsWriteProvide","EPNS_DOMAIN","version","verifyingContract","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","txInProgress","setTxInProgress","onCoreNetwork","showNetworkToast","style","fetchChannelJson","channelSubscribers","find","sub","toLowerCase","subscribeAction","subscriber","action","_signTypedData","signature","txToast","toaster","contractAddress","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","src","icon","href","rel","info","poolContribution","Faucets","overflow","pos","top","right","direction","textAlign","ContainerInfo","CenterContainer","ViewChannels","controlAt","moreLoading","setMoreLoading","setChannels","setChannelLength","paginatedChannels","setPaginatedChannels","setUser","owner","setOwner","page","setPage","channelsVisited","fetchInitialsChannelMeta","prev","slice","updateCurrentPage","loadMoreChannelMeta","ownerAddr","totalChannelsLength","newPageNumber","startingPoint","moreChannels","oldChannels","keys","channellized","AppLink","AppLinkText","ViewInfoItem","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","InfoBox","Info","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","DropdownStyled","Dropdown","SendNotifications","nfProcessing","setNFProcessing","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","includes","bodyValidated","notificationToast","validated","handleSendMessage","preventDefault","epnscore","communicatorContract","ETH_COMMUNICATOR_NETWORK","nsub","nmsg","asub","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","INFO","wait","field","trim","justify","onSubmit","minWidth","options","option","display","Switch","checked","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsCommReadProvider","epnsWriteProvider","setEpnsWriteProvider","setEpnsCommWriteProvider","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","status","secd","aliasIsVerified","coreContractInstance","commAddress","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","ownerAccount","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","className","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","currentConnector","image","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","Boolean","location","hostname","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsRopstenComm","epnsRopstenCommAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","Step","activeBG","Line","h1","Minter","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","channelStakeFees","setChannelStakeFees","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","alias","blockchain","chain_id","daiContract","fees","parseUnits","sendTransactionPromise","approve","waitForTransaction","hash","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","defaultValue","onChangeCommitted","aria-labelledby","valueLabelDisplay","step","marks","min","max","maxlength","randseed","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.1855d81f.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [\n  3 ,//for ropsten\n  80001 //for mumbai\n];\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 3: RPC_URLS[3] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 3,\n  url: RPC_URLS[3],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n            // await tx.wait(1);\n            // setLoading(\"Transaction Mined!\");\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter ethereum wallet address of this channel\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={submitAlias}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Verify Alias\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.mapAddressChannels(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://backend-staging.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from 'api';\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      // use the communicator contract for the below\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        // if (this.state.channelsMeta[channel]) {\n        //   const channelID = this.state.channelsMeta[channel];\n        //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n        //   count = count - 1;\n        //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        // }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    // get channels meta in a paginated format\n    // by passing in the starting index and the number of items per page\n    getChannelsMetaAsync = async (startIndex, pageCount) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n        let stopIndex = startIndex + pageCount;\n\n        // if the stop index is -1 then get all channels\n        if (stopIndex == -1 || stopIndex > channelsCount) {\n          stopIndex = channelsCount;\n        }\n\n        // initialise an array with the values from 0 to the length of the number of channels\n        let channelIDs = [];\n\n        for(let i = startIndex; i < stopIndex ; i++){\n          channelIDs.push(i)\n        }\n\n        const promises = channelIDs.map(async (channelID) => {\n          // Match the cache\n          return this.getChannelMetaAsync(channelID)\n            .then(response => response )\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        const channelMetaData = await Promise.all(promises);\n\n        // return channels meta\n        // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n        resolve(channelMetaData);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;\n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    getChannelSubscribers = async (channelAddress) => {\n      return postReq(\"/channels/get_subscribers\", { channel: channelAddress, op: 'read' })\n        .then(({ data }) => data.subscribers)\n        .catch((err) => {\n          console.log(`getChannelSubscribers => ${err.message}`);\n          return []\n        });\n    };\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport Skeleton from '@yisheng90/react-loading';\n\nimport { useWeb3React } from '@web3-react/core';\nimport moment from 'moment';\n\n\nfunction ViewNotificationItem({ notificationObject }) {\n  const { account, library } = useWeb3React();\n  const [ notification, setNotification ] = React.useState(null);\n  const [ subscribed, setSubscribed ] = React.useState(false);\n  const [ loading, setLoading ] = React.useState(true);\n\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n\n\n  React.useEffect(() => {\n    notifications();\n  }, [notificationObject]);\n\n  // to set notifications\n  const notifications = async () => {\n    setNotification(notificationObject)\n    setLoading(false);\n  }\n\n  // render\n  return (\n    <Container key={notificationObject.id}>\n      <ChannelDetailsWrapper>\n          <ChannelTitle>\n            {loading &&\n              <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n            }\n            {!loading &&\n              <ChannelTitleLink>{notification.notificationTitle}</ChannelTitleLink>\n            }\n          </ChannelTitle>\n          <ChannelDesc>\n            {loading &&\n              <>\n                <SkeletonWrapper atH={5} atW={100}>\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n                </SkeletonWrapper>\n\n                <SkeletonWrapper atH={5} atW={100}>\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n                </SkeletonWrapper>\n\n                <SkeletonWrapper atH={5} atW={100}>\n                  <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n                </SkeletonWrapper>\n              </>\n            }\n            {!loading &&\n\n              <ChannelDescLabel>{notification.notificationBody}</ChannelDescLabel>\n            }\n          </ChannelDesc>\n        </ChannelDetailsWrapper>\n\n        <ChannelMeta>\n          {!loading &&\n            <>\n              <Pool>\n                <br></br>\n                <PoolShare>\n                { notification.indexTimeStamp? moment\n\t\t\t\t\t\t\t\t\t\t\t\t.utc(parseInt(notification.indexTimeStamp) * 1000)\n\t\t\t\t\t\t\t\t\t\t\t\t.local()\n\t\t\t\t\t\t\t\t\t\t\t\t.format(\"DD MMM YYYY | hh:mm A\"): \"N/A\"}\n                </PoolShare>\n              </Pool>\n            </>\n          }\n        </ChannelMeta>\n    </Container>\n  );\n}\n\n// css styles\nconst ChannelDetailsWrapper = styled.div`\n  align-self: center;\n  max-width: 80%;\n`;\n\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 30px 20px;\n\n  justify-content: space-between;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 10px;\n  margin-left: 4px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 550;\n  color: #e20880;\n  font-size: 18px;\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n  margin: 0px 5px;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  // padding: 2px 8px;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 11px;\n  align-self: flex-end;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\n\n// Export Default\nexport default ViewNotificationItem;\n","import React from \"react\";\nimport axios from 'axios';\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport {ALLOWED_CORE_NETWORK} from 'pages/Home'\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\n\nimport ViewNotificationItem from \"components/ViewNotificationItem\";\nimport NotificationToast from \"components/NotificationToast\";\nimport hex2ascii from 'hex2ascii'\n\nconst NOTIFICATIONS_URL = \"https://backend-staging.epns.io/apis/feeds/get_feeds\";\n// Create Header\nfunction Feedbox() {\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\n  const { account, library, chainId } = useWeb3React();\n\n  const [notifications, setNotifications] = React.useState([]);\n  // since we dont have how many notifications there are in total\n  // we use this field to note when there are no more notifications to load\n  const [finishedFetching, setFinishedFetching] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [toast, showToast] = React.useState(null);\n\n  const [currentPage, setCurrentPage] = React.useState(1);\n  //define query\n  const notificationsPerPage = 6;\n\n  React.useEffect(() => {\n    const signer = library.getSigner(account);\n    // define the epns comms contracts\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const communicatorContract = chainId === ALLOWED_CORE_NETWORK ? ethCommsContract : polygonCommsContract;\n    // define the epns comms contracts\n    setEpnsReadProvider(communicatorContract);\n  }, [chainId]);\n  \n  const loadNotifications = (currentPage) => {\n    const body = {\n      \"user\": account,\n      \"page\": currentPage,\n      \"pageSize\": notificationsPerPage,\n      \"op\":\"read\"\n    }\n    axios.post(NOTIFICATIONS_URL, body)\n    .then(({data}) => {\n      const {count, results} = data;\n      const parsedNotification = results.map(parseAPINotifications);\n      if(count === 0){\n        setFinishedFetching(true);\n      }\n      setNotifications((oldNotifications) => ([\n        ...oldNotifications,\n        ...parsedNotification,\n      ]))\n    })\n    .catch(err => {\n        console.log(`\n        ============== There was an error [loadNotifications] ============\n        `, err.message);\n    }).finally(() => {\n      setLoading(false);\n    })\n  }\n\n  const clearToast = () => showToast(null);\n\n  React.useEffect(() => {\n    if (epnsReadProvider) {\n      loadNotifications(currentPage);\n      return subscribe()\n    }\n  }, [epnsReadProvider]);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n\n  //function to query more notifications\n  const handlePagination = async() => {\n    await setCurrentPage((prevPage) => {\n      const newPage = prevPage + 1;\n      loadNotifications(newPage);\n      return newPage;\n    });\n  };\n  \n  const subscribe = () => {\n    if (account) {\n      return newNotification(onReceive);\n    }\n  };\n\n  //handle new notification\n  const onReceive = async notification => {\n    showToast(notification);\n    setNotifications(existingNotifications => [notification, ...existingNotifications]);\n    // setNotifications(notifications => [notification].concat(notifications));\n  };\n\n  //subscribe to SendNotification\n  const newNotification = (fn) => {\n    const event = 'SendNotification'\n\n    //callback function for listener\n    const cb = async (\n      eventChannelAddress: string,\n      eventUserAddress: string,\n      identityHex: string\n    ) => {\n      const userAddress = account\n      const identity = hex2ascii(identityHex)\n      const notificationId = identity\n        .concat('+')\n        .concat(eventChannelAddress)\n        .concat('+')\n        .concat(eventUserAddress)\n        .toLocaleLowerCase()\n      const ipfsId = identity.split('+')[1];\n\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(eventChannelAddress);\n\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\n      fetch(url)\n        .then(result => result.json())\n        .then(result => {\n      const ipfsNotification = {...result}\n      const notification = {\n        id: notificationId,\n        userAddress: eventUserAddress,\n        channelAddress: eventChannelAddress,\n        indexTimeStamp: Date.now() / 1000, // todo\n        notificationTitle: ipfsNotification.notification.title || channelJson.name,\n        notificationBody: ipfsNotification.notification.body,\n        // ...ipfsNotification.data,\n      }\n      if (ipfsNotification.data.type === '1') {\n        const isSubscribed = \n        epnsReadProvider.memberExists(\n          userAddress,\n          eventChannelAddress\n        )\n        .then(isSubscribed => {\n          if (isSubscribed) {\n            fn(notification)\n          }\n        })\n      } else if (userAddress === eventUserAddress) {\n        fn(notification)\n      }\n      })\n      .catch(err => {\n        console.log(\"!!!Error, getting new notification data from ipfs --> %o\", err);\n      });\n    }\n    epnsReadProvider.on(event, cb)\n    return epnsReadProvider.off.bind(epnsReadProvider, event, cb)\n  }\n  // transform the data gotten from the API into a workable format\n  const parseAPINotifications = (oneAPINotification) => {\n    // extract required data\n    let {\n      payload_id: payloadId,\n      payload: {\n        data: {\n          amsg\n        },\n        notification: {\n          body,\n          title\n        }\n      }\n    } = oneAPINotification;\n\n    let timeStamp = \"\";\n    // parse the text for the timestamp\n    const matches = amsg.match(/\\[timestamp:(.*?)\\]/);\n    if (matches) {\n      timeStamp = matches[1];\n      amsg = amsg.replace(/ *\\[timestamp:[^)]*\\] */g, \"\");\n    }\n    // save payload into object\n    const parsedNotification = {\n      id: payloadId,\n      notificationBody: body,\n      notificationTitle: title,\n      indexTimeStamp: parseInt(timeStamp)\n    };\n    return parsedNotification\n  };\n  const showWayPoint = (index) => {\n    return (Number(index) === notifications.length - 1) && !finishedFetching;\n  }\n\n  // Render\n  return (\n    <>\n      <Container>\n        {notifications &&\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {  \n              return (\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = { () => handlePagination()}/>)}\n                <ViewNotificationItem\n                  key={oneNotification.id}\n                  notificationObject={oneNotification}\n                />\n                </>\n              )\n              })\n            }\n          </Items>\n        }\n        {(loading) && \n          <Loader\n          type=\"Oval\"\n          color=\"#35c5f3\"\n          height={40}\n          width={40}\n        />\n        }\n      \n        {\n        toast && \n        <NotificationToast\n          notification={toast}\n          clearToast = {clearToast}\n          />\n        }\n      </Container>\n    </>\n  );\n}\n\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n// css styles\nconst Container = styled.div`\ndisplay: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { Device } from 'assets/Device';\nimport { recoverTypedSignature_v4 as recoverTypedSignatureV4 } from \"eth-sig-util\"\n\nimport { ToastContainer, toast as toaster  } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\nimport { IoMdPeople } from 'react-icons/io';\nimport { GiTwoCoins } from 'react-icons/gi';\n \nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from \"ethers\";\n//import { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\nimport NotificationToast from \"components/NotificationToast\";\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\nimport { ALLOWED_CORE_NETWORK } from 'pages/Home';\nimport { postReq } from \"api\";\n// const VERIFYING_CONTRACT = \"0xc882da9660d29c084345083922f8a9292e58787d\";\n\n// Create Header\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsCommWriteProvider, epnsWriteProvide, epnsCommReadProvider }) {\n  const { account, library, chainId } = useWeb3React();\n  const EPNS_DOMAIN = {\n    name: 'EPNS',\n    version: '1.0.0',\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address ,\n  }\n\n  const [ channelJson, setChannelJson ] = React.useState({});\n  const [ subscribed, setSubscribed ] = React.useState(true);\n  const [ loading, setLoading ] = React.useState(true);\n  const [ memberCount, setMemberCount ] = React.useState(0);\n\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n  // toast related section\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\n      notificationBody: \"Please connect to the Ropsten network to opt-in/opt-out of channels\"\n    });\n  }\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n  // toast related section\n\n\n  React.useEffect(() => {\n    fetchChannelJson();\n  }, [account, channelObject]);\n\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\n    const subs = await EPNSCoreHelper.getSubscribedStatus(account, channelObject.addr, epnsCommReadProvider);\n    const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(channelObject.addr);\n    const subscribed = channelSubscribers.find(sub => {\n      return sub.toLowerCase() === account.toLowerCase();\n    });\n    setMemberCount(channelSubscribers.length);\n    setSubscribed(subscribed);\n\n    setChannelJson(channelJson);\n\n    setLoading(false);\n  }\n\n  // to subscribe\n  const subscribe = async () => {\n    if(!onCoreNetwork){\n      return showNetworkToast();\n    } else {\n      subscribeAction(false);\n    }\n  }\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    const type = {\n      Subscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"subscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" }\n      ],\n    };\n    const message = {\n        channel: channelObject.addr,\n        subscriber: account,\n        action: \"Subscribe\"\n    }\n\n    const signature = await library.getSigner(account)._signTypedData(\n      EPNS_DOMAIN,\n      type,\n      message\n    );\n\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    postReq('/channels/subscribe_offchain', {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address \n    }).then((res) => {\n      setSubscribed(true);\n      setMemberCount(memberCount + 1);\n      toaster.update(txToast, {\n        render: \"Sucesfully opted into channel !\",\n        type: toaster.TYPE.SUCCESS,\n        autoClose: 5000\n      });\n      console.log(res);\n    }).catch(err => {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n      console.log(err);\n    }).finally(() => {\n      setTxInProgress(false);\n    })\n    \n    // make a post request to server with data containing the details\n\n    // let sendWithTxPromise;\n    // sendWithTxPromise = epnsCommWriteProvider.subscribe(channelObject.addr);\n\n    // sendWithTxPromise\n    //   .then(async tx => {\n\n    //     let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n    //       position: \"bottom-right\",\n    //       autoClose: false,\n    //       hideProgressBar: true,\n    //       closeOnClick: true,\n    //       pauseOnHover: true,\n    //       draggable: true,\n    //       progress: undefined,\n    //     });\n\n    //     try {\n    //       await library.waitForTransaction(tx.hash);\n\n    //       toaster.update(txToast, {\n    //         render: \"Transaction Completed!\",\n    //         type: toaster.TYPE.SUCCESS,\n    //         autoClose: 5000\n    //       });\n    //       setSubscribed(true);\n    //       setTxInProgress(false);\n    //       setMemberCount(memberCount + 1);\n    //     }\n    //     catch(e) {\n    //       toaster.update(txToast, {\n    //         render: \"Transaction Failed! (\" + e.name + \")\",\n    //         type: toaster.TYPE.ERROR,\n    //         autoClose: 5000\n    //       });\n\n    //       setTxInProgress(false);\n    //     }\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //     toaster.dark('Transaction Cancelled!', {\n    //       position: \"bottom-right\",\n    //       type: toaster.TYPE.ERROR,\n    //       autoClose: 5000,\n    //       hideProgressBar: false,\n    //       closeOnClick: true,\n    //       pauseOnHover: true,\n    //       draggable: true,\n    //       progress: undefined,\n    //     });\n\n    //     setTxInProgress(false);\n    //   })\n  }\n\n  const unsubscribeAction = async () => {\n    if(!onCoreNetwork){\n      return showNetworkToast();\n    }\n    const type = {\n      Unsubscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"unsubscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" }\n      ],\n    };\n    const message = {\n      channel: channelObject.addr,\n      unsubscriber: account,\n      action: \"Unsubscribe\"\n    }\n    const signature = await library.getSigner(account)._signTypedData(\n      EPNS_DOMAIN,\n      type,\n      message\n    );\n\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    postReq('/channels/unsubscribe_offchain', {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address \n    }).then((res) => {\n      setSubscribed(false);\n      setMemberCount(memberCount + 1);\n      toaster.update(txToast, {\n        render: \"Sucesfully opted out of channel !\",\n        type: toaster.TYPE.SUCCESS,\n        autoClose: 5000\n      });\n      console.log(res);\n    }).catch(err => {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n      console.log(err);\n    }).finally(() => {\n      setTxInProgress(false);\n    })\n    // setTxInProgress(true);\n\n    // let sendWithTxPromise = epnsCommWriteProvider.unsubscribe(channelObject.addr);\n\n    // sendWithTxPromise\n    //   .then(async tx => {\n\n    //     let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n    //       position: \"bottom-right\",\n    //       autoClose: false,\n    //       hideProgressBar: true,\n    //       closeOnClick: true,\n    //       pauseOnHover: true,\n    //       draggable: true,\n    //       progress: undefined,\n    //     });\n\n    //     try {\n    //       await library.waitForTransaction(tx.hash);\n\n    //       toaster.update(txToast, {\n    //         render: \"Transaction Completed!\",\n    //         type: toaster.TYPE.SUCCESS,\n    //         autoClose: 5000\n    //       });\n\n    //       setTxInProgress(false);\n    //       setSubscribed(false);\n    //       setMemberCount(memberCount - 1);\n    //     }\n    //     catch(e) {\n    //       toaster.update(txToast, {\n    //         render: \"Transaction Failed! (\" + e.name + \")\",\n    //         type: toaster.TYPE.ERROR,\n    //         autoClose: 5000\n    //       });\n\n    //       setTxInProgress(false);\n    //     }\n    //   })\n    //   .catch(err => {\n    //     toaster.dark('Transaction Cancelled!', {\n    //       position: \"bottom-right\",\n    //       type: toaster.TYPE.ERROR,\n    //       autoClose: 5000,\n    //       hideProgressBar: false,\n    //       closeOnClick: true,\n    //       pauseOnHover: true,\n    //       draggable: true,\n    //       progress: undefined,\n    //     });\n\n    //     setTxInProgress(false);\n    //   })\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n          }\n          {!loading &&\n            <ChannelLogoImg src={`${channelJson.icon}`} />\n          }\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          }\n          {!loading &&\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\n          }\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          }\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\"/>\n                <SubscribersCount>\n                  {memberCount}\n                </SubscribersCount>\n              </Subscribers>\n              <Pool>\n                <GiTwoCoins size={20} color=\"#ccc\"/>\n                <PoolShare>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\n                </PoolShare>\n              </Pool>\n            </>\n          }\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library &&\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading &&\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            }\n            {!loading && !subscribed &&\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            }\n            {!loading && subscribed &&\n              <>\n              {isOwner &&\n                <OwnerButton disabled>Owner</OwnerButton>\n              }\n              {!isOwner &&\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\n                  {txInProgress &&\n                    <ActionLoader>\n                      <Loader\n                       type=\"Oval\"\n                       color=\"#FFF\"\n                       height={16}\n                       width={16}\n                      />\n                    </ActionLoader>\n                  }\n                  <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                </UnsubscribeButton>\n              }\n              </>\n            }\n          </ChannelActions>\n        </>\n      }\n      { toast && \n        <NotificationToast\n          notification={toast}\n          clearToast = {clearToast}\n        />\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  max-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n`\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Ropsten Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.io/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.ropsten.be/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Ropsten\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide, epnsCommReadProvider, epnsCommWriteProvider }) {\n  const { account, library, chainId } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  const [channels, setChannels] = React.useState([]);\n  const [totalChannelLength, setChannelLength] = React.useState(0);\n  const [paginatedChannels, setPaginatedChannels] = React.useState([]);\n  const [user, setUser] = React.useState(null);\n  const [owner, setOwner] = React.useState(null);\n\n  const [page, setPage] = React.useState(0);\n  const channelsPerPage = 10;\n  const channelsVisited = page * channelsPerPage;\n\n  React.useEffect(() => {\n    setChannels([]);\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n  //update paginatedChannels array when scrolled till the end\n  React.useEffect(() => {\n    if(channels){\n      setPaginatedChannels(prev => [...prev, ...channels.slice(channelsVisited, channelsVisited + channelsPerPage)])\n      // setPaginatedChannels(channels)\n    }\n  }, [channels, page]);\n\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if(loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    setPage((prev) => {\n      const newPage = prev + 1;\n      loadMoreChannelMeta(newPage);\n      return newPage;\n    });\n  }\n\n  // to fetch channels\n  const fetchInitialsChannelMeta = async () => {\n    // get and set user and owner first\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    setUser(userMeta);\n    \n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\n    setOwner(ownerAddr);\n\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(channelsVisited, channelsPerPage);\n    const totalChannelsLength = await ChannelsDataStore.instance.getChannelsCountAsync();\n    setChannelLength(totalChannelsLength)\n    // Filter out channel\n\n    setChannels(channelsMeta);\n    setLoading(false);\n  }\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber) => {\n    const startingPoint = newPageNumber * channelsPerPage;\n    // console.log({startingPoint, channelsPerPage})\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(startingPoint, channelsPerPage);\n    setChannels(oldChannels => ([\n      ...oldChannels,\n      ...moreChannels\n    ]));\n    setMoreLoading(false)\n  }\n\n  // conditionally display the waymore bar which loads more information\n  const showWayPoint = (index) => {\n    return ( Number(index) === paginatedChannels.length -1 )\n  }\n\n  return (\n    <>\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && channels.length == 0 &&\n        <ContainerInfo>\n          <DisplayNotice\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n            theme=\"primary\"\n          />\n        </ContainerInfo>\n      }\n      {!loading && controlAt == 0 && channels.length != 0 &&\n        <Items id=\"scrollstyle-secondary\">\n          <Faucets/>\n\n          {Object.keys(paginatedChannels).map(index => {\n            const isOwner = (\n              paginatedChannels[index].addr === account ||\n              (account === owner && paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\")\n            );\n\n            if (paginatedChannels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\n              return (\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                <div\n                  key={paginatedChannels[index].addr}\n                >\n                  <ViewChannelItem\n                    channelObject={paginatedChannels[index]}\n                    isOwner={isOwner}\n                    epnsReadProvider={epnsReadProvider}\n                    epnsWriteProvide={epnsWriteProvide}\n                    epnsCommReadProvider={epnsCommReadProvider}\n                    epnsCommWriteProvider={epnsCommWriteProvider}\n                  />\n                </div>\n                </>\n              );\n            }\n            else if (paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\n              return (\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                <div\n                  key={paginatedChannels[index].addr}\n                >\n                  <ViewChannelItem\n                    channelObject={paginatedChannels[index]}\n                    isOwner={isOwner}\n                    epnsReadProvider={epnsReadProvider}\n                    epnsWriteProvide={epnsWriteProvide}\n                    epnsCommReadProvider={epnsCommReadProvider}\n                    epnsCommWriteProvider={epnsCommWriteProvider}\n                  />\n                </div>\n                </>\n              );\n            }\n            else {\n              return(\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                </>\n              )\n            }\n          })}\n          {moreLoading && channels.length &&\n            <CenterContainer>\n              <Loader\n              type=\"Oval\"\n              color=\"#35c5f3\"\n              height={40}\n              width={40}\n              />\n            </CenterContainer>\n          }\n        </Items>\n      }\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default ViewChannels;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default Info;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { FiLink } from 'react-icons/fi';\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { CloseIcon } from 'assets/icons';\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport CryptoHelper from 'helpers/CryptoHelper';\nimport { ALLOWED_CORE_NETWORK as ETH_COMMUNICATOR_NETWORK } from 'pages/Home';\nconst ethers = require('ethers');\n\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\n  { value: \"4\", label: 'Subset (IPFS Payload)' },\n];\nconst LIMITER_KEYS = ['Enter', ','];\n\n// Create Header\nfunction SendNotifications() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n\n  const [nfRecipient, setNFRecipient] = React.useState('');\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(''); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState('');\n\n  const [nfSub, setNFSub] = React.useState('');\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n\n  const [nfMsg, setNFMsg] = React.useState('');\n\n  const [nfCTA, setNFCTA] = React.useState('');\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n\n  const [nfMedia, setNFMedia] = React.useState('');\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n\n  const [nfInfo, setNFInfo] = React.useState('');\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if(LIMITER_KEYS.includes(e.key)){\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>(\n        // use this combination to remove duplicates\n        Array.from(new Set([\n        ...oldRecipients,\n        tempRecipeint\n        ]))\n      ));\n      setTempRecipient('');\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress) => {\n    const filteredRecipients = multipleRecipients.filter(rec => rec !== recipientAddress);\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    }\n    else {\n      setNFRecipient('');\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there \n    if(nfType === \"4\" && !multipleRecipients.length){\n      toast.update(notificationToast, {\n        render: \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000\n      });\n      validated = false; \n    }\n    return validated;\n  }\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // do some validation\n    if(!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    var signer = library.getSigner(account);\n    // define the core epns contract\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n    // define the epns comms contracts\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const communicatorContract = chainId === ETH_COMMUNICATOR_NETWORK ? ethCommsContract : polygonCommsContract;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n  \n      // Targetted Notification\n      case \"4\":\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = '';\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        \"notification\": {\n          \"title\": nsub,\n          \"body\": nmsg\n        },\n        \"data\": {\n          \"type\": nfType,\n          \"secret\": secretEncrypted,\n          \"asub\": asub,\n          \"amsg\": amsg,\n          \"acta\": acta,\n          \"aimg\": aimg\n        }\n      };\n\n      // if we are sending a subset type, then include recipients\n      if(nfType === \"4\"){\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      }\n      catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log (\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise;\n\n    anotherSendTxPromise = communicatorContract.sendNotification(account, nfRecipient, identityBytes);\n\n\n    console.log (\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Transaction...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log (\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000\n        });\n\n        await tx.wait(1);\n        console.log (\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType('');\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n      })\n      .catch(err => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\n            </H2>\n            <H3>EPNS supports four types of notifications (for now!). <b>Groups</b>, <b>Secrets</b>, <b>Targetted</b> and <b>Subsets</b>.</H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content>\n          <Item align=\"stretch\">\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleSendMessage}\n            >\n              <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\n                  <DropdownStyledParent>\n                    <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\n                  </DropdownStyledParent>\n                </Item>\n                <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\n\n                {nfType &&\n                  <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\n                    </ItemH>\n                  </ItemH>\n                }\n              </Item>\n\n              {!nfType &&\n                <Item padding=\"0px 20px 30px 20px\" />\n              }\n\n              {(nfType === \"2\" || nfType === \"3\") &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Enter recipient wallet address\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    border=\"1px solid #674c9f\"\n                    bg=\"#fff\"\n                    value={nfRecipient}\n                    onChange={(e) => {setNFRecipient(e.target.value)}}\n                  />\n                  {nfRecipient.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {(nfType === \"4\") &&\n              <>\n                <MultiRecipientsContainer>\n                  {\n                    multipleRecipients.map(oneRecipient => (\n                      <span key={oneRecipient}>\n                        {oneRecipient}\n                        <i onClick={() => removeRecipient(oneRecipient)}><CloseIcon /></i>\n                      </span>\n                    ))\n                  }\n                </MultiRecipientsContainer>\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required={multipleRecipients.length === 0}\n                    placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    border=\"1px solid #674c9f\"\n                    bg=\"#fff\"\n                    value={tempRecipeint}\n                    onKeyPress={handleSubsetInputChange}\n                    onChange={e => {\n                      const text = e.target.value;\n                      if(!LIMITER_KEYS.includes(text)){\n                        setTempRecipient(e.target.value)\n                      }\n                    }}\n                  />\n                  {nfRecipient.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    }\n                </Item>\n              </>\n              }\n\n              {nfType && nfSubEnabled &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Subject of Notification\"\n                    padding=\"12px\"\n                    borderBottom=\"1px solid #000\"\n                    weight=\"400\"\n                    size=\"1.2em\"\n                    bg=\"#fff\"\n                    value={nfSub}\n                    onChange={(e) => {setNFSub(e.target.value)}}\n                  />\n                  {nfSub.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <TextField\n                    required\n                    placeholder=\"Notification Message\"\n                    rows=\"6\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    weight=\"400\"\n                    border=\"1px solid #000\"\n                    bg=\"#fff\"\n                    value={nfMsg}\n                    onChange={(e) => {setNFMsg(e.target.value)}}\n                    autocomplete=\"off\"\n                  />\n                </Item>\n              }\n\n              {nfType && nfMediaEnabled &&\n                <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <BsFillImageFill size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Media URL for Notification\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfMedia}\n                      onChange={(e) => {setNFMedia(e.target.value)}}\n                    />\n                    {nfMedia.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfType && nfCTAEnabled &&\n                <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <FiLink size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Call to Action Link\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfCTA}\n                      onChange={(e) => {setNFCTA(e.target.value)}}\n                    />\n                    {nfCTA.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfInfo && nfProcessing != 1 &&\n                <Item\n                  color=\"#fff\"\n                  bg=\"#e1087f\"\n                  padding=\"10px 15px\"\n                  margin = \"15px 0px\"\n                >\n                  <Span\n                    color=\"#fff\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                    weight=\"400\"\n                    size=\"1em\"\n                  >\n                    {nfInfo}\n                  </Span>\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Button\n                    bg='#e20880'\n                    color='#fff'\n                    flex=\"1\"\n                    radius=\"0px\"\n                    padding=\"20px 10px\"\n                    disabled={nfProcessing == 1 ? true : false}\n                  >\n                    {nfProcessing == 1 &&\n                      <Loader\n                         type=\"Oval\"\n                         color=\"#fff\"\n                         height={24}\n                         width={24}\n                        />\n                    }\n                    {nfProcessing != 1 &&\n                      <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\n                    }\n                  </Button>\n                </Item>\n              }\n            </FormSubmision>\n          </Item>\n        </Content>\n      </Section>\n\n\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst DropdownStyledParent = styled.div `\n  .is-open {\n    margin-bottom: 130px;\n  }\n`\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n  \n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i{\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`\n\n\n// Export Default\nexport default SendNotifications;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport SendNotifications from 'components/SendNotifications';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <SendNotifications />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport Loader from 'react-loader-spinner'\n\nimport AliasVerificationodal from 'components/AliasVerificationModal';\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport config from 'config';\nimport NotificationToast from \"components/NotificationToast\";\nimport Feedbox from 'segments/Feedbox';\nimport ViewChannels from 'segments/ViewChannels';\nimport Info from \"segments/Info\";\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\"\n\nexport const ALLOWED_CORE_NETWORK = 3 //chainId of networks which we have deployed the core contract on\nconst CHANNEL_TAB = 1 //Default to 1 which is the channel tab\nconst NOTIF_TAB = 0;\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB =  CHANNEL_TAB ;//if they are not on a core network.redirect then to the notifications page\n\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null); // read provider for epns core functions\n  const [epnsCommReadProvider, setEpnsCommReadProvider] = React.useState(null); // read provider for epns communicator functions\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\n  const [epnsCommWriteProvider, setEpnsCommWriteProvider] = React.useState(null);\n \n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(true);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\n      notificationBody: \"Please connect to the Ropsten network to access channels\"\n    });\n  }\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n  // toast related section\n\n  React.useEffect(() => {\n    (async function(){\n      const coreProvider = onCoreNetwork ?\n        library : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {etherscan: config.etherscanToken})\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if(!onCoreNetwork){\n        // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\n        const aliasEth = await postReq('/channels/get_alias' , {\n            \"aliasAddress\": account,\n            \"aliasBlockchain\":\"POLYGON_TEST_MUMBAI\", //use this for now, since we are only on polygon network\n            \"op\":\"read\"\n        })\n        .then(({data}) => {\n          console.log({data})\n          const ethAccount =  data || account;\n          setAliasEthAccount(ethAccount);\n          return data;\n        }); \n        if(aliasEth){\n          // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\n          const aliasVerified = await postReq('/channels/get_alias_verification_status', {\n            \"aliasAddress\":account,\n            \"op\":\"read\"\n          })\n          .then(({data}) => {\n            const {status} = data;\n            console.log({secd: data})\n            const aliasIsVerified =  data;\n            setAliasVerified(status);\n            return aliasIsVerified\n          }); \n        } \n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, coreProvider);\n      setEpnsReadProvider(coreContractInstance);\n      // inititalise the read contract for the core network\n  \n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork ? addresses.epnsEthComm : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(commAddress, abis.epnsComm, library);\n      setEpnsCommReadProvider(commContractInstance);\n      // initialise the read contract for the communicator function\n  \n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n        setEpnsWriteProvider(coreSignerInstance);\n        const communicatorSignerInstance = new ethers.Contract(commAddress, abis.epnsComm, signer);\n        setEpnsCommWriteProvider(communicatorSignerInstance)\n      }\n    })();\n\n  }, [account, chainId]);\n\n  React.useEffect(() => {\n    if(!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\n      ChannelsDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\n      checkUserForChannelRights();\n    }\n\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.ADD_CHANNEL_SELF,\n      \"FromCreateChannel\",\n      () => {\n        checkUserForChannelRights();\n      }\n    );\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(response => {\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            // if they arent connected to the right channels then we have to restrict access to here\n            // if(!onCoreNetwork){\n            //   return showNetworkToast();\n            // }\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on ropsten and you dont have a channel, you cannot create except on ropsten, so throw weeoe\n              if(!channelAdmin && !onCoreNetwork){\n                return showNetworkToast();\n              }\n              if(channelAdmin && !aliasVerified && !onCoreNetwork){\n                return setModalOpen(true);\n              }\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded && (onCoreNetwork ? true : aliasVerified) &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {channelAdmin && adminStatusLoaded && (!aliasVerified && !onCoreNetwork) &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>Verify channel alias</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n\n        <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3)\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>Receive Notifs</ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 &&\n          <Feedbox\n            epnsReadProvider={epnsReadProvider}\n          />\n        }\n        {controlAt == 1 &&\n          <ViewChannels\n            epnsReadProvider={epnsReadProvider}\n            epnsCommReadProvider={epnsCommReadProvider}\n            epnsWriteProvide={epnsWriteProvider}\n            epnsCommWriteProvider={epnsCommWriteProvider}\n          />\n        }\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\n          <ChannelCreationDashboard />\n        }\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\n          <ChannelOwnerDashboard />\n        }\n        {controlAt == 3 &&\n          <Info/>\n        }\n        { toast && \n          <NotificationToast\n            notification={toast}\n            clearToast = {clearToast}\n          />\n        }\n        {\n          modalOpen &&\n          <AliasVerificationodal\n            onClose={() => setModalOpen(false)}\n            onSuccess={() => setAliasVerified(true)}\n          />\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.3) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error, account, chainId } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Ropsten or Polygon network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\n\nimport Loader from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  walletconnect,\n  portis,\n  trezor,\n  ledger\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst web3Connectors = {\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-5');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <Item>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH\n                maxWidth=\"800px\"\n                align=\"stretch\"\n              >\n                {Object.keys(web3Connectors).map(name => {\n                  const currentConnector = web3Connectors[name].obj\n                  const activating = currentConnector === activatingConnector\n                  const connected = currentConnector === connector\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\n                  const image = web3Connectors[name].logo\n                  const title = web3Connectors[name].title\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector)\n                        activate(currentConnector)\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  )\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\n            </Span>\n          </Item>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x77589b22d37C94473c17128beeb6bc3DaB58c09a\",\n  epnsEthComm: \"0x5B995e9831Be34aea8Ee38E0389245B6A35493Fd\", // the ropsten core contract\n  epnsPolyComm: \"0x3f9b6838C31F466266d50A8192dE95f5BEb37e8A\", // the ploygon comm contract\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsRopstenCommAbi from \"./abis/epnsRopstenCommunicator.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsRopstenComm: epnsRopstenCommAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      isEmpty(channelAlias)\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    var alias = channelAlias.split(\":\");\n    var blockchain = alias[0];\n    var chain_id = alias[1];\n    var address = alias[2];\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        await library.waitForTransaction(tx.hash);\n        setProcessing(3);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        setProcessing(3);\n        setProcessingInfo(\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n\n    let daiAmount = 1000;\n    const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n    var mintTransactionPromise = daiContract.mint(amount);\n    const tx = await mintTransactionPromise;\n    console.log(tx);\n    await library.waitForTransaction(tx.hash);\n    setProcessingInfo(\"1000 Dai minted successfully!\");\n    console.log(\"Transaction Completed\");\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            <Item align=\"flex-end\">\n              <Minter\n                onClick={() => {\n                  mintDai();\n                }}\n              >\n                <Pool>\n                  <br></br>\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\n                </Pool>\n              </Minter>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel's Alias\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}