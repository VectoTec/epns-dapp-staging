{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","components/AliasVerificationModal.js","helpers/EPNSCoreHelper.js","config/index.js","components/NotificationToast.js","api/index.js","singletons/ChannelsDataStore.js","components/ViewNotificationItem.js","segments/Feedbox.tsx","components/DisplayNotice.js","assets/Device.js","singletons/UsersDataStore.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","components/ViewInfoItem.js","segments/Info.tsx","assets/icons/index.js","components/SendNotifications.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","ethers","AliasVerificationModal","onClose","onSuccess","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","color","padding","CustomInput","required","placeholder","radius","border","value","onChange","e","target","margin","flex","self","disabled","onClick","verifyChannelAlias","tx","setTimeout","catch","type","height","width","StyledInput","cursor","size","styled","Input","div","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","num","digits","si","symbol","toFixed","replace","dotenv","etherscanToken","REACT_APP_INFURA_API_KEY","NotificationWrapper","Toaster","NotificationToast","notification","clearToast","LoaderToast","notificationTitle","notificationBody","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","BASE_URL","postReq","path","obj","axios","post","headers","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","epnsReadProvider","epnsCommReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","op","data","subscribers","getChannelJsonAsync","instance","ChannelDetailsWrapper","Container","SkeletonWrapper","props","atW","atH","borderRadius","marginBottom","marginRight","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Pool","PoolShare","ViewNotificationItem","notificationObject","React","setNotification","useEffect","notifications","id","indexTimeStamp","moment","utc","parseInt","local","format","Items","Feedbox","setEpnsReadProvider","setNotifications","finishedFetching","setFinishedFetching","showToast","currentPage","setCurrentPage","ethCommsContract","epnsEthComm","ALLOWED_CORE_NETWORK","loadNotifications","body","count","parsedNotification","results","parseAPINotifications","oldNotifications","finally","subscribe","handlePagination","prevPage","newPage","newNotification","onReceive","existingNotifications","fn","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","notificationId","toLocaleLowerCase","ipfsId","channelJson","ipfsNotification","now","title","name","memberExists","isSubscribed","off","bind","oneAPINotification","payloadId","payload_id","payload","amsg","timeStamp","matches","match","oneNotification","index","Number","showWayPoint","onEnter","Notice","span","theme","css","DisplayNotice","animationIn","animationOut","durationOut","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsCommWriteProvider","epnsWriteProvide","EPNS_DOMAIN","version","verifyingContract","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","txInProgress","setTxInProgress","onCoreNetwork","showNetworkToast","style","fetchChannelJson","channelSubscribers","find","sub","toLowerCase","subscribeAction","subscriber","action","_signTypedData","signature","txToast","toaster","contractAddress","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","src","icon","href","rel","info","poolContribution","Faucets","overflow","pos","top","right","direction","textAlign","ContainerInfo","CenterContainer","ViewChannels","controlAt","moreLoading","setMoreLoading","setChannels","setChannelLength","paginatedChannels","setPaginatedChannels","setUser","owner","setOwner","page","setPage","channelsVisited","fetchInitialsChannelMeta","prev","slice","updateCurrentPage","loadMoreChannelMeta","ownerAddr","totalChannelsLength","newPageNumber","startingPoint","moreChannels","oldChannels","keys","channellized","AppLink","AppLinkText","ViewInfoItem","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","InfoBox","Info","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","DropdownStyled","Dropdown","SendNotifications","nfProcessing","setNFProcessing","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","includes","bodyValidated","notificationToast","validated","handleSendMessage","preventDefault","epnscore","communicatorContract","ETH_COMMUNICATOR_NETWORK","nsub","nmsg","asub","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","INFO","wait","field","trim","justify","onSubmit","minWidth","options","option","display","Switch","checked","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsCommReadProvider","epnsWriteProvider","setEpnsWriteProvider","setEpnsCommWriteProvider","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","status","secd","aliasIsVerified","coreContractInstance","commAddress","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","ownerAccount","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","className","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","currentConnector","image","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","Boolean","location","hostname","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsRopstenComm","epnsRopstenCommAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","Step","activeBG","Line","h1","Minter","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","channelStakeFees","setChannelStakeFees","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","alias","blockchain","chain_id","daiContract","fees","parseUnits","sendTransactionPromise","approve","waitForTransaction","hash","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","defaultValue","onChangeCommitted","aria-labelledby","valueLabelDisplay","step","marks","min","max","maxlength","randseed","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.b085388b.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\r\nimport {encrypt, decrypt} from 'eccrypto';\r\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CryptoHelper = {\r\n  // To Encrypt with AES\r\n  encryptWithAES: function(message, key) {\r\n    return CryptoJS.AES.encrypt(message, key).toString();\r\n  },\r\n  // To Decrypt with AES\r\n  decryptWithAES: function(message, key) {\r\n    let bytes  = CryptoJS.AES.decrypt(message, key);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n  // To Form Encryted Secret, no more than 15 characters supported\r\n  encryptWithECIES: async function(message, publicKey) {\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\r\n\r\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\r\n\r\n    // Not using it since sqlite2 has some error with this\r\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\r\n\r\n    return encryptedSecret;\r\n  },\r\n  // To Form Decrypted Secret, no more than 15 characters supported\r\n  decryptWithECIES: async function(message, privateKey) {\r\n    // Message is always compressed, not using because sqlite2 has some error with this\r\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\r\n\r\n    return await this.decryptWithPrivateKey(message, privateKey);\r\n  },\r\n  // Encryption with public key\r\n  encryptWithPublicKey: async function(message, publicKey) {\r\n    // Convert compressed public key, starts with 03 or 04\r\n    const pubKeyUint8Array = Uint8Array.from(\r\n      new Buffer(publicKey, 'hex')\r\n    );\r\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\r\n\r\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\r\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\r\n\r\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\r\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\r\n\r\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\r\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\r\n\r\n    return encrypt(\r\n        pubKey,\r\n        Buffer(message)\r\n    ).then(encryptedBuffers => {\r\n      const cipher = {\r\n          iv: encryptedBuffers.iv.toString('hex'),\r\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\r\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\r\n          mac: encryptedBuffers.mac.toString('hex')\r\n      };\r\n      // use compressed key because it's smaller\r\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\r\n      const input = Uint8Array.from(\r\n        new Buffer(cipher.ephemPublicKey, 'hex')\r\n      );\r\n      const keyConvert = publicKeyConvert(input, true)\r\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\r\n\r\n      const keyConvertBuffer = new Buffer(keyConvert);\r\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n      // console.log(keyConvertBuffer);\r\n\r\n      //console.log(keyConvert);\r\n      const compressedKey = keyConvertBuffer.toString('hex')\r\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\r\n      // console.log(compressedKey);\r\n\r\n      const ret = Buffer.concat([\r\n        new Buffer(cipher.iv, 'hex'), // 16bit\r\n        new Buffer(compressedKey, 'hex'), // 33bit\r\n        new Buffer(cipher.mac, 'hex'), // 32bit\r\n        new Buffer(cipher.ciphertext, 'hex') // var bit\r\n      ]).toString('hex')\r\n\r\n      return ret\r\n    });\r\n  },\r\n  // Decryption with public key\r\n  decryptWithPrivateKey: async function(message, privateKey) {\r\n    let encrypted = message;\r\n    const buf = new Buffer(encrypted, 'hex');\r\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\r\n\r\n    encrypted = {\r\n      iv: buf.toString('hex', 0, 16),\r\n      ephemPublicKey: buf.toString('hex', 16, 49),\r\n      mac: buf.toString('hex', 49, 81),\r\n      ciphertext: buf.toString('hex', 81, buf.length)\r\n    };\r\n    // decompress publicKey\r\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\r\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\r\n    const keyConvert = publicKeyConvert(input, false)\r\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\r\n\r\n    const keyConvertBuffer = new Buffer(keyConvert);\r\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n    // console.log(keyConvertBuffer);\r\n\r\n    //console.log(keyConvert);\r\n    const uncompressedKey = keyConvertBuffer.toString('hex')\r\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\r\n    // console.log(uncompressedKey);\r\n\r\n    encrypted.ephemPublicKey = uncompressedKey;\r\n    const twoStripped = privateKey.substring(2)\r\n\r\n    const encryptedBuffer = {\r\n      iv: new Buffer(encrypted.iv, 'hex'),\r\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\r\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\r\n      mac: new Buffer(encrypted.mac, 'hex')\r\n    };\r\n\r\n    return decrypt(\r\n      new Buffer(twoStripped, 'hex'),\r\n      encryptedBuffer\r\n    ).then(decryptedBuffer => decryptedBuffer.toString());\r\n  },\r\n  // Testing of Encryption and Decryption from Public to Private key\r\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\r\n    const startTime = new Date();\r\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\r\n\r\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\r\n    //console.log(compressedKey);\r\n\r\n    // const bytesCompKey = Uint8Array.from(compressedKey);\r\n    //console.log(bytesCompKey);\r\n\r\n    const msgToEncrypt = \"PartialStringAS\";\r\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\r\n    console.log(\"Encryped Message With compressed public key:\" + msg);\r\n\r\n    const encryptionTime = new Date().getTime() - startTime.getTime();\r\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\r\n\r\n    // Decrypt this message\r\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\r\n\r\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\r\n  },\r\n  // To output messge payload if required\r\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\r\n    // Output AES\r\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\r\n    console.log(\"---------------------\");\r\n    console.log(\"secret --> \");\r\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\r\n    const asubE = this.encryptWithAES(subject, secret);\r\n    const amsgE = this.encryptWithAES(message, secret);\r\n    const actaE = this.encryptWithAES(calltoaction, secret);\r\n    const aimgE = this.encryptWithAES(imageurl, secret);\r\n\r\n    console.log(secretEncrypted);\r\n    console.log(\"asub --> \");\r\n    console.log(asubE);\r\n    console.log(\"amsg --> \");\r\n    console.log(amsgE);\r\n    console.log(\"acta --> \");\r\n    console.log(actaE);\r\n    console.log(\"aimg --> \");\r\n    console.log(aimgE);\r\n    console.log(\"decrypted secret --> \");\r\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\r\n    console.log(\"decrypted asub --> \");\r\n    console.log(this.decryptWithAES(asubE, secret));\r\n    console.log(\"decrypted amsg --> \");\r\n    console.log(this.decryptWithAES(amsgE, secret));\r\n    console.log(\"decrypted acta --> \");\r\n    console.log(this.decryptWithAES(actaE, secret));\r\n    console.log(\"decrypted aimg --> \");\r\n    console.log(this.decryptWithAES(aimgE, secret));\r\n  },\r\n  makeid: function (length) {\r\n     var result           = '[' + new Date().toISOString() + '] ';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n};\r\n\r\nexport default CryptoHelper;\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\nimport { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nrequire('dotenv').config();\r\nconst SUPPORTED_CHAIN_IDS = [\r\n  3 ,//for ropsten\r\n  80001 //for mumbai\r\n];\r\nconst POLLING_INTERVAL = 12000\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  3: process.env.REACT_APP_RPC_URL_3 as string\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\r\n\r\n// export const network = new NetworkConnector({\r\n//   urls: { 3: RPC_URLS[3] },\r\n//   defaultChainId: 3,\r\n//   pollingInterval: POLLING_INTERVAL\r\n// })\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 3: RPC_URLS[3] },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n//\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'web3-react example'\r\n// })\r\n//\r\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: 3,\r\n  url: RPC_URLS[3],\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: 'support@epns.io',\r\n  manifestAppUrl: 'https://staging-app.epns.io'\r\n})\r\n\r\n//\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n//\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n//\r\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\r\n\r\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\r\n\r\n// export const squarelink = new SquarelinkConnector({\r\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\r\n//   networks: [1, 100]\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nrequire('dotenv').config();\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized: boolean) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error, activate } = useWeb3React()\r\n\r\n  useEffect((): any => {\r\n    const { ethereum } = window as any\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\")\r\n        activate(injected)\r\n      }\r\n      const handleChainChanged = (chainId: string | number) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n        activate(injected)\r\n      }\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n        if (accounts.length > 0) {\r\n          activate(injected)\r\n        }\r\n      }\r\n      const handleNetworkChanged = (networkId: string | number) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n        activate(injected)\r\n      }\r\n\r\n      ethereum.on('connect', handleConnect)\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n      ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect)\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n        }\r\n      }\r\n    }\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import React, {useRef, useState} from 'react';\r\nimport { useClick, useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\nconst ethers = require('ethers');\r\n\r\n\r\nexport default function AliasVerificationModal({\r\n    onClose,onSuccess\r\n}) {\r\n    const { active, error, account, library, chainId } = useWeb3React();\r\n    const signer = library.getSigner(account);\r\n\r\n    const modalRef = useRef(null);\r\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const submitAlias = () => {\r\n        setLoading('loading')\r\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\r\n        anotherSendTxPromise\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n            // await tx.wait(1);\r\n            // setLoading(\"Transaction Mined!\");\r\n        })\r\n        .catch(() => {\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\r\n                    </H2>\r\n                    <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\r\n                </Item>\r\n                <Item align=\"flex-start\">\r\n                    <CustomInput\r\n                        required\r\n                        placeholder=\"Enter ethereum wallet address of this channel\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={mainAdress}\r\n                        onChange={(e) => {setMainAddress(e.target.value)}}\r\n                    />\r\n                </Item>\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                    <Button\r\n                        bg='#e20880'\r\n                        color='#fff'\r\n                        flex=\"1\"\r\n                        radius=\"0px\"\r\n                        padding=\"20px 10px\"\r\n                        disabled={mainAdress.length !== 42}\r\n                        onClick={submitAlias}\r\n                    >\r\n                        { loading && <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#FFF\"\r\n                            height={16}\r\n                            width={16}\r\n                            />\r\n                        }\r\n                        <StyledInput\r\n                            cursor=\"hand\"\r\n                            textTransform=\"uppercase\"\r\n                            color=\"#fff\" weight=\"400\"\r\n                            size=\"0.8em\" spacing=\"0.2em\"\r\n                            value={loading ? loading : \"Verify Alias\"}\r\n                        />\r\n                    </Button>\r\n                </Item>\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n//import { parseEther, bigNumber } from 'ethers/utils'\r\n\r\n// FeedDB Helper Function\r\nconst EPNSCoreHelper = {\r\n  // To get owner info\r\n  getOwnerInfo: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.governance()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To get user info\r\n  getUserInfo: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then(response => {\r\n          const mappings = { ...response };\r\n          mappings.addr = user;\r\n\r\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel address from it's id\r\n  getChannelAddressFromID: async (channelID, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.mapAddressChannels(channelID)\r\n        .then(response => {\r\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\r\n          resolve(response.toString());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve a channel's Info from channel address\r\n  getChannelInfo: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channels(channel)\r\n        .then(response => {\r\n          // Add an extra field for future info\r\n          const mappings = { ...response };\r\n          mappings.addr = channel;\r\n\r\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel's AddChannel event\r\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      // To get channel ipfs hash from channel info\r\n      let filter = contract.filters.AddChannel(channel);\r\n      let block = startBlock;\r\n      if (startBlock != updateBlock) {\r\n        filter = contract.filters.UpdateChannel(channel);\r\n        block = updateBlock;\r\n      }\r\n\r\n      contract.queryFilter(filter, block, block)\r\n        .then(response => {\r\n          let filteredResponse;\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args.channel.toString() == channel.toString()) {\r\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\r\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\r\n          resolve(filteredResponse);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Retrive IPFS File from ipfshash\r\n  getJsonFileFromIdentity: async(identity) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Split Channel Identity, delimeter of identity is \"+\"\r\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\r\n\r\n      if (ids[0] == 1) {\r\n        // IPFS HASH\r\n        // Form Gateway URL\r\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\r\n        fetch(url)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\r\n            resolve(response);\r\n          })\r\n          .catch(err => {\r\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n\r\n    });\r\n  },\r\n  // Helper to get Channel from Channel's address\r\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getChannelInfo(channel, contract)\r\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\r\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from User's address\r\n  getChannelJsonFromUserAddress: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      // EPNSCoreHelper.getUserInfo(user, contract)\r\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\r\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Channels\r\n  getTotalNumberOfChannels: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.channelsCount()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\r\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\r\n        .then(async (response) => {\r\n          let channelsInfo = [];\r\n          const channelsCount = response;\r\n\r\n          if (atIndex > channelsCount || atIndex == -1) {\r\n            atIndex = channelsCount - 1;\r\n          }\r\n\r\n          if (numChannels == -1) {\r\n            numChannels = channelsCount;\r\n          }\r\n\r\n          // Get channels\r\n          let channelArrays = [];\r\n\r\n          // prefil and then refil\r\n          let count = 0;\r\n          for (let i = numChannels - 1; i >= 0; i--) {\r\n            const assignedChannelID = atIndex - i;\r\n            channelArrays.push(assignedChannelID);\r\n          }\r\n\r\n          const promises = channelArrays.map(async (channelID) => {\r\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\r\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\r\n                channelsInfo = [response, ...channelsInfo];\r\n              })\r\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\r\n          });\r\n\r\n          // wait until all promises are resolved\r\n          await Promise.all(promises);\r\n\r\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\r\n          resolve(channelsInfo);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\r\n          reject(err);\r\n        })\r\n    });\r\n  },\r\n  // Get Total Number of Users\r\n  getTotalNumberOfUsers: async (contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.usersCount()\r\n        .then(response => {\r\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve public key of a user\r\n  getPublicKey: async (address, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filteredResponse;\r\n      contract.queryFilter('PublicKeyRegistered')\r\n        .then(response => {\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args[0] == address) {\r\n              filteredResponse = item;\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\r\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\r\n\r\n          if (!filteredResponse || filteredResponse.length == 0) {\r\n            resolve(null)\r\n          }\r\n          else {\r\n            resolve(filteredResponse.args[1]);\r\n          }\r\n\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getSubscribedStatus: async (user, channel, contract) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.isUserSubscribed(channel, user)\r\n        .then(response => {\r\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\r\n          resolve(response);\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getTotalSubscribedChannels: async (user, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users[user].subscribedCount()\r\n        .then(response => {\r\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Fair Share\r\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then((response) => {\r\n          if (response.userActivated) {\r\n            contract.calcAllChannelsRatio(user, block)\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\r\n                resolve(response);\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n                reject(err);\r\n              });\r\n          }\r\n          else {\r\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\r\n            reject(\"User not activated\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Pool Funds\r\n  getPoolFunds: async(contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.poolFunds()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Helper Functions\r\n  // To format Big Number\r\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\r\n    try {\r\n      if (convertToCurrency) {\r\n        bignumber = bignumber.div(100000000000000);\r\n        bignumber = bignumber.div(10000);\r\n      }\r\n      bignumber = bignumber.toNumber();\r\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return \"---\";\r\n    }\r\n  },\r\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\r\n  metricFormatter: (num, digits) => {\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1E3, symbol: \"k\" },\r\n      { value: 1E6, symbol: \"M\" },\r\n      { value: 1E9, symbol: \"G\" },\r\n      { value: 1E12, symbol: \"T\" },\r\n      { value: 1E15, symbol: \"P\" },\r\n      { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n  },\r\n\r\n}\r\n\r\nexport default EPNSCoreHelper;\r\n","import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport default  {\r\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\r\n}","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nfunction NotificationToast({ notification, clearToast }) {\r\n\r\n  // toast customize\r\n  const LoaderToast = ({color }) => (\r\n      <Toaster>\r\n      <div>{notification.notificationTitle}</div>\r\n      <div>{notification.notificationBody}</div>\r\n      </Toaster>\r\n  )\r\n \r\n  // Render\r\n  return (\r\n    <NotificationWrapper>{\r\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    </NotificationWrapper>\r\n  );\r\n}\r\n\r\nconst NotificationWrapper = styled.div`\r\n  display: none;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n\r\n// Export Default\r\nexport default NotificationToast;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://backend-staging.epns.io/apis\";\r\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\r\n\r\n/**\r\n * A function used to make get requests throughout the entire application\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @returns {Promise}\r\n */\r\nexport const getReq = async (path) => {\r\n    try {\r\n      const response = await axios.get(BASE_URL + path);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n/**\r\n * A function used to make post requests to the backend\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @param {Object} obj \r\n * @returns {Promise}\r\n */\r\nexport const postReq = async (path, obj) => {\r\n  try {\r\n    const response = await axios.post(BASE_URL + path, obj, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from 'api';\r\n\r\n// STATIC SINGLETON\r\nexport const ChannelEvents = {\r\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\r\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\r\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\r\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\r\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\r\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\r\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\r\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\r\n}\r\n\r\nexport default class ChannelsDataStore {\r\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\r\n\r\n    state = {\r\n      channelsCount: -1,\r\n      channelsMeta: {},\r\n      channelsJson: {},\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n      epnsCommReadProvider: null\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetChannelsListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n      this.initChannelsListenersAsync();\r\n\r\n      // next get store channels count\r\n      this.getChannelsCountAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetChannelsListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n      }\r\n    }\r\n\r\n    // init LISTENERS\r\n    initChannelsListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForAddChannelAnyAsync();\r\n      await this.listenForAddChannelSelfAsync();\r\n\r\n      await this.listenForUpdateChannelAnyAsync();\r\n      await this.listenForUpdateChannelSelfAsync();\r\n\r\n      // use the communicator contract for the below\r\n      await this.listenForSubscribeAnyAsync();\r\n      await this.listenForSubscribeSelfAsync();\r\n      await this.listenForUnsubscribeAnyAsync();\r\n      await this.listenForUnsubscribeSelfAsync();\r\n    }\r\n\r\n    // 1. Add Any Channel Listeners\r\n    listenForAddChannelAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.AddChannel(null, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // Do own stuff\r\n        await this.incrementChannelsCountAsync(1);\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 2. Add Self Channel Listener\r\n    listenForAddChannelSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.AddChannel(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // Do own stuff\r\n        // Nothing to do, just do callback\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 3. Update Any Channel Listener\r\n    listenForUpdateChannelAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.UpdateChannel(null, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 4. Update Self Channel Listener\r\n    listenForUpdateChannelSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 5. Subscriber Any\r\n    listenForSubscribeAnyAsync = async () => {\r\n      const contract = this.state.epnsCommReadProvider;\r\n      let filter = contract.filters.Subscribe(null, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n      //   // Do own stuff\r\n      //   if (this.state.channelsMeta[channel]) {\r\n      //     const channelID = this.state.channelsMeta[channel];\r\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //     count = count + 1;\r\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      //   }\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 6. Subscriber Self\r\n    listenForSubscribeSelfAsync = async () => {\r\n      const contract = this.state.epnsCommReadProvider;\r\n      let filter = contract.filters.Subscribe(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 7. Unsubscribe Any\r\n    listenForUnsubscribeAnyAsync = async () => {\r\n      const contract = this.state.epnsCommReadProvider;\r\n      let filter = contract.filters.Unsubscribe(null, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // Do own stuff\r\n        // if (this.state.channelsMeta[channel]) {\r\n        //   const channelID = this.state.channelsMeta[channel];\r\n        //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n        //   count = count - 1;\r\n        //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n        // }\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 8. Unsubscribe Self\r\n    listenForUnsubscribeSelfAsync = async () => {\r\n      const contract = this.state.epnsCommReadProvider;\r\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // CHANNELS COUNT\r\n    getChannelsCountAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.channelsCount = response;\r\n\r\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\r\n              resolve(this.state.channelsCount)\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n        else {\r\n          resolve(this.state.channelsCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementChannelsCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getChannelsCountAsync()\r\n          .then(response => {\r\n            this.state.channelsCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\r\n            resolve(this.state.channelsCount)\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n\r\n    }\r\n\r\n    // CHANNELS META FUNCTIONS\r\n    // To get channels meta\r\n    // get channels meta in a paginated format\r\n    // by passing in the starting index and the number of items per page\r\n    getChannelsMetaAsync = async (startIndex, pageCount) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        // get total number of channels\r\n        const channelsCount = await this.getChannelsCountAsync();\r\n        let stopIndex = startIndex + pageCount;\r\n\r\n        // if the stop index is -1 then get all channels\r\n        if (stopIndex == -1 || stopIndex > channelsCount) {\r\n          stopIndex = channelsCount;\r\n        }\r\n\r\n        // initialise an array with the values from 0 to the length of the number of channels\r\n        let channelIDs = [];\r\n\r\n        for(let i = startIndex; i < stopIndex ; i++){\r\n          channelIDs.push(i)\r\n        }\r\n\r\n        const promises = channelIDs.map(async (channelID) => {\r\n          // Match the cache\r\n          return this.getChannelMetaAsync(channelID)\r\n            .then(response => response )\r\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\r\n        });\r\n\r\n        // wait until all promises are resolved\r\n        const channelMetaData = await Promise.all(promises);\r\n\r\n        // return channels meta\r\n        // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\r\n        resolve(channelMetaData);\r\n      });\r\n    }\r\n\r\n    // To get a single channel meta via id\r\n    getChannelMetaAsync = async (channelID) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsMeta[channelID]) {\r\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\r\n          resolve(this.state.channelsMeta[channelID]);\r\n        }\r\n        else {\r\n          let channelAddress;\r\n\r\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\r\n            .then(async response => {\r\n              channelAddress = response;\r\n              await this.getChannelMetaViaAddressAsync(channelAddress)\r\n                .then(response => {\r\n                  // update the channel cache before resolving\r\n                  this.state.channelsMeta[channelID] = response;\r\n                  this.state.channelsMeta[channelAddress] = channelID;\r\n\r\n                  // resolve\r\n                  // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\r\n                  resolve(response);\r\n                })\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n    // To get a single channel meta via address\r\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsMeta[channelAddress]) {\r\n          const channelID = this.state.channelsMeta[channelAddress];\r\n\r\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\r\n          resolve(this.state.channelsMeta[channelID]);\r\n        }\r\n        else {\r\n          // Can't cache this :(, no way to know channel id\r\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\r\n            .then(response => {\r\n              // resolve\r\n              // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\r\n              resolve(response);\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n    getChannelSubscribers = async (channelAddress) => {\r\n      return postReq(\"/channels/get_subscribers\", { channel: channelAddress, op: 'read' })\r\n        .then(({ data }) => data.subscribers)\r\n        .catch((err) => {\r\n          console.log(`getChannelSubscribers => ${err.message}`);\r\n          return []\r\n        });\r\n    };\r\n\r\n    // CHANNELS INFO FUNCTIONS\r\n    // To get a single channel meta via id\r\n    getChannelJsonAsync = async (channelAddress) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsJson[channelAddress]) {\r\n          // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\r\n          resolve(this.state.channelsJson[channelAddress]);\r\n        }\r\n        else {\r\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\r\n            .then(response => {\r\n              // First set the cache\r\n              this.state.channelsJson[channelAddress] = response;\r\n\r\n              // resolve\r\n              // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\r\n              resolve(response);\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction ViewNotificationItem({ notificationObject }) {\r\n  const { account, library } = useWeb3React();\r\n  const [ notification, setNotification ] = React.useState(null);\r\n  const [ subscribed, setSubscribed ] = React.useState(false);\r\n  const [ loading, setLoading ] = React.useState(true);\r\n\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n\r\n\r\n  React.useEffect(() => {\r\n    notifications();\r\n  }, [notificationObject]);\r\n\r\n  // to set notifications\r\n  const notifications = async () => {\r\n    setNotification(notificationObject)\r\n    setLoading(false);\r\n  }\r\n\r\n  // render\r\n  return (\r\n    <Container key={notificationObject.id}>\r\n      <ChannelDetailsWrapper>\r\n          <ChannelTitle>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"50%\" height={24} />\r\n            }\r\n            {!loading &&\r\n              <ChannelTitleLink>{notification.notificationTitle}</ChannelTitleLink>\r\n            }\r\n          </ChannelTitle>\r\n          <ChannelDesc>\r\n            {loading &&\r\n              <>\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n                </SkeletonWrapper>\r\n\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n                </SkeletonWrapper>\r\n\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"40%\" height={5} />\r\n                </SkeletonWrapper>\r\n              </>\r\n            }\r\n            {!loading &&\r\n\r\n              <ChannelDescLabel>{notification.notificationBody}</ChannelDescLabel>\r\n            }\r\n          </ChannelDesc>\r\n        </ChannelDetailsWrapper>\r\n\r\n        <ChannelMeta>\r\n          {!loading &&\r\n            <>\r\n              <Pool>\r\n                <br></br>\r\n                <PoolShare>\r\n                { notification.indexTimeStamp? moment\r\n\t\t\t\t\t\t\t\t\t\t\t\t.utc(parseInt(notification.indexTimeStamp) * 1000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.local()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.format(\"DD MMM YYYY | hh:mm A\"): \"N/A\"}\r\n                </PoolShare>\r\n              </Pool>\r\n            </>\r\n          }\r\n        </ChannelMeta>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ChannelDetailsWrapper = styled.div`\r\n  align-self: center;\r\n  max-width: 80%;\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 30px 20px;\r\n\r\n  justify-content: space-between;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${props => props.atW + '%' || '100%'};\r\n  height: ${props => props.atH}px;\r\n  border-radius: ${props => props.borderRadius || 10}px;\r\n  margin-bottom: ${props => props.marginBottom || 5}px;\r\n  margin-right: ${props => props.marginRight || 0}px;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 10px;\r\n  margin-left: 4px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 550;\r\n  color: #e20880;\r\n  font-size: 18px;\r\n`\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n  margin: 0px 5px;\r\n`\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  // padding: 2px 8px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n  align-self: flex-end;\r\n`\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default ViewNotificationItem;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport {ALLOWED_CORE_NETWORK} from 'pages/Home'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\n\r\nimport ViewNotificationItem from \"components/ViewNotificationItem\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport hex2ascii from 'hex2ascii'\r\n\r\nconst NOTIFICATIONS_URL = \"https://backend-staging.epns.io/apis/feeds/get_feeds\";\r\n// Create Header\r\nfunction Feedbox() {\r\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [notifications, setNotifications] = React.useState([]);\r\n  // since we dont have how many notifications there are in total\r\n  // we use this field to note when there are no more notifications to load\r\n  const [finishedFetching, setFinishedFetching] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [toast, showToast] = React.useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  //define query\r\n  const notificationsPerPage = 6;\r\n\r\n  React.useEffect(() => {\r\n    const signer = library.getSigner(account);\r\n    // define the epns comms contracts\r\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\r\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\r\n    const communicatorContract = chainId === ALLOWED_CORE_NETWORK ? ethCommsContract : polygonCommsContract;\r\n    // define the epns comms contracts\r\n    setEpnsReadProvider(communicatorContract);\r\n  }, [chainId]);\r\n  \r\n  const loadNotifications = (currentPage) => {\r\n    const body = {\r\n      \"user\": account,\r\n      \"page\": currentPage,\r\n      \"pageSize\": notificationsPerPage,\r\n      \"op\":\"read\"\r\n    }\r\n    axios.post(NOTIFICATIONS_URL, body)\r\n    .then(({data}) => {\r\n      const {count, results} = data;\r\n      const parsedNotification = results.map(parseAPINotifications);\r\n      if(count === 0){\r\n        setFinishedFetching(true);\r\n      }\r\n      setNotifications((oldNotifications) => ([\r\n        ...oldNotifications,\r\n        ...parsedNotification,\r\n      ]))\r\n    })\r\n    .catch(err => {\r\n        console.log(`\r\n        ============== There was an error [loadNotifications] ============\r\n        `, err.message);\r\n    }).finally(() => {\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  const clearToast = () => showToast(null);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsReadProvider) {\r\n      loadNotifications(currentPage);\r\n      return subscribe()\r\n    }\r\n  }, [epnsReadProvider]);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast()\r\n    }\r\n  }, [toast]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async() => {\r\n    await setCurrentPage((prevPage) => {\r\n      const newPage = prevPage + 1;\r\n      loadNotifications(newPage);\r\n      return newPage;\r\n    });\r\n  };\r\n  \r\n  const subscribe = () => {\r\n    if (account) {\r\n      return newNotification(onReceive);\r\n    }\r\n  };\r\n\r\n  //handle new notification\r\n  const onReceive = async notification => {\r\n    showToast(notification);\r\n    setNotifications(existingNotifications => [notification, ...existingNotifications]);\r\n    // setNotifications(notifications => [notification].concat(notifications));\r\n  };\r\n\r\n  //subscribe to SendNotification\r\n  const newNotification = (fn) => {\r\n    const event = 'SendNotification'\r\n\r\n    //callback function for listener\r\n    const cb = async (\r\n      eventChannelAddress: string,\r\n      eventUserAddress: string,\r\n      identityHex: string\r\n    ) => {\r\n      const userAddress = account\r\n      const identity = hex2ascii(identityHex)\r\n      const notificationId = identity\r\n        .concat('+')\r\n        .concat(eventChannelAddress)\r\n        .concat('+')\r\n        .concat(eventUserAddress)\r\n        .toLocaleLowerCase()\r\n      const ipfsId = identity.split('+')[1];\r\n\r\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(eventChannelAddress);\r\n\r\n      // Form Gateway URL\r\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\r\n      fetch(url)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n      const ipfsNotification = {...result}\r\n      const notification = {\r\n        id: notificationId,\r\n        userAddress: eventUserAddress,\r\n        channelAddress: eventChannelAddress,\r\n        indexTimeStamp: Date.now() / 1000, // todo\r\n        notificationTitle: ipfsNotification.notification.title || channelJson.name,\r\n        notificationBody: ipfsNotification.notification.body,\r\n        // ...ipfsNotification.data,\r\n      }\r\n      if (ipfsNotification.data.type === '1') {\r\n        const isSubscribed = \r\n        epnsReadProvider.memberExists(\r\n          userAddress,\r\n          eventChannelAddress\r\n        )\r\n        .then(isSubscribed => {\r\n          if (isSubscribed) {\r\n            fn(notification)\r\n          }\r\n        })\r\n      } else if (userAddress === eventUserAddress) {\r\n        fn(notification)\r\n      }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getting new notification data from ipfs --> %o\", err);\r\n      });\r\n    }\r\n    epnsReadProvider.on(event, cb)\r\n    return epnsReadProvider.off.bind(epnsReadProvider, event, cb)\r\n  }\r\n  // transform the data gotten from the API into a workable format\r\n  const parseAPINotifications = (oneAPINotification) => {\r\n    // extract required data\r\n    let {\r\n      payload_id: payloadId,\r\n      payload: {\r\n        data: {\r\n          amsg\r\n        },\r\n        notification: {\r\n          body,\r\n          title\r\n        }\r\n      }\r\n    } = oneAPINotification;\r\n\r\n    let timeStamp = \"\";\r\n    // parse the text for the timestamp\r\n    const matches = amsg.match(/\\[timestamp:(.*?)\\]/);\r\n    if (matches) {\r\n      timeStamp = matches[1];\r\n      amsg = amsg.replace(/ *\\[timestamp:[^)]*\\] */g, \"\");\r\n    }\r\n    // save payload into object\r\n    const parsedNotification = {\r\n      id: payloadId,\r\n      notificationBody: body,\r\n      notificationTitle: title,\r\n      indexTimeStamp: parseInt(timeStamp)\r\n    };\r\n    return parsedNotification\r\n  };\r\n  const showWayPoint = (index) => {\r\n    return (Number(index) === notifications.length - 1) && !finishedFetching;\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n      <Container>\r\n        {notifications &&\r\n          <Items id=\"scrollstyle-secondary\">\r\n            {notifications.map((oneNotification, index) => {  \r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = { () => handlePagination()}/>)}\r\n                <ViewNotificationItem\r\n                  key={oneNotification.id}\r\n                  notificationObject={oneNotification}\r\n                />\r\n                </>\r\n              )\r\n              })\r\n            }\r\n          </Items>\r\n        }\r\n        {(loading) && \r\n          <Loader\r\n          type=\"Oval\"\r\n          color=\"#35c5f3\"\r\n          height={40}\r\n          width={40}\r\n        />\r\n        }\r\n      \r\n        {\r\n        toast && \r\n        <NotificationToast\r\n          notification={toast}\r\n          clearToast = {clearToast}\r\n          />\r\n        }\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n// css styles\r\nconst Container = styled.div`\r\ndisplay: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\n// Export Default\r\nexport default Feedbox;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\n// Create Header\r\nfunction DisplayNotice({ title, theme }) {\r\n  React.useEffect(() => {\r\n\r\n  }, [title, theme]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <Container>\r\n      <AnimateOnChange\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        durationOut={200}\r\n      >\r\n        <Notice theme={theme}>{title}</Notice>\r\n      </AnimateOnChange>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n\r\n  ${props => props.theme === 'primary' && css`\r\n    background: #e20880;\r\n  `};\r\n\r\n  ${props => props.theme === 'secondary' && css`\r\n    background: #35c5f3;\r\n  `};\r\n\r\n  ${props => props.theme === 'third' && css`\r\n    background: #674c9f;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default DisplayNotice;\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px'\r\n}\r\n\r\nexport const Device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n// STATIC SINGLETON\r\nexport const UserEvents = {\r\n    SUBSCRIBED: \"Subscribed\",\r\n    UNSUBSCRIBED: \"Unsubscribed\",\r\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\r\n    CREATED_CHANNEL: \"CreatedChannel\",\r\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\r\n}\r\n\r\nexport default class UsersDataStore {\r\n    static instance = UsersDataStore.instance || new UsersDataStore();\r\n\r\n    state = {\r\n      usersCount: -1,\r\n      userMeta: null,\r\n      ownerMeta: null,\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n      epnsCommReadProvider: null\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetUsersListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n      this.initUsersListenersAsync();\r\n\r\n      // next get store user count & user meta\r\n      this.getOwnerMetaAsync();\r\n      this.getUsersCountAsync();\r\n      this.getUserMetaAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetUsersListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\r\n      }\r\n\r\n      // reset user meta as well\r\n      this.state.userMeta = null;\r\n    }\r\n\r\n    // init LISTENERS\r\n    initUsersListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForSubscribedAsync();\r\n      await this.listenForUnsubscribedAsync();\r\n\r\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\r\n        await this.listenForPublicKeyBroadcastAsync();\r\n      }\r\n    }\r\n\r\n    // 1. Listen for Subscribe Async\r\n    listenForSubscribedAsync = async () => {\r\n      // TODO use the right contract comms\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Subscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 2. Listen for Unsubscribe Async\r\n    listenForUnsubscribedAsync = async () => {\r\n      // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 3. Listen For Public Key Broadcast\r\n    listenForPublicKeyBroadcastAsync = async () => {\r\n        // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.publicKeyRegistered = true;\r\n      // }\r\n\r\n      // contract.once(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // GET OWNER META\r\n    getOwnerMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.ownerMeta) {\r\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\r\n          resolve(this.state.ownerMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.ownerMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\r\n              resolve(this.state.ownerMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    // USERS COUNT\r\n    getUsersCountAsync = async () => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.usersCount = response;\r\n              console.log(\"getUsersCountAsync() --> %o\", response);\r\n              resolve(this.state.usersCount)\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n        }\r\n        else {\r\n          resolve(this.state.usersCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementUsersCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getUsersCountAsync()\r\n          .then(response => {\r\n            this.state.usersCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\r\n            resolve(this.state.usersCount);\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n    }\r\n\r\n    // GET USER META\r\n    getUserMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.userMeta) {\r\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\r\n          resolve(this.state.userMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\r\n            .then(response => {\r\n              this.state.userMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\r\n              resolve(this.state.userMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\r\n              reject(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { Device } from 'assets/Device';\r\nimport { recoverTypedSignature_v4 as recoverTypedSignatureV4 } from \"eth-sig-util\"\r\n\r\nimport { ToastContainer, toast as toaster  } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { IoMdPeople } from 'react-icons/io';\r\nimport { GiTwoCoins } from 'react-icons/gi';\r\n \r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from \"ethers\";\r\n//import { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\r\nimport NotificationToast from \"components/NotificationToast\";\r\n\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\nimport { ALLOWED_CORE_NETWORK } from 'pages/Home';\r\nimport { postReq } from \"api\";\r\n// const VERIFYING_CONTRACT = \"0xc882da9660d29c084345083922f8a9292e58787d\";\r\n\r\n// Create Header\r\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsCommWriteProvider, epnsWriteProvide, epnsCommReadProvider }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const EPNS_DOMAIN = {\r\n    name: 'EPNS',\r\n    version: '1.0.0',\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider.address ,\r\n  }\r\n\r\n  const [ channelJson, setChannelJson ] = React.useState({});\r\n  const [ subscribed, setSubscribed ] = React.useState(true);\r\n  const [ loading, setLoading ] = React.useState(true);\r\n  const [ memberCount, setMemberCount ] = React.useState(0);\r\n\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n  // toast related section\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\r\n      notificationBody: \"Please connect to the Ropsten network to opt-in/opt-out of channels\"\r\n    });\r\n  }\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast()\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n\r\n  React.useEffect(() => {\r\n    fetchChannelJson();\r\n  }, [account, channelObject]);\r\n\r\n  // to fetch channels\r\n  const fetchChannelJson = async () => {\r\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\r\n    const subs = await EPNSCoreHelper.getSubscribedStatus(account, channelObject.addr, epnsCommReadProvider);\r\n    const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(channelObject.addr);\r\n    const subscribed = channelSubscribers.find(sub => {\r\n      return sub.toLowerCase() === account.toLowerCase();\r\n    });\r\n    setMemberCount(channelSubscribers.length);\r\n    setSubscribed(subscribed);\r\n\r\n    setChannelJson(channelJson);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  // to subscribe\r\n  const subscribe = async () => {\r\n    if(!onCoreNetwork){\r\n      return showNetworkToast();\r\n    } else {\r\n      subscribeAction(false);\r\n    }\r\n  }\r\n\r\n  const subscribeAction = async () => {\r\n    setTxInProgress(true);\r\n    const type = {\r\n      Subscribe: [\r\n        { name: \"channel\", type: \"address\" },\r\n        { name: \"subscriber\", type: \"address\" },\r\n        { name: \"action\", type: \"string\" }\r\n      ],\r\n    };\r\n    const message = {\r\n        channel: channelObject.addr,\r\n        subscriber: account,\r\n        action: \"Subscribe\"\r\n    }\r\n\r\n    const signature = await library.getSigner(account)._signTypedData(\r\n      EPNS_DOMAIN,\r\n      type,\r\n      message\r\n    );\r\n\r\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    postReq('/channels/subscribe_offchain', {\r\n      signature,\r\n      message,\r\n      op: \"write\",\r\n      chainId,\r\n      contractAddress: epnsCommReadProvider.address \r\n    }).then((res) => {\r\n      setSubscribed(true);\r\n      setMemberCount(memberCount + 1);\r\n      toaster.update(txToast, {\r\n        render: \"Sucesfully opted into channel !\",\r\n        type: toaster.TYPE.SUCCESS,\r\n        autoClose: 5000\r\n      });\r\n      console.log(res);\r\n    }).catch(err => {\r\n      toaster.update(txToast, {\r\n        render: \"There was an error opting into channel (\" + err.message + \")\",\r\n        type: toaster.TYPE.ERROR,\r\n        autoClose: 5000\r\n      });\r\n      console.log(err);\r\n    }).finally(() => {\r\n      setTxInProgress(false);\r\n    })\r\n    \r\n    // make a post request to server with data containing the details\r\n\r\n    // let sendWithTxPromise;\r\n    // sendWithTxPromise = epnsCommWriteProvider.subscribe(channelObject.addr);\r\n\r\n    // sendWithTxPromise\r\n    //   .then(async tx => {\r\n\r\n    //     let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n    //       position: \"bottom-right\",\r\n    //       autoClose: false,\r\n    //       hideProgressBar: true,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //       progress: undefined,\r\n    //     });\r\n\r\n    //     try {\r\n    //       await library.waitForTransaction(tx.hash);\r\n\r\n    //       toaster.update(txToast, {\r\n    //         render: \"Transaction Completed!\",\r\n    //         type: toaster.TYPE.SUCCESS,\r\n    //         autoClose: 5000\r\n    //       });\r\n    //       setSubscribed(true);\r\n    //       setTxInProgress(false);\r\n    //       setMemberCount(memberCount + 1);\r\n    //     }\r\n    //     catch(e) {\r\n    //       toaster.update(txToast, {\r\n    //         render: \"Transaction Failed! (\" + e.name + \")\",\r\n    //         type: toaster.TYPE.ERROR,\r\n    //         autoClose: 5000\r\n    //       });\r\n\r\n    //       setTxInProgress(false);\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //     toaster.dark('Transaction Cancelled!', {\r\n    //       position: \"bottom-right\",\r\n    //       type: toaster.TYPE.ERROR,\r\n    //       autoClose: 5000,\r\n    //       hideProgressBar: false,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //       progress: undefined,\r\n    //     });\r\n\r\n    //     setTxInProgress(false);\r\n    //   })\r\n  }\r\n\r\n  const unsubscribeAction = async () => {\r\n    if(!onCoreNetwork){\r\n      return showNetworkToast();\r\n    }\r\n    const type = {\r\n      Unsubscribe: [\r\n        { name: \"channel\", type: \"address\" },\r\n        { name: \"unsubscriber\", type: \"address\" },\r\n        { name: \"action\", type: \"string\" }\r\n      ],\r\n    };\r\n    const message = {\r\n      channel: channelObject.addr,\r\n      unsubscriber: account,\r\n      action: \"Unsubscribe\"\r\n    }\r\n    const signature = await library.getSigner(account)._signTypedData(\r\n      EPNS_DOMAIN,\r\n      type,\r\n      message\r\n    );\r\n\r\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    postReq('/channels/unsubscribe_offchain', {\r\n      signature,\r\n      message,\r\n      op: \"write\",\r\n      chainId,\r\n      contractAddress: epnsCommReadProvider.address \r\n    }).then((res) => {\r\n      setSubscribed(false);\r\n      setMemberCount(memberCount + 1);\r\n      toaster.update(txToast, {\r\n        render: \"Sucesfully opted out of channel !\",\r\n        type: toaster.TYPE.SUCCESS,\r\n        autoClose: 5000\r\n      });\r\n      console.log(res);\r\n    }).catch(err => {\r\n      toaster.update(txToast, {\r\n        render: \"There was an error opting into channel (\" + err.message + \")\",\r\n        type: toaster.TYPE.ERROR,\r\n        autoClose: 5000\r\n      });\r\n      console.log(err);\r\n    }).finally(() => {\r\n      setTxInProgress(false);\r\n    })\r\n    // setTxInProgress(true);\r\n\r\n    // let sendWithTxPromise = epnsCommWriteProvider.unsubscribe(channelObject.addr);\r\n\r\n    // sendWithTxPromise\r\n    //   .then(async tx => {\r\n\r\n    //     let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n    //       position: \"bottom-right\",\r\n    //       autoClose: false,\r\n    //       hideProgressBar: true,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //       progress: undefined,\r\n    //     });\r\n\r\n    //     try {\r\n    //       await library.waitForTransaction(tx.hash);\r\n\r\n    //       toaster.update(txToast, {\r\n    //         render: \"Transaction Completed!\",\r\n    //         type: toaster.TYPE.SUCCESS,\r\n    //         autoClose: 5000\r\n    //       });\r\n\r\n    //       setTxInProgress(false);\r\n    //       setSubscribed(false);\r\n    //       setMemberCount(memberCount - 1);\r\n    //     }\r\n    //     catch(e) {\r\n    //       toaster.update(txToast, {\r\n    //         render: \"Transaction Failed! (\" + e.name + \")\",\r\n    //         type: toaster.TYPE.ERROR,\r\n    //         autoClose: 5000\r\n    //       });\r\n\r\n    //       setTxInProgress(false);\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     toaster.dark('Transaction Cancelled!', {\r\n    //       position: \"bottom-right\",\r\n    //       type: toaster.TYPE.ERROR,\r\n    //       autoClose: 5000,\r\n    //       hideProgressBar: false,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //       progress: undefined,\r\n    //     });\r\n\r\n    //     setTxInProgress(false);\r\n    //   })\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Container key={channelObject.addr}>\r\n      <ChannelLogo>\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n          {loading &&\r\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n          }\r\n          {!loading &&\r\n            <ChannelLogoImg src={`${channelJson.icon}`} />\r\n          }\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n      </ChannelLogo>\r\n\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          {loading &&\r\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\r\n          }\r\n          {!loading &&\r\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\r\n          }\r\n        </ChannelTitle>\r\n\r\n        <ChannelDesc>\r\n          {loading &&\r\n            <>\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          }\r\n          {!loading &&\r\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\r\n          }\r\n        </ChannelDesc>\r\n\r\n        <ChannelMeta>\r\n          {loading &&\r\n            <>\r\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\r\n                <Skeleton />\r\n              </SkeletonWrapper>\r\n            </>\r\n          }\r\n          {!loading &&\r\n            <>\r\n              <Subscribers>\r\n                <IoMdPeople size={20} color=\"#ccc\"/>\r\n                <SubscribersCount>\r\n                  {memberCount}\r\n                </SubscribersCount>\r\n              </Subscribers>\r\n              <Pool>\r\n                <GiTwoCoins size={20} color=\"#ccc\"/>\r\n                <PoolShare>\r\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\r\n                </PoolShare>\r\n              </Pool>\r\n            </>\r\n          }\r\n        </ChannelMeta>\r\n      </ChannelInfo>\r\n      {!!account && !!library &&\r\n        <>\r\n          <LineBreak />\r\n          <ChannelActions>\r\n            {loading &&\r\n              <SkeletonButton>\r\n                <Skeleton />\r\n              </SkeletonButton>\r\n            }\r\n            {!loading && !subscribed &&\r\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\r\n                {txInProgress &&\r\n                  <ActionLoader>\r\n                    <Loader\r\n                     type=\"Oval\"\r\n                     color=\"#FFF\"\r\n                     height={16}\r\n                     width={16}\r\n                    />\r\n                  </ActionLoader>\r\n                }\r\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\r\n              </SubscribeButton>\r\n            }\r\n            {!loading && subscribed &&\r\n              <>\r\n              {isOwner &&\r\n                <OwnerButton disabled>Owner</OwnerButton>\r\n              }\r\n              {!isOwner &&\r\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\r\n                  {txInProgress &&\r\n                    <ActionLoader>\r\n                      <Loader\r\n                       type=\"Oval\"\r\n                       color=\"#FFF\"\r\n                       height={16}\r\n                       width={16}\r\n                      />\r\n                    </ActionLoader>\r\n                  }\r\n                  <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\r\n                </UnsubscribeButton>\r\n              }\r\n              </>\r\n            }\r\n          </ChannelActions>\r\n        </>\r\n      }\r\n      { toast && \r\n        <NotificationToast\r\n          notification={toast}\r\n          clearToast = {clearToast}\r\n        />\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${props => props.atW + '%' || '100%'};\r\n  height: ${props => props.atH}px;\r\n  border-radius: ${props => props.borderRadius || 10}px;\r\n  margin-bottom: ${props => props.marginBottom || 5}px;\r\n  margin-right: ${props => props.marginRight || 0}px;\r\n`\r\n\r\nconst ChannelLogo = styled.div`\r\n  max-width: 100px;\r\n  min-width: 32px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewChannelItem;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\r\n\r\nimport { FaGasPump } from 'react-icons/fa';\r\n\r\n// Faucet URLs\r\nfunction Faucets() {\r\n  // render\r\n  return (\r\n    <Section margin=\"5px 0px 0px 0px\">\r\n      <Content>\r\n        <ItemH\r\n          self=\"flex-end\"\r\n          bg=\"#fff\"\r\n          radius=\"8px\"\r\n          padding=\"30px 10px 10px 10px\"\r\n          border=\"1px solid #ededed\"\r\n          overflow=\"hidden\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span\r\n            pos=\"absolute\"\r\n            top=\"10px\"\r\n            right=\"0px\"\r\n            padding=\"5px 10px\"\r\n            bg=\"#e20880\"\r\n            color=\"#fff\"\r\n            size=\"12px\"\r\n            weight=\"600\"\r\n          >\r\n            Get Free Ropsten Ether\r\n          </Span>\r\n\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://faucet.metamask.io/\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Metamask Faucet\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://faucet.ropsten.be/\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Faucet Ropsten\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n\r\n        </ItemH>\r\n      </Content>\r\n    </Section>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default Faucets;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewChannelItem from \"components/ViewChannelItem\";\r\nimport Faucets from \"components/Faucets\";\r\n\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\n\r\n// Create Header\r\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide, epnsCommReadProvider, epnsCommWriteProvider }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [moreLoading, setMoreLoading] = React.useState(false);\r\n  const [channels, setChannels] = React.useState([]);\r\n  const [totalChannelLength, setChannelLength] = React.useState(0);\r\n  const [paginatedChannels, setPaginatedChannels] = React.useState([]);\r\n  const [user, setUser] = React.useState(null);\r\n  const [owner, setOwner] = React.useState(null);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const channelsPerPage = 10;\r\n  const channelsVisited = page * channelsPerPage;\r\n\r\n  React.useEffect(() => {\r\n    setChannels([]);\r\n    fetchInitialsChannelMeta();\r\n  }, [account, chainId]);\r\n\r\n  //update paginatedChannels array when scrolled till the end\r\n  React.useEffect(() => {\r\n    if(channels){\r\n      setPaginatedChannels(prev => [...prev, ...channels.slice(channelsVisited, channelsVisited + channelsPerPage)])\r\n      // setPaginatedChannels(channels)\r\n    }\r\n  }, [channels, page]);\r\n\r\n\r\n  // to update a page\r\n  const updateCurrentPage = () => {\r\n    if(loading || moreLoading) return;\r\n    // fetch more channel information\r\n    setMoreLoading(true);\r\n    setPage((prev) => {\r\n      const newPage = prev + 1;\r\n      loadMoreChannelMeta(newPage);\r\n      return newPage;\r\n    });\r\n  }\r\n\r\n  // to fetch channels\r\n  const fetchInitialsChannelMeta = async () => {\r\n    // get and set user and owner first\r\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\r\n    setUser(userMeta);\r\n    \r\n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\r\n    setOwner(ownerAddr);\r\n\r\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\r\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(channelsVisited, channelsPerPage);\r\n    const totalChannelsLength = await ChannelsDataStore.instance.getChannelsCountAsync();\r\n    setChannelLength(totalChannelsLength)\r\n    // Filter out channel\r\n\r\n    setChannels(channelsMeta);\r\n    setLoading(false);\r\n  }\r\n\r\n  // load more channels when we get to the bottom of the page\r\n  const loadMoreChannelMeta = async (newPageNumber) => {\r\n    const startingPoint = newPageNumber * channelsPerPage;\r\n    // console.log({startingPoint, channelsPerPage})\r\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(startingPoint, channelsPerPage);\r\n    setChannels(oldChannels => ([\r\n      ...oldChannels,\r\n      ...moreChannels\r\n    ]));\r\n    setMoreLoading(false)\r\n  }\r\n\r\n  // conditionally display the waymore bar which loads more information\r\n  const showWayPoint = (index) => {\r\n    return ( Number(index) === paginatedChannels.length -1 )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && channels.length == 0 &&\r\n        <ContainerInfo>\r\n          <DisplayNotice\r\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\r\n            theme=\"primary\"\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n      {!loading && controlAt == 0 && channels.length != 0 &&\r\n        <Items id=\"scrollstyle-secondary\">\r\n          <Faucets/>\r\n\r\n          {Object.keys(paginatedChannels).map(index => {\r\n            const isOwner = (\r\n              paginatedChannels[index].addr === account ||\r\n              (account === owner && paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\")\r\n            );\r\n\r\n            if (paginatedChannels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                <div\r\n                  key={paginatedChannels[index].addr}\r\n                >\r\n                  <ViewChannelItem\r\n                    channelObject={paginatedChannels[index]}\r\n                    isOwner={isOwner}\r\n                    epnsReadProvider={epnsReadProvider}\r\n                    epnsWriteProvide={epnsWriteProvide}\r\n                    epnsCommReadProvider={epnsCommReadProvider}\r\n                    epnsCommWriteProvider={epnsCommWriteProvider}\r\n                  />\r\n                </div>\r\n                </>\r\n              );\r\n            }\r\n            else if (paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                <div\r\n                  key={paginatedChannels[index].addr}\r\n                >\r\n                  <ViewChannelItem\r\n                    channelObject={paginatedChannels[index]}\r\n                    isOwner={isOwner}\r\n                    epnsReadProvider={epnsReadProvider}\r\n                    epnsWriteProvide={epnsWriteProvide}\r\n                    epnsCommReadProvider={epnsCommReadProvider}\r\n                    epnsCommWriteProvider={epnsCommWriteProvider}\r\n                  />\r\n                </div>\r\n                </>\r\n              );\r\n            }\r\n            else {\r\n              return(\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                </>\r\n              )\r\n            }\r\n          })}\r\n          {moreLoading && channels.length &&\r\n            <CenterContainer>\r\n              <Loader\r\n              type=\"Oval\"\r\n              color=\"#35c5f3\"\r\n              height={40}\r\n              width={40}\r\n              />\r\n            </CenterContainer>\r\n          }\r\n        </Items>\r\n      }\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst CenterContainer = styled(ContainerInfo)`\r\n  width: fit-content;\r\n  margin: auto;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n// Export Default\r\nexport default ViewChannels;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\n\r\n// Other Information URLs\r\nfunction ViewInfoItem() {\r\n  // render\r\n  return (\r\n    <>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (iOS)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For iOS Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (Android)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For Android Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\r\n            Click here for our How to Guides\r\n          </ChannelTitleLink>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: flex;\r\n  // flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewInfoItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction Info() {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && \r\n      <>\r\n        <InfoBox>\r\n          <ViewInfoItem/>\r\n        </InfoBox>\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\nconst InfoBox = styled.div`\r\n  padding: 10px 20px;\r\n  display: block;\r\n  align-self: stretch;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default Info;\r\n","import React from 'react'\r\n\r\nexport const CloseIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\r\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\r\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\r\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { BsFillImageFill } from 'react-icons/bs';\r\nimport { FiLink } from 'react-icons/fi';\r\n\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { CloseIcon } from 'assets/icons';\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport CryptoHelper from 'helpers/CryptoHelper';\r\nimport { ALLOWED_CORE_NETWORK as ETH_COMMUNICATOR_NETWORK } from 'pages/Home';\r\nconst ethers = require('ethers');\r\n\r\n\r\n// Set Notification Form Type | 0 is reserved for protocol storage\r\nconst NFTypes = [\r\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\r\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\r\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\r\n  { value: \"4\", label: 'Subset (IPFS Payload)' },\r\n];\r\nconst LIMITER_KEYS = ['Enter', ','];\r\n\r\n// Create Header\r\nfunction SendNotifications() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [nfProcessing, setNFProcessing] = React.useState(0);\r\n\r\n  const [nfRecipient, setNFRecipient] = React.useState('');\r\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\r\n  const [tempRecipeint, setTempRecipient] = React.useState(''); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\r\n  const [nfType, setNFType] = React.useState('');\r\n\r\n  const [nfSub, setNFSub] = React.useState('');\r\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\r\n\r\n  const [nfMsg, setNFMsg] = React.useState('');\r\n\r\n  const [nfCTA, setNFCTA] = React.useState('');\r\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\r\n\r\n  const [nfMedia, setNFMedia] = React.useState('');\r\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\r\n\r\n  const [nfInfo, setNFInfo] = React.useState('');\r\n\r\n  // on change for the subset type notifications input\r\n  const handleSubsetInputChange = (e) => {\r\n    // if the user enters in a comma or an enter then seperate the addresses\r\n    if(LIMITER_KEYS.includes(e.key)){\r\n      e.preventDefault();\r\n      // if they enter a limiter key, then add the temp value to the recipeints list\r\n      // then clear the value of the temp text\r\n      setMultipleRecipients((oldRecipients) =>(\r\n        // use this combination to remove duplicates\r\n        Array.from(new Set([\r\n        ...oldRecipients,\r\n        tempRecipeint\r\n        ]))\r\n      ));\r\n      setTempRecipient('');\r\n    }\r\n  };\r\n  // when to remove a subscriber\r\n  const removeRecipient = (recipientAddress) => {\r\n    const filteredRecipients = multipleRecipients.filter(rec => rec !== recipientAddress);\r\n    setMultipleRecipients(filteredRecipients);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\r\n    setMultipleRecipients([]); //reset array when type changes/\r\n    if (broadcastIds.includes(nfType)) {\r\n      // This is broadcast, nfRecipient will be the same\r\n      setNFRecipient(account);\r\n    }\r\n    else {\r\n      setNFRecipient('');\r\n    }\r\n  }, [nfType]);\r\n\r\n  // validate the body being sent, return true if no errors\r\n  const bodyValidated = (notificationToast) => {\r\n    let validated = true;\r\n    // if we are sending for a subset and there \r\n    if(nfType === \"4\" && !multipleRecipients.length){\r\n      toast.update(notificationToast, {\r\n        render: \"Please enter at least two recipients in order to use subset notifications type\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000\r\n      });\r\n      validated = false; \r\n    }\r\n    return validated;\r\n  }\r\n\r\n  const handleSendMessage = async (e) => {\r\n    // Check everything in order\r\n    e.preventDefault();\r\n\r\n    // Toastify\r\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    // do some validation\r\n    if(!bodyValidated(notificationToast)) return;\r\n\r\n    // Set to processing\r\n    setNFProcessing(1);\r\n\r\n    // Form signer and contract connection\r\n    var signer = library.getSigner(account);\r\n    // define the core epns contract\r\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\r\n    // define the epns comms contracts\r\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\r\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\r\n    const communicatorContract = chainId === ETH_COMMUNICATOR_NETWORK ? ethCommsContract : polygonCommsContract;\r\n    // define the epns comms contracts\r\n\r\n    // For payload basic\r\n    let nsub = nfSub;\r\n    let nmsg = nfMsg;\r\n    let secretEncrypted;\r\n\r\n    let asub = nfSub;\r\n    let amsg = nfMsg;\r\n    let acta = nfCTA;\r\n    let aimg = nfMedia;\r\n\r\n    // Decide type and storage\r\n    switch (nfType) {\r\n      // Broadcast Notification\r\n      case \"1\":\r\n        break;\r\n\r\n      // Targetted Notification\r\n      case \"3\":\r\n        break;\r\n\r\n      // Secret Notification\r\n      case \"2\":\r\n        // Create secret\r\n        let secret = CryptoHelper.makeid(14);\r\n\r\n        // Encrypt payload and change sub and nfMsg in notification\r\n        nsub = \"You have a secret message!\";\r\n        nmsg = \"Open the app to see your secret message!\";\r\n\r\n        // get public key from EPNSCoreHelper\r\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\r\n        if (k == null) {\r\n          // No public key, can't encrypt\r\n          setNFInfo(\"Public Key Registration is required for encryption!\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n            render: \"Unable to encrypt for this user, no public key registered\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        let publickey = k.toString().substring(2);\r\n        //console.log(\"This is public Key: \" + publickey);\r\n\r\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\r\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n        break;\r\n  \r\n      // Targetted Notification\r\n      case \"4\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Handle Storage\r\n    let storagePointer = '';\r\n\r\n    // IPFS PAYLOAD --> 1, 2, 3\r\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\r\n      // Checks for optional fields\r\n      if (nfSubEnabled && isEmpty(nfSub)) {\r\n        setNFInfo(\"Enter Subject or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\r\n        setNFInfo(\"Enter Media URL or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\r\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (isEmpty(nfMsg)) {\r\n        setNFInfo(\"Message cannot be empty\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      const jsonPayload = {\r\n        \"notification\": {\r\n          \"title\": nsub,\r\n          \"body\": nmsg\r\n        },\r\n        \"data\": {\r\n          \"type\": nfType,\r\n          \"secret\": secretEncrypted,\r\n          \"asub\": asub,\r\n          \"amsg\": amsg,\r\n          \"acta\": acta,\r\n          \"aimg\": aimg\r\n        }\r\n      };\r\n\r\n      // if we are sending a subset type, then include recipients\r\n      if(nfType === \"4\"){\r\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\r\n      }\r\n\r\n      const input = JSON.stringify(jsonPayload);\r\n\r\n      console.log(\"Uploding to IPFS...\");\r\n      toast.update(notificationToast, {\r\n        render: \"Uploding to IPFS...\",\r\n      });\r\n\r\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n      try {\r\n        storagePointer = await ipfs.add(input);\r\n      }\r\n      catch (e) {\r\n        setNFProcessing(2);\r\n        setNFInfo(\"IPFS Upload Error\");\r\n      }\r\n\r\n      console.log (\"IPFS cid: %o\", storagePointer);\r\n      toast.update(notificationToast, {\r\n        render: \"IPFS HASH: \" + storagePointer,\r\n      });\r\n\r\n    }\r\n\r\n    // Prepare Identity and send notification\r\n    const identity = nfType + \"+\" + storagePointer;\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise;\r\n\r\n    anotherSendTxPromise = communicatorContract.sendNotification(account, nfRecipient, identityBytes);\r\n\r\n\r\n    console.log (\"Sending Transaction... \");\r\n    toast.update(notificationToast, {\r\n      render: \"Sending Transaction...\",\r\n    });\r\n\r\n    anotherSendTxPromise\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log (\"Transaction Sent!\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transaction Sent\",\r\n          type: toast.TYPE.INFO,\r\n          autoClose: 5000\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log (\"Transaction Mined!\");\r\n\r\n        setNFProcessing(2);\r\n        setNFType('');\r\n        setNFInfo(\"Notification Sent\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transaction Mined / Notification Sent\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        setNFInfo(\"Transaction Failed, please try again\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transacion Failed: \" + err,\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n      });\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\r\n            </H2>\r\n            <H3>EPNS supports four types of notifications (for now!). <b>Groups</b>, <b>Secrets</b>, <b>Targetted</b> and <b>Subsets</b>.</H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content>\r\n          <Item align=\"stretch\">\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleSendMessage}\r\n            >\r\n              <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\r\n                  <DropdownStyledParent>\r\n                    <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\r\n                  </DropdownStyledParent>\r\n                </Item>\r\n                <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\r\n\r\n                {nfType &&\r\n                  <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\r\n                    </ItemH>\r\n\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\r\n                    </ItemH>\r\n\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\r\n                    </ItemH>\r\n                  </ItemH>\r\n                }\r\n              </Item>\r\n\r\n              {!nfType &&\r\n                <Item padding=\"0px 20px 30px 20px\" />\r\n              }\r\n\r\n              {(nfType === \"2\" || nfType === \"3\") &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Enter recipient wallet address\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #674c9f\"\r\n                    bg=\"#fff\"\r\n                    value={nfRecipient}\r\n                    onChange={(e) => {setNFRecipient(e.target.value)}}\r\n                  />\r\n                  {nfRecipient.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Recipient Wallet\r\n                      </Span>\r\n                    }\r\n                </Item>\r\n              }\r\n\r\n              {(nfType === \"4\") &&\r\n              <>\r\n                <MultiRecipientsContainer>\r\n                  {\r\n                    multipleRecipients.map(oneRecipient => (\r\n                      <span key={oneRecipient}>\r\n                        {oneRecipient}\r\n                        <i onClick={() => removeRecipient(oneRecipient)}><CloseIcon /></i>\r\n                      </span>\r\n                    ))\r\n                  }\r\n                </MultiRecipientsContainer>\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Input\r\n                    required={multipleRecipients.length === 0}\r\n                    placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #674c9f\"\r\n                    bg=\"#fff\"\r\n                    value={tempRecipeint}\r\n                    onKeyPress={handleSubsetInputChange}\r\n                    onChange={e => {\r\n                      const text = e.target.value;\r\n                      if(!LIMITER_KEYS.includes(text)){\r\n                        setTempRecipient(e.target.value)\r\n                      }\r\n                    }}\r\n                  />\r\n                  {nfRecipient.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Recipient Wallet\r\n                      </Span>\r\n                    }\r\n                </Item>\r\n              </>\r\n              }\r\n\r\n              {nfType && nfSubEnabled &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Subject of Notification\"\r\n                    padding=\"12px\"\r\n                    borderBottom=\"1px solid #000\"\r\n                    weight=\"400\"\r\n                    size=\"1.2em\"\r\n                    bg=\"#fff\"\r\n                    value={nfSub}\r\n                    onChange={(e) => {setNFSub(e.target.value)}}\r\n                  />\r\n                  {nfSub.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Subject\r\n                      </Span>\r\n                    }\r\n                </Item>\r\n              }\r\n\r\n              {nfType &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <TextField\r\n                    required\r\n                    placeholder=\"Notification Message\"\r\n                    rows=\"6\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    weight=\"400\"\r\n                    border=\"1px solid #000\"\r\n                    bg=\"#fff\"\r\n                    value={nfMsg}\r\n                    onChange={(e) => {setNFMsg(e.target.value)}}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                </Item>\r\n              }\r\n\r\n              {nfType && nfMediaEnabled &&\r\n                <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\r\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                    <BsFillImageFill size={24} color=\"#000\"/>\r\n                  </Item>\r\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Media URL for Notification\"\r\n                      padding=\"12px\"\r\n                      border=\"1px solid #000\"\r\n                      radius=\"4px\"\r\n                      weight=\"400\"\r\n                      bg=\"#f1f1f1\"\r\n                      value={nfMedia}\r\n                      onChange={(e) => {setNFMedia(e.target.value)}}\r\n                    />\r\n                    {nfMedia.trim().length == 0 &&\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Media URL\r\n                        </Span>\r\n                      }\r\n                    </Item>\r\n                </ItemH>\r\n              }\r\n\r\n              {nfType && nfCTAEnabled &&\r\n                <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\r\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                    <FiLink size={24} color=\"#000\"/>\r\n                  </Item>\r\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Call to Action Link\"\r\n                      padding=\"12px\"\r\n                      border=\"1px solid #000\"\r\n                      radius=\"4px\"\r\n                      weight=\"400\"\r\n                      bg=\"#f1f1f1\"\r\n                      value={nfCTA}\r\n                      onChange={(e) => {setNFCTA(e.target.value)}}\r\n                    />\r\n                    {nfCTA.trim().length == 0 &&\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Call to Action URL\r\n                        </Span>\r\n                      }\r\n                    </Item>\r\n                </ItemH>\r\n              }\r\n\r\n              {nfInfo && nfProcessing != 1 &&\r\n                <Item\r\n                  color=\"#fff\"\r\n                  bg=\"#e1087f\"\r\n                  padding=\"10px 15px\"\r\n                  margin = \"15px 0px\"\r\n                >\r\n                  <Span\r\n                    color=\"#fff\"\r\n                    textTransform=\"uppercase\"\r\n                    spacing=\"0.1em\"\r\n                    weight=\"400\"\r\n                    size=\"1em\"\r\n                  >\r\n                    {nfInfo}\r\n                  </Span>\r\n                </Item>\r\n              }\r\n\r\n              {nfType &&\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Button\r\n                    bg='#e20880'\r\n                    color='#fff'\r\n                    flex=\"1\"\r\n                    radius=\"0px\"\r\n                    padding=\"20px 10px\"\r\n                    disabled={nfProcessing == 1 ? true : false}\r\n                  >\r\n                    {nfProcessing == 1 &&\r\n                      <Loader\r\n                         type=\"Oval\"\r\n                         color=\"#fff\"\r\n                         height={24}\r\n                         width={24}\r\n                        />\r\n                    }\r\n                    {nfProcessing != 1 &&\r\n                      <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\r\n                    }\r\n                  </Button>\r\n                </Item>\r\n              }\r\n            </FormSubmision>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst DropdownStyledParent = styled.div `\r\n  .is-open {\r\n    margin-bottom: 130px;\r\n  }\r\n`\r\n\r\nconst MultiRecipientsContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0px 20px;\r\n  padding-top: 10px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 7px 15px;\r\n  \r\n  span {\r\n    color: white;\r\n    background: #e20880;\r\n    padding: 6px 10px;\r\n    border-radius: 5px;\r\n\r\n    i{\r\n      cursor: pointer;\r\n      margin-left: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DropdownStyled = styled(Dropdown)`\r\n\r\n  .Dropdown-control {\r\n    background-color: #000;\r\n    color: #fff;\r\n    padding: 12px 52px 12px 10px;\r\n    border: 1px solid #000;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-placeholder {\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  .Dropdown-arrow {\r\n    top: 18px;\r\n    bottom: 0;\r\n    border-color: #fff transparent transparent;\r\n  }\r\n\r\n  .Dropdown-menu {\r\n    border: 1px solid #000;\r\n    box-shadow: none;\r\n    background-color: #000;\r\n    border-radius: 0px;\r\n    margin-top: -3px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-option {\r\n    background-color: rgb(35 35 35);\r\n    color: #ffffff99;\r\n\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.7em;\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .Dropdown-option:hover {\r\n    background-color: #000000;\r\n    color: #fff;\r\n  }\r\n`\r\n\r\n\r\n// Export Default\r\nexport default SendNotifications;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport SendNotifications from 'components/SendNotifications';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelOwnerDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <SendNotifications />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelOwnerDashboard;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport CreateChannel from 'components/CreateChannel';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelCreationDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <CreateChannel />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelCreationDashboard;\r\n","import React from \"react\";\r\nimport ReactGA from 'react-ga';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from \"ethers\";\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport AliasVerificationodal from 'components/AliasVerificationModal';\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport config from 'config';\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport Feedbox from 'segments/Feedbox';\r\nimport ViewChannels from 'segments/ViewChannels';\r\nimport Info from \"segments/Info\";\r\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\r\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\r\n\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\"\r\n\r\nexport const ALLOWED_CORE_NETWORK = 3 //chainId of networks which we have deployed the core contract on\r\nconst CHANNEL_TAB = 1 //Default to 1 which is the channel tab\r\nconst NOTIF_TAB = 0;\r\n// Create Header\r\nfunction Home({ setBadgeCount, bellPressed }) {\r\n  ReactGA.pageview('/home');\r\n\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB =  CHANNEL_TAB ;//if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null); // read provider for epns core functions\r\n  const [epnsCommReadProvider, setEpnsCommReadProvider] = React.useState(null); // read provider for epns communicator functions\r\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\r\n  const [epnsCommWriteProvider, setEpnsCommWriteProvider] = React.useState(null);\r\n \r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(true);\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\r\n      notificationBody: \"Please connect to the Ropsten network to access channels\"\r\n    });\r\n  }\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast()\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  React.useEffect(() => {\r\n    (async function(){\r\n      const coreProvider = onCoreNetwork ?\r\n        library : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {etherscan: config.etherscanToken})\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if(!onCoreNetwork){\r\n        // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\r\n        const aliasEth = await postReq('/channels/get_alias' , {\r\n            \"aliasAddress\": account,\r\n            \"aliasBlockchain\":\"POLYGON_TEST_MUMBAI\", //use this for now, since we are only on polygon network\r\n            \"op\":\"read\"\r\n        })\r\n        .then(({data}) => {\r\n          console.log({data})\r\n          const ethAccount =  data || account;\r\n          setAliasEthAccount(ethAccount);\r\n          return data;\r\n        }); \r\n        if(aliasEth){\r\n          // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\r\n          const aliasVerified = await postReq('/channels/get_alias_verification_status', {\r\n            \"aliasAddress\":account,\r\n            \"op\":\"read\"\r\n          })\r\n          .then(({data}) => {\r\n            const {status} = data;\r\n            console.log({secd: data})\r\n            const aliasIsVerified =  data;\r\n            setAliasVerified(status);\r\n            return aliasIsVerified\r\n          }); \r\n        } \r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, coreProvider);\r\n      setEpnsReadProvider(coreContractInstance);\r\n      // inititalise the read contract for the core network\r\n  \r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork ? addresses.epnsEthComm : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(commAddress, abis.epnsComm, library);\r\n      setEpnsCommReadProvider(commContractInstance);\r\n      // initialise the read contract for the communicator function\r\n  \r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\r\n        setEpnsWriteProvider(coreSignerInstance);\r\n        const communicatorSignerInstance = new ethers.Contract(commAddress, abis.epnsComm, signer);\r\n        setEpnsCommWriteProvider(communicatorSignerInstance)\r\n      }\r\n    })();\r\n\r\n  }, [account, chainId]);\r\n\r\n  React.useEffect(() => {\r\n    if(!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\r\n      ChannelsDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\r\n      checkUserForChannelRights();\r\n    }\r\n\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n\r\n  // Revert to Feedbox on bell pressed\r\n  React.useEffect(() => {\r\n    setControlAt(0);\r\n  }, [bellPressed]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n\r\n  //Start Listening...\r\n  const listenerForChannelRights = async () => {\r\n    ChannelsDataStore.instance.addCallbacks(\r\n      ChannelEvents.ADD_CHANNEL_SELF,\r\n      \"FromCreateChannel\",\r\n      () => {\r\n        checkUserForChannelRights();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelRights = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(response => {\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      });\r\n\r\n    // Start listening\r\n    listenerForChannelRights();\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Controls>\r\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(0)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\r\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\r\n          onClick={() => {\r\n            // if they arent connected to the right channels then we have to restrict access to here\r\n            // if(!onCoreNetwork){\r\n            //   return showNetworkToast();\r\n            // }\r\n            userClickedAt(1)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\r\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\r\n          disabled={!adminStatusLoaded}\r\n          onClick={() => {\r\n            if (adminStatusLoaded) {\r\n              // if youre not on ropsten and you dont have a channel, you cannot create except on ropsten, so throw weeoe\r\n              if(!channelAdmin && !onCoreNetwork){\r\n                return showNetworkToast();\r\n              }\r\n              if(channelAdmin && !aliasVerified && !onCoreNetwork){\r\n                return setModalOpen(true);\r\n              }\r\n              userClickedAt(2)\r\n            }\r\n          }}\r\n        >\r\n          {!adminStatusLoaded &&\r\n            <Loader\r\n               type=\"Oval\"\r\n               color=\"#674c9f\"\r\n               height={32}\r\n               width={32}\r\n            />\r\n          }\r\n          {channelAdmin && adminStatusLoaded && (onCoreNetwork ? true : aliasVerified) &&\r\n            <ControlChannelContainer>\r\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\r\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\r\n            </ControlChannelContainer>\r\n          }\r\n          {channelAdmin && adminStatusLoaded && (!aliasVerified && !onCoreNetwork) &&\r\n            <ControlChannelContainer>\r\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\r\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>Verify channel alias</ControlChannelText>\r\n            </ControlChannelContainer>\r\n          }\r\n          {!channelAdmin && adminStatusLoaded &&\r\n            <>\r\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\r\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\r\n            </>\r\n          }\r\n        </ControlButton>\r\n\r\n        <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(3)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\r\n          <ControlText active={controlAt == 3 ? 1 : 0}>Receive Notifs</ControlText>\r\n        </ControlButton>\r\n      </Controls>\r\n      <Interface>\r\n        {controlAt == 0 &&\r\n          <Feedbox\r\n            epnsReadProvider={epnsReadProvider}\r\n          />\r\n        }\r\n        {controlAt == 1 &&\r\n          <ViewChannels\r\n            epnsReadProvider={epnsReadProvider}\r\n            epnsCommReadProvider={epnsCommReadProvider}\r\n            epnsWriteProvide={epnsWriteProvider}\r\n            epnsCommWriteProvider={epnsCommWriteProvider}\r\n          />\r\n        }\r\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\r\n          <ChannelCreationDashboard />\r\n        }\r\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\r\n          <ChannelOwnerDashboard />\r\n        }\r\n        {controlAt == 3 &&\r\n          <Info/>\r\n        }\r\n        { toast && \r\n          <NotificationToast\r\n            notification={toast}\r\n            clearToast = {clearToast}\r\n          />\r\n        }\r\n        {\r\n          modalOpen &&\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n          />\r\n        }\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  border-bottom: 10px solid rgb(180,180,180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(3.5) translate(-20px, 0px);\r\n    opacity: 0.4;\r\n  `};\r\n`\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.3) translate(-10px, 0px);\r\n  `};\r\n`\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst ControlChannelImage = styled.img`\r\n    width: 20%;\r\n    margin-bottom: 10px;\r\n    transition: transform .2s ease-out;\r\n    ${ props => props.active && css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\r\n  transition: transform .2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.1) translate(0px, -20px);\r\n  `};\r\n\r\n`\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  margin: 15px;\r\n  overflow: hidden;\r\n`\r\n\r\n// Export Default\r\nexport default Home;\r\n","// Usage:\r\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\r\n//   npm install blockies-identicon\r\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\r\n//   import Blockies from \"blockies/react-component\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\nimport React from 'react';\r\nimport blockies from \"./blockies\";\r\n\r\nexport default class BlockiesIdenticon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getOpts () {\r\n    return {\r\n      seed: this.props.opts.seed || \"foo\",\r\n      color: this.props.opts.color || \"#dfe\",\r\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\r\n      size: this.props.opts.size || 15,\r\n      scale: this.props.opts.scale || 3,\r\n      spotcolor: this.props.opts.spotcolor || \"#000\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Check for prop change\r\n    if (this.props.seed !== prevProps.seed) {\r\n      this.draw();\r\n    }\r\n  }\r\n  draw() {\r\n    blockies.render({\r\n      seed: this.props.opts.seed,\r\n      size: this.props.opts.size,\r\n      scale: this.props.opts.scale\r\n    }, this.canvas);\r\n  }\r\n  render() {\r\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\n// Create Header\r\nfunction Profile() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function(name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <>\r\n    {account && account !== '' && !error &&\r\n      <Container>\r\n        <Blocky>\r\n          <BlockyInner>\r\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\r\n          </BlockyInner>\r\n        </Blocky>\r\n        <Wallet>\r\n        {!ensFetched &&\r\n          <Loader\r\n      \t     type=\"Oval\"\r\n      \t     color=\"#FFF\"\r\n      \t     height={16}\r\n      \t     width={16}\r\n      \t  />\r\n        }\r\n        {ensFetched && ens &&\r\n          <>{ens}</>\r\n        }\r\n        {ensFetched && !ens &&\r\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n        }\r\n        </Wallet>\r\n      </Container>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  margin: 0;\r\n  padding: 0;\r\n  background: none;\r\n  border: 0;\r\n  outline: 0;\r\n  justify-content: flex-start;\r\n  flex: 1,\r\n  flex-direction: row;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 0px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: rgb(226,8,128);\r\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\r\n  const [badge, setBadge] = React.useState(0);\r\n  const [ring, setRing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Set new badge count and ring the bell\r\n    setBadge(badgeCount);\r\n\r\n    if (badge > 0) {\r\n      setResetRinger();\r\n    }\r\n  }, [badgeCount]);\r\n\r\n  const setResetRinger = () => {\r\n    setRing(true);\r\n\r\n    setTimeout(() => {\r\n        setRing(false)\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (bellPressedCB) {bellPressedCB();}\r\n      }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\r\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\r\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\r\n      {badge != 0 &&\r\n        <AnimateOnChange\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOut\"\r\n          durationOut={200}\r\n        >\r\n          <Badge>{badge}</Badge>\r\n        </AnimateOnChange>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  position: relative;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst tadaaa = keyframes`\r\n  0% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n\r\nconst BellImage = styled.img`\r\n  position: absolute;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.ringme && css`\r\n    animation: ${tadaaa} 1s ease-out;\r\n  `};\r\n\r\n\r\n`\r\n\r\nconst BellImageAbs = styled(BellImage)`\r\n  left: 0,\r\n`\r\n\r\nconst Badge = styled.span`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #fff;\r\n  padding: 2px 4px;\r\n  border-radius: 100%;\r\n  background: rgba(208.0, 44.0, 30.0, 1.0);\r\n  top: 0px;\r\n  left: 5px;\r\n  font-weight: bold;\r\n`\r\n\r\n// Export Default\r\nexport default Bell;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport Profile from 'components/Profile';\r\nimport Bell from 'components/Bell';\r\n\r\n\r\n// Create Header\r\nfunction Header({ badgeCount, bellPressedCB }) {\r\n  const context = useWeb3React<Web3Provider>()\r\n\r\n  const { active, error, account, chainId } = useWeb3React();\r\n  const { deactivate } = context\r\n\r\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\r\n\r\n  function getErrorMessage(error: Error) {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      return \"Unsupported Network, please connect to the Ropsten or Polygon network\"\r\n    } else if (\r\n      error instanceof UserRejectedRequestErrorInjected\r\n    ) {\r\n      return 'Please authorize this website to access the dApp'\r\n    } else {\r\n      console.error(error)\r\n      return 'An unknown error occurred. Check the console for more details'\r\n    }\r\n  }\r\n\r\n  const bellPressed = () => {\r\n    setShowLoginControls(!showLoginControls);\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setShowLoginControls(false);\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer\r\n      direction=\"row\"\r\n      padding=\"10px 15px\"\r\n    >\r\n      <ItemH\r\n        justify=\"flex-start\"\r\n        flex=\"0\"\r\n      >\r\n        {active && !error &&\r\n          <Profile />\r\n        }\r\n        {!active &&\r\n          <Logo src=\"epns.png\" />\r\n        }\r\n      </ItemH>\r\n\r\n      <ItemH\r\n        justify=\"flex-end\"\r\n      >\r\n        {active && !error &&\r\n          <Bell\r\n            badgeCount={badgeCount}\r\n            bellPressedCB={bellPressed}\r\n            width={32}\r\n            height={32}\r\n          />\r\n        }\r\n\r\n        {showLoginControls &&\r\n          <Item\r\n            position=\"absolute\"\r\n          >\r\n            <Button\r\n              bg=\"#000\"\r\n              size=\"12px\"\r\n              spacing=\"0.2em\"\r\n              textTransform=\"uppercase\"\r\n              weight=\"600\"\r\n              radius=\"20px\"\r\n              onClick={() => disconnect()}\r\n            >\r\n              Disconnect\r\n            </Button>\r\n          </Item>\r\n        }\r\n\r\n        <ItemH\r\n          justify=\"flex-end\"\r\n          flex=\"initial\"\r\n        >\r\n          {!!error &&\r\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\r\n          }\r\n          {!active && !error &&\r\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\r\n          }\r\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\r\n        </ItemH>\r\n      </ItemH>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\n// CSS Styles\r\nconst HeaderContainer = styled(Section)`\r\n  @media (max-width: 1440px) {\r\n    background: rgb(255,255,255);\r\n  }\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst PrimaryTheme = styled(Notice)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ThirdTheme = styled(Notice)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst Connection = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n\r\n  ${props => props.phase === 'active' && css`\r\n    background: #77DD77;\r\n  `};\r\n\r\n  ${props => props.phase === 'waiting' && css`\r\n    background: #FFAE42;\r\n  `};\r\n\r\n  ${props => props.phase === 'error' && css`\r\n    background: #DC143C;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactGA from 'react-ga';\r\n\r\nimport styled from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport { useEagerConnect, useInactiveListener } from 'hooks'\r\nimport {\r\n  injected,\r\n  walletconnect,\r\n  portis,\r\n  trezor,\r\n  ledger\r\n} from 'connectors'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport Home from 'pages/Home';\r\nimport Header from 'segments/Header';\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst web3Connectors = {\r\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\r\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\r\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\r\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\r\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider, connector) {\r\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nfunction ChainId() {\r\n  const { chainId } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <span>Chain Id</span>\r\n      <span role=\"img\" aria-label=\"chain\">\r\n        ⛓\r\n      </span>\r\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction App() {\r\n  const context = useWeb3React<Web3Provider>()\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\r\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\r\n  const [ bellPressed, setBellPressed ] = React.useState(0);\r\n\r\n  // Initialize GA\r\n  ReactGA.initialize('UA-165415629-5');\r\n  ReactGA.pageview('/login');\r\n\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined)\r\n    }\r\n  }, [activatingConnector, connector])\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n\r\n  return (\r\n      <>\r\n        <HeaderContainer>\r\n          <Header\r\n            badgeCount={badgeCount}\r\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\r\n          />\r\n        </HeaderContainer>\r\n\r\n        <ParentContainer>\r\n        {(active) && !error && (\r\n          <HomeContainer>\r\n            <Home\r\n              setBadgeCount={setBadgeCount}\r\n              bellPressed={bellPressed}\r\n            />\r\n          </HomeContainer>\r\n\r\n        )}\r\n\r\n        {!active &&\r\n          <Item>\r\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\r\n            <Item\r\n              bg=\"#fafafa\"\r\n              border=\"1px solid #ddd\"\r\n              padding=\"15px\"\r\n              radius=\"12px\"\r\n            >\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\r\n              </H2>\r\n\r\n              <ItemH\r\n                maxWidth=\"800px\"\r\n                align=\"stretch\"\r\n              >\r\n                {Object.keys(web3Connectors).map(name => {\r\n                  const currentConnector = web3Connectors[name].obj\r\n                  const activating = currentConnector === activatingConnector\r\n                  const connected = currentConnector === connector\r\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n                  const image = web3Connectors[name].logo\r\n                  const title = web3Connectors[name].title\r\n\r\n                  return (\r\n                    <ProviderButton\r\n                      disabled={disabled}\r\n                      key={name}\r\n                      onClick={() => {\r\n                        setActivatingConnector(currentConnector)\r\n                        activate(currentConnector)\r\n                      }}\r\n                      border=\"#35c5f3\"\r\n                    >\r\n                      <ProviderImage src={image} />\r\n\r\n                      <Span\r\n                        spacing=\"0.1em\"\r\n                        textTransform=\"uppercase\"\r\n                        size=\"12px\"\r\n                        weight=\"600\"\r\n                        padding=\"10px\"\r\n                      >\r\n                        {title}\r\n                      </Span>\r\n                    </ProviderButton>\r\n                  )\r\n                })}\r\n              </ItemH>\r\n            </Item>\r\n\r\n            <Span margin=\"10px\" size=\"14px\">\r\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\r\n            </Span>\r\n          </Item>\r\n        }\r\n        </ParentContainer>\r\n\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n        />\r\n      </>\r\n  );\r\n}\r\n\r\n\r\n// CSS STYLES\r\nconst HeaderContainer = styled.header`\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`\r\n\r\nconst ParentContainer = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 80px 20px 50px 20px;\r\n  flex: 1;\r\n`\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-self: center;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n`\r\n\r\nconst ProviderLogo = styled.img`\r\n  width: 15vw;\r\n  align-self: center;\r\n  display: flex;\r\n  margin: 10px 20px 20px 20px;\r\n  min-width: 200px;\r\n`\r\n\r\nconst ProviderButton = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 280px;\r\n  background: #fff;\r\n  outline: 0;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n    border: 1px solid ${props => props.border}\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n    border: 1px solid ${props => props.border}\r\n  }\r\n`\r\n\r\nconst ProviderImage = styled.img`\r\n  width: 32px;\r\n  max-height: 32px;\r\n  padding: 10px;\r\n`\r\n\r\nconst ProviderLabel = styled.span`\r\n  font-size: 12px;\r\n  margin: 5px;\r\n`\r\n\r\nconst StyledContainer = styled(ToastContainer).attrs({\r\n  // custom props\r\n})`\r\n  .Toastify__toast-container {}\r\n  .Toastify__toast {}\r\n  .Toastify__toast--error {}\r\n  .Toastify__toast--warning {}\r\n  .Toastify__toast--success {}\r\n  .Toastify__toast-body {\r\n    font-size: 12px;\r\n  }\r\n  .Toastify__progress-bar {}\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\r\n\r\nimport './index.css';\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { ethers } from \"ethers\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// You should replace this uri with your own and put it into a .env file\r\nconst client = new ApolloClient({\r\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>,\r\n    document.getElementById(\"root\"),\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\r\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\r\nconst addresses = {\r\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\r\n  epnscore: \"0x77589b22d37C94473c17128beeb6bc3DaB58c09a\",\r\n  epnsEthComm: \"0x5B995e9831Be34aea8Ee38E0389245B6A35493Fd\", // the ropsten core contract\r\n  epnsPolyComm: \"0x3f9b6838C31F466266d50A8192dE95f5BEb37e8A\", // the ploygon comm contract\r\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\r\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\r\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\r\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\r\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\r\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\r\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\r\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\r\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\r\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\r\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\r\n};\r\n\r\nexport default addresses;\r\n","import erc20Abi from \"./abis/erc20\";\r\nimport ownableAbi from \"./abis/ownable\";\r\nimport epnscoreAbi from \"./abis/epnscore\";\r\nimport daiAbi from \"./abis/dai\";\r\nimport epnsTokenAbi from \"./abis/EPNS.json\";\r\nimport stakingAbi from \"./abis/Staking.json\";\r\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\r\nimport rockstarAbi from \"./abis/Rockstar.json\";\r\nimport ec721Abi from \"./abis/ERC721.json\";\r\nimport NFTRewards from \"./abis/NFTRewards.json\";\r\nimport epnsRopstenCommAbi from \"./abis/epnsRopstenCommunicator.json\";\r\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\r\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\r\n\r\nexport const abis = {\r\n  erc20: erc20Abi,\r\n  ownable: ownableAbi,\r\n  epnscore: epnscoreAbi,\r\n  epnsRopstenComm: epnsRopstenCommAbi,\r\n  epnsPolyComm: epnsCommAbi,\r\n  epnsComm: epnsCommAbi,\r\n  dai: daiAbi,\r\n  epnsToken: epnsTokenAbi,\r\n  staking: stakingAbi,\r\n  yieldFarming: yieldFarmingAbi,\r\n  rockstar: rockstarAbi,\r\n  erc721: ec721Abi,\r\n  NFTRewards: NFTRewards,\r\n  distributor: MerkleDistributorAbi,\r\n};\r\n\r\nexport { default as addresses } from \"./addresses\";\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  ItemBreak,\r\n  H1,\r\n  H2,\r\n  H3,\r\n  Image,\r\n  P,\r\n  Span,\r\n  Anchor,\r\n  Button,\r\n  Showoff,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\n\r\nimport { FiLink } from \"react-icons/fi\";\r\n\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst ipfs = require(\"ipfs-api\")();\r\n\r\nconst minStakeFees = 50;\r\n\r\n// Create Header\r\nfunction CreateChannel() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\r\n\r\n  const [uploadDone, setUploadDone] = React.useState(false);\r\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\r\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\r\n\r\n  const [channelName, setChannelName] = React.useState(\"\");\r\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\r\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\r\n  const [channelURL, setChannelURL] = React.useState(\"\");\r\n  const [channelFile, setChannelFile] = React.useState(undefined);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\r\n\r\n  const [stepFlow, setStepFlow] = React.useState(1);\r\n\r\n  React.useEffect(() => {});\r\n\r\n  // called every time a file's `status` changes\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n  };\r\n\r\n  const onDropHandler = (files) => {\r\n    //   var file = files[0]\r\n    //   const reader = new FileReader();\r\n    //   reader.onload = (event) => {\r\n    //     console.log(event.target.result);\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n    // setChannelFile(file);\r\n    // console.log(\"Drop Handler\");\r\n    // console.log(file);\r\n  };\r\n\r\n  // receives array of files that are done uploading when submit button is clicked\r\n  const handleLogoSubmit = (files, allFiles) => {\r\n    // console.log(files.map(f => f.meta))\r\n    allFiles.forEach((f) => {\r\n      var file = f.file;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      // console.log(f.file);\r\n\r\n      reader.onloadend = function(e) {\r\n        // console.log(reader.result);\r\n        const response = handleLogoSizeLimitation(reader.result);\r\n        if (response.success) {\r\n          setStepFlow(2);\r\n          setProcessing(0);\r\n          setUploadDone(true);\r\n          setChannelFile(reader.result);\r\n        } else {\r\n          setProcessing(3);\r\n          setProcessingInfo(response.info);\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleLogoSizeLimitation = (base64) => {\r\n    // Setup Error on higher size of 128px\r\n    var sizeOf = require(\"image-size\");\r\n    var base64Data = base64.split(\";base64,\").pop();\r\n    var img = Buffer.from(base64Data, \"base64\");\r\n    var dimensions = sizeOf(img);\r\n\r\n    // Only proceed if image is equal to or less than 128\r\n    if (dimensions.width > 128 || dimensions.height > 128) {\r\n      console.log(\"Image size check failed... returning\");\r\n      return {\r\n        success: 0,\r\n        info: \"Image size check failed, Image should be 128X128PX\",\r\n      };\r\n    }\r\n\r\n    // only proceed if png or jpg\r\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\r\n    // char(0) => '/' : jpg\r\n    // char(0) => 'i' : png\r\n    let fileext;\r\n    console.log(base64Data.charAt(0));\r\n    if (base64Data.charAt(0) == \"/\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else if (base64Data.charAt(0) == \"i\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else {\r\n      return {\r\n        success: 0,\r\n        info: \"Image extension should be jpg or png\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleCreateChannel = async (e) => {\r\n    // Check everything in order\r\n    // skip this for now\r\n    e.preventDefault();\r\n\r\n    if (\r\n      isEmpty(channelName) ||\r\n      isEmpty(channelInfo) ||\r\n      isEmpty(channelURL) ||\r\n      isEmpty(channelFile) ||\r\n      isEmpty(channelAlias)\r\n    ) {\r\n      setProcessing(3);\r\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\r\n\r\n      return false;\r\n    }\r\n\r\n    // Check complete, start logic\r\n    setChannelInfoDone(true);\r\n    setProcessing(1);\r\n\r\n    var alias = channelAlias.split(\":\");\r\n    var blockchain = alias[0];\r\n    var chain_id = alias[1];\r\n    var address = alias[2];\r\n\r\n    const input = JSON.stringify({\r\n      name: channelName,\r\n      info: channelInfo,\r\n      url: channelURL,\r\n      icon: channelFile,\r\n      blockchain: blockchain,\r\n      chain_id: chain_id,\r\n      address: address,\r\n    });\r\n\r\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n    setProcessingInfo(\"Uploading Payload...\");\r\n    const storagePointer = await ipfs.add(input);\r\n    console.log(\"IPFS storagePointer:\", storagePointer);\r\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\r\n    //console.log(await ipfs.cat(storagePointer));\r\n\r\n    // Send Transaction\r\n    // First Approve DAI\r\n    var signer = library.getSigner(account);\r\n\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n\r\n    // Pick between 50 DAI AND 25K DAI\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n\r\n    let contract = new ethers.Contract(\r\n      addresses.epnscore,\r\n      abis.epnscore,\r\n      signer\r\n    );\r\n\r\n    const channelType = 2; // Open Channel\r\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise = contract.createChannelWithFees(\r\n      channelType,\r\n      identityBytes,\r\n      fees\r\n    );\r\n\r\n    setProcessingInfo(\"Creating Channel TX in progress\");\r\n    anotherSendTxPromise\r\n      .then(async function(tx) {\r\n        console.log(tx);\r\n        console.log(\"Check: \" + account);\r\n        await library.waitForTransaction(tx.hash);\r\n        setProcessing(3);\r\n        setProcessingInfo(\"Channel Created\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error --> %o\", err);\r\n        setProcessing(3);\r\n        setProcessingInfo(\r\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //mind Dai\r\n  const mintDai = async () => {\r\n    var signer = library.getSigner(account);\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n\r\n    let daiAmount = 1000;\r\n    const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\r\n    var mintTransactionPromise = daiContract.mint(amount);\r\n    const tx = await mintTransactionPromise;\r\n    console.log(tx);\r\n    await library.waitForTransaction(tx.hash);\r\n    setProcessingInfo(\"1000 Dai minted successfully!\");\r\n    console.log(\"Transaction Completed\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                Create\r\n              </Span>\r\n              <Span weight=\"200\"> Your Channel!</Span>\r\n            </H2>\r\n            <H3>\r\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\r\n              extremely easy to open and maintain a genuine channel of\r\n              communication with your users.\r\n            </H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"0px 20px 20px\">\r\n          <ItemH justify=\"space-between\">\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Line />\r\n          </ItemH>\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* Image Upload Section */}\r\n      {!uploadDone && (\r\n        <Section>\r\n          <Content padding=\"50px 20px 20px\">\r\n            <Item align=\"flex-start\">\r\n              <H3 color=\"#e20880\">\r\n                Upload Channel Logo to start the process. Make sure image is\r\n                128x128px.\r\n              </H3>\r\n            </Item>\r\n\r\n            <Item margin=\"-10px 0px 20px 0px\">\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                onSubmit={handleLogoSubmit}\r\n                onDrop={onDropHandler}\r\n                maxFiles={1}\r\n                multiple={false}\r\n                accept=\"image/jpeg,image/png\"\r\n              />\r\n            </Item>\r\n            <Item align=\"flex-end\">\r\n              <Minter\r\n                onClick={() => {\r\n                  mintDai();\r\n                }}\r\n              >\r\n                <Pool>\r\n                  <br></br>\r\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\r\n                </Pool>\r\n              </Minter>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Stake Fees Section */}\r\n      {uploadDone && !stakeFeesChoosen && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item>\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              <Slider\r\n                defaultValue={minStakeFees}\r\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={minStakeFees}\r\n                marks\r\n                min={minStakeFees}\r\n                max={25000}\r\n              />\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={() => {\r\n                  setStakeFeesChoosen(true);\r\n                  setStepFlow(3);\r\n                }}\r\n              >\r\n                <Span\r\n                  color=\"#fff\"\r\n                  weight=\"400\"\r\n                  textTransform=\"uppercase\"\r\n                  spacing=\"0.1em\"\r\n                >\r\n                  Continue\r\n                </Span>\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Entry */}\r\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\r\n            </Item>\r\n\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleCreateChannel}\r\n            >\r\n              <Item\r\n                margin=\"-10px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Input\r\n                  required\r\n                  placeholder=\"Your Channel Name\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1.2em\"\r\n                  bg=\"#fff\"\r\n                  value={channelName}\r\n                  onChange={(e) => {\r\n                    setChannelName(e.target.value);\r\n                  }}\r\n                />\r\n                {channelName.trim().length == 0 && (\r\n                  <Span\r\n                    padding=\"4px 10px\"\r\n                    right=\"0px\"\r\n                    top=\"0px\"\r\n                    pos=\"absolute\"\r\n                    color=\"#fff\"\r\n                    bg=\"#000\"\r\n                    size=\"0.7rem\"\r\n                    z=\"1\"\r\n                  >\r\n                    Name of Channel\r\n                  </Span>\r\n                )}\r\n              </Item>\r\n\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Input\r\n                  required\r\n                  placeholder=\"Your Channel's Alias\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1rem\"\r\n                  bg=\"#fff\"\r\n                  value={channelAlias}\r\n                  onChange={(e) => {\r\n                    setChannelAlias(e.target.value);\r\n                  }}\r\n                />\r\n              </Item>\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <TextField\r\n                  required\r\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\r\n                  rows=\"4\"\r\n                  maxlength=\"200\"\r\n                  radius=\"4px\"\r\n                  padding=\"12px\"\r\n                  weight=\"400\"\r\n                  border=\"1px solid #000\"\r\n                  bg=\"#fff\"\r\n                  value={channelInfo}\r\n                  onChange={(e) => {\r\n                    setChannelInfo(e.target.value);\r\n                  }}\r\n                  autocomplete=\"off\"\r\n                />\r\n              </Item>\r\n\r\n              <ItemH\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"center\"\r\n              >\r\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                  <FiLink size={24} color=\"#000\" />\r\n                </Item>\r\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Call to Action Link\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #000\"\r\n                    radius=\"4px\"\r\n                    weight=\"400\"\r\n                    bg=\"#f1f1f1\"\r\n                    value={channelURL}\r\n                    onChange={(e) => {\r\n                      setChannelURL(e.target.value);\r\n                    }}\r\n                  />\r\n                  {channelURL.trim().length == 0 && (\r\n                    <Span\r\n                      padding=\"4px 10px\"\r\n                      right=\"0px\"\r\n                      top=\"0px\"\r\n                      pos=\"absolute\"\r\n                      color=\"#fff\"\r\n                      bg=\"#000\"\r\n                      size=\"0.7rem\"\r\n                      z=\"1\"\r\n                    >\r\n                      Channel's Website URL\r\n                    </Span>\r\n                  )}\r\n                </Item>\r\n              </ItemH>\r\n\r\n              <Item\r\n                margin=\"15px 0px 0px 0px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Button\r\n                  bg=\"#e20880\"\r\n                  color=\"#fff\"\r\n                  flex=\"1\"\r\n                  radius=\"0px\"\r\n                  padding=\"20px 10px\"\r\n                  disabled={processing == 1 ? true : false}\r\n                >\r\n                  {processing == 1 && (\r\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\r\n                  )}\r\n                  {processing != 1 && (\r\n                    <Input\r\n                      cursor=\"hand\"\r\n                      textTransform=\"uppercase\"\r\n                      color=\"#fff\"\r\n                      weight=\"400\"\r\n                      size=\"0.8em\"\r\n                      spacing=\"0.2em\"\r\n                      type=\"submit\"\r\n                      value=\"Setup Channel\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Item>\r\n            </FormSubmision>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Setup Progress */}\r\n      {(processing == 1 || processing == 3) && (\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            {processing == 1 && (\r\n              <Item margin=\"20px 0px 10px 0px\">\r\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\r\n              </Item>\r\n            )}\r\n\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin=\"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Step = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  background: ${(props) => props.bg || \"#fff\"};\r\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\r\n  border-radius: 100%;\r\n\r\n  ${({ type }) =>\r\n    type == \"active\" &&\r\n    css`\r\n      background: ${(props) => props.activeBG || \"#ddd\"};\r\n      border: 4px solid #00000022;\r\n    `};\r\n`;\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Channel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #674c9f;\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  margin-top: 0px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Info = styled.label`\r\n  padding-bottom: 20px;\r\n  font-size: 14px;\r\n  color: #000;\r\n`;\r\n\r\nconst Info2 = styled(Info)``;\r\nconst Name = styled(Input)`\r\n  border-bottom: 1px solid #e20880;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst ShortInfo = styled.textarea`\r\n  outline: 0;\r\n  border: 0;\r\n  border-bottom: 1px solid #35c5f3;\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-height: 80px;\r\n  color: #111;\r\n`;\r\n\r\nconst Url = styled(Input)`\r\n  border-bottom: 1px solid #674c9f;\r\n  font-size: 1=8px;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Continue = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  background: ${(props) => props.theme || \"#674c9f\"};\r\n  margin: 30px 0px 0px 0px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\nconst Minter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n  // font-size: 11px;\r\n`;\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n`;\r\n\r\n// Export Default\r\nexport default CreateChannel;\r\n","(function() {\r\n\t// The random number is a js implementation of the Xorshift PRNG\r\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\n\r\n\tfunction seedrand(seed) {\r\n\t\tfor (var i = 0; i < randseed.length; i++) {\r\n\t\t\trandseed[i] = 0;\r\n\t\t}\r\n\t\tfor (var i = 0; i < seed.length; i++) {\r\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rand() {\r\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\r\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\r\n\r\n\t\trandseed[0] = randseed[1];\r\n\t\trandseed[1] = randseed[2];\r\n\t\trandseed[2] = randseed[3];\r\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\r\n\r\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\r\n\t}\r\n\r\n\tfunction createColor() {\r\n\t\t//saturation is the whole color spectrum\r\n\t\tvar h = Math.floor(rand() * 360);\r\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\r\n\t\tvar s = ((rand() * 60) + 40) + '%';\r\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\r\n\r\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n\t\treturn color;\r\n\t}\r\n\r\n\tfunction createImageData(size) {\r\n\t\tvar width = size; // Only support square icons for now\r\n\t\tvar height = size;\r\n\r\n\t\tvar dataWidth = Math.ceil(width / 2);\r\n\t\tvar mirrorWidth = width - dataWidth;\r\n\r\n\t\tvar data = [];\r\n\t\tfor(var y = 0; y < height; y++) {\r\n\t\t\tvar row = [];\r\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\r\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\r\n\t\t\t\t// spot color has 13% chance\r\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\r\n\t\t\t}\r\n\t\t\tvar r = row.slice(0, mirrorWidth);\r\n\t\t\tr.reverse();\r\n\t\t\trow = row.concat(r);\r\n\r\n\t\t\tfor(var i = 0; i < row.length; i++) {\r\n\t\t\t\tdata.push(row[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction buildOpts(opts) {\r\n\t\tvar newOpts = {};\r\n\r\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\r\n\r\n\t\tseedrand(newOpts.seed);\r\n\r\n\t\tnewOpts.size = opts.size || 8;\r\n\t\tnewOpts.scale = opts.scale || 4;\r\n\t\tnewOpts.color = opts.color || createColor();\r\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\r\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\r\n\r\n\t\treturn newOpts;\r\n\t}\r\n\r\n\tfunction renderIcon(opts, canvas) {\r\n\t\topts = buildOpts(opts || {});\r\n\t\tvar imageData = createImageData(opts.size);\r\n\t\tvar width = Math.sqrt(imageData.length);\r\n\r\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\r\n\r\n\t\tvar cc = canvas.getContext('2d');\r\n\t\tcc.fillStyle = opts.bgcolor;\r\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\tcc.fillStyle = opts.color;\r\n\r\n\t\tfor(var i = 0; i < imageData.length; i++) {\r\n\r\n\t\t\t// if data is 0, leave the background\r\n\t\t\tif(imageData[i]) {\r\n\t\t\t\tvar row = Math.floor(i / width);\r\n\t\t\t\tvar col = i % width;\r\n\r\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\r\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\r\n\r\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createIcon(opts) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\r\n\t\trenderIcon(opts, canvas);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tvar api = {\r\n\t\tcreate: createIcon,\r\n\t\trender: renderIcon\r\n\t};\r\n\r\n\tif (typeof module !== \"undefined\") {\r\n\t\tmodule.exports = api;\r\n\t}\r\n\tif (typeof window !== \"undefined\") {\r\n\t\t window.blockies = api;\r\n\t}\r\n\r\n})();\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  align-self: stretch;\r\n  justify-content: center;\r\n  align-items: ${props => props.align || 'initial'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  margin: ${props => props.margin || '0px'};\r\n  padding: ${props => props.padding || '0px'};\r\n  overflow: ${props => props.overflow || 'initial'};\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\nexport const SectionFS = styled(Section)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const SectionFSHero = styled(Section)`\r\n  min-height: 100vh;\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const SectionHero = styled(Section)`\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${props => props.padding || \"40px 0px\"};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  position: relative;\r\n`\r\n\r\nexport const ItemBreak = styled.div`\r\n  flex-basis: 100%;\r\n`\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: ${props => props.wrap || 'wrap'};\r\n  position: ${props => props.position || 'relative'};\r\n  justify-content: center;\r\n  background: ${props => props.bg || 'transparent'};\r\n  flex: ${props => props.flex || '1'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  margin: ${props => props.margin || '0px'};\r\n  min-width: ${props => props.minWidth || 'auto'};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  width: ${props => props.width || \"auto\" };\r\n  height: ${props => props.height || \"auto\" };\r\n\r\n  border: ${props => props.border || \"none\"};\r\n\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  overflow: ${props => props.overflow || \"initial\"};\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\r\n  }\r\n\r\n  ${ItemBreak} {\r\n    width: 0;\r\n  }\r\n`\r\n\r\nexport const ItemH = styled(Item)`\r\n  flex-direction: row;\r\n  flex: ${props => props.flex || '1'};\r\n\r\n  ${ItemBreak} {\r\n    width: auto;\r\n    height: 0;\r\n  }\r\n`\r\n\r\nexport const WaveOuter = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: ${props => props.bottom || '-70px'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const WaveInner = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const Arc = styled.div`\r\n  position: absolute;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n  \twidth: 300%;\r\n  \theight: 300%;\r\n  \ttop: -25%;\r\n  \tleft: -100%;\r\n\r\n\r\n    ${ props => props.arcRGB && css`\r\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\r\n    `};\r\n  }\r\n`\r\n\r\nexport const H1 = styled.h1`\r\n  @media (max-width: 480px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n`\r\n\r\nexport const H3 = styled.h3`\r\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"1rem\"};\r\n  text-transform: ${props => props.textTransform || \"uppercase\"};\r\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n`\r\n\r\nexport const P = styled.p`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n`\r\n\r\nexport const Para = styled(P)`\r\n  font-weight: ${props => props.weight || 300};\r\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\r\n  font-size: ${props => props.size || \"1.1em\"};\r\n  color: ${props => props.color || \"#000000ee\"};\r\n`\r\n\r\nexport const Span = styled.span`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n\r\n  position: ${props => props.pos || 'initial'};\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  z-index: ${props => props.z || 'auto'};\r\n`\r\n\r\nexport const B = styled.span`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 'bold'};\r\n`\r\n\r\nexport const UL = styled.ul`\r\n\r\n`\r\n\r\nexport const LI = styled.li`\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  width: ${props => props.width || \"initial\" };\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`\r\n\r\nexport const A = styled(Anchor)`\r\n  display: inline;\r\n  color: #e1087f;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"tranparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"initial\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  text-transform: ${props => props.textTransform || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const Showoff = styled.div`\r\n  position: absolute;\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n  opacity: ${props => props.opacity || 'initial'};\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n\r\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\r\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\r\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\r\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\r\n\r\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\r\n\r\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\r\n  }\r\n`\r\n\r\nexport const FormSubmision = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  position: relative;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: ${props => props.display || 'flex'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n\r\n  cursor: ${props => props.cursor || \"initial\"};\r\n  pointer: ${props => props.hand || \"initial\"};\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nexport const TextField = styled.textarea`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  resize: vertical;\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n"],"sourceRoot":""}