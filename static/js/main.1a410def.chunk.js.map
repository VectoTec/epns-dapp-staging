{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","helpers/EPNSCoreHelper.js","singletons/ChannelsDataStore.js","assets/Device.js","components/ViewNotificationItem.js","components/NotificationToast.js","segments/Feedbox.tsx","components/DisplayNotice.js","singletons/UsersDataStore.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","components/ViewInfoItem.js","segments/Info.tsx","components/SendNotifications.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","memberExists","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","account","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","count","memberCount","bigNumberify","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelJsonAsync","instance","size","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelDetailsWrapper","styled","Container","SkeletonWrapper","props","atW","atH","borderRadius","marginBottom","marginRight","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Pool","PoolShare","ViewNotificationItem","notificationObject","useWeb3React","library","React","useState","notification","setNotification","loading","setLoading","useEffect","notifications","id","color","width","height","notificationTitle","notificationBody","indexTimeStamp","moment","utc","parseInt","local","format","Toaster","NotificationToast","clearToast","LoaderToast","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Items","Feedbox","setNotifications","finishedFetching","setFinishedFetching","showToast","currentPage","setCurrentPage","loadNotifications","body","axios","post","data","parsedNotification","results","parseAPINotifications","oldNotifications","finally","subscribe","handlePagination","prevPage","newPage","newNotification","onReceive","existingNotifications","fn","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","notificationId","toLocaleLowerCase","ipfsId","channelJson","ipfsNotification","now","title","name","type","isSubscribed","off","bind","oneAPINotification","payloadId","payload_id","payload","amsg","timeStamp","matches","match","oneNotification","index","Number","showWayPoint","onEnter","Notice","span","theme","css","DisplayNotice","animationIn","animationOut","durationOut","UserEvents","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","add","sub","PublicKeyRegistered","once","incrementUsersCountAsync","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","disabled","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsWriteProvide","setChannelJson","subscribed","setSubscribed","txInProgress","setTxInProgress","fetchChannelJson","registerCallbacks","subs","subscribeAction","getSigner","signMessage","signature","recoverPublicKey","arrayify","hashMessage","formattedPubKey","slice","error","withPublicKey","subscribeWithPublicKey","tx","txToast","waitForTransaction","hash","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscribe","src","icon","href","target","rel","info","poolContribution","Faucets","margin","self","bg","radius","padding","border","overflow","align","pos","top","right","weight","direction","spacing","textAlign","textTransform","ContainerInfo","ViewChannels","controlAt","setChannels","setChannelLength","paginatedChannels","setPaginatedChannels","setUser","owner","setOwner","page","setPage","channelsVisited","fetchInitialsChannelMeta","prev","updateCurrentPage","loadMoreChannelMeta","ownerAddr","totalChannelsLength","newPageNumber","startingPoint","moreChannels","oldChannels","keys","channellized","AppLink","AppLinkText","ViewInfoItem","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","dotenv","InfoBox","Info","NFTypes","DropdownStyledParent","DropdownStyled","Dropdown","SendNotifications","active","nfProcessing","setNFProcessing","nfRecipient","setNFRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","handleSendMessage","preventDefault","notificationToast","signer","Contract","addresses","epnscore","abis","nsub","nmsg","asub","acta","aimg","k","publickey","storagePointer","isEmpty","JSON","stringify","at","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","INFO","wait","field","trim","flex","justify","onSubmit","minWidth","options","onChange","option","placeholder","display","Switch","checked","required","z","borderBottom","rows","autocomplete","cursor","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsReadProvider","epnsWriteProvider","setEpnsWriteProvider","setControlAt","adminStatusLoaded","setAdminStatusLoaded","channelAdmin","setChannelAdmin","contractInstance","signerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","ref","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","toLowerCase","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","className","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","obj","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","currentConnector","image","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","Boolean","location","hostname","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","Step","activeBG","Line","h1","Minter","Input","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","channelName","setChannelName","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","channelStakeFees","setChannelStakeFees","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","daiContract","fees","parseUnits","sendTransactionPromise","approve","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","status","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","defaultValue","onChangeCommitted","aria-labelledby","valueLabelDisplay","step","marks","min","max","maxlength","randseed","Array","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","transform","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.1a410def.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\r\nimport {encrypt, decrypt} from 'eccrypto';\r\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CryptoHelper = {\r\n  // To Encrypt with AES\r\n  encryptWithAES: function(message, key) {\r\n    return CryptoJS.AES.encrypt(message, key).toString();\r\n  },\r\n  // To Decrypt with AES\r\n  decryptWithAES: function(message, key) {\r\n    let bytes  = CryptoJS.AES.decrypt(message, key);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n  // To Form Encryted Secret, no more than 15 characters supported\r\n  encryptWithECIES: async function(message, publicKey) {\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\r\n\r\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\r\n\r\n    // Not using it since sqlite2 has some error with this\r\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\r\n\r\n    return encryptedSecret;\r\n  },\r\n  // To Form Decrypted Secret, no more than 15 characters supported\r\n  decryptWithECIES: async function(message, privateKey) {\r\n    // Message is always compressed, not using because sqlite2 has some error with this\r\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\r\n\r\n    return await this.decryptWithPrivateKey(message, privateKey);\r\n  },\r\n  // Encryption with public key\r\n  encryptWithPublicKey: async function(message, publicKey) {\r\n    // Convert compressed public key, starts with 03 or 04\r\n    const pubKeyUint8Array = Uint8Array.from(\r\n      new Buffer(publicKey, 'hex')\r\n    );\r\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\r\n\r\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\r\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\r\n\r\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\r\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\r\n\r\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\r\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\r\n\r\n    return encrypt(\r\n        pubKey,\r\n        Buffer(message)\r\n    ).then(encryptedBuffers => {\r\n      const cipher = {\r\n          iv: encryptedBuffers.iv.toString('hex'),\r\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\r\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\r\n          mac: encryptedBuffers.mac.toString('hex')\r\n      };\r\n      // use compressed key because it's smaller\r\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\r\n      const input = Uint8Array.from(\r\n        new Buffer(cipher.ephemPublicKey, 'hex')\r\n      );\r\n      const keyConvert = publicKeyConvert(input, true)\r\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\r\n\r\n      const keyConvertBuffer = new Buffer(keyConvert);\r\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n      // console.log(keyConvertBuffer);\r\n\r\n      //console.log(keyConvert);\r\n      const compressedKey = keyConvertBuffer.toString('hex')\r\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\r\n      // console.log(compressedKey);\r\n\r\n      const ret = Buffer.concat([\r\n        new Buffer(cipher.iv, 'hex'), // 16bit\r\n        new Buffer(compressedKey, 'hex'), // 33bit\r\n        new Buffer(cipher.mac, 'hex'), // 32bit\r\n        new Buffer(cipher.ciphertext, 'hex') // var bit\r\n      ]).toString('hex')\r\n\r\n      return ret\r\n    });\r\n  },\r\n  // Decryption with public key\r\n  decryptWithPrivateKey: async function(message, privateKey) {\r\n    let encrypted = message;\r\n    const buf = new Buffer(encrypted, 'hex');\r\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\r\n\r\n    encrypted = {\r\n      iv: buf.toString('hex', 0, 16),\r\n      ephemPublicKey: buf.toString('hex', 16, 49),\r\n      mac: buf.toString('hex', 49, 81),\r\n      ciphertext: buf.toString('hex', 81, buf.length)\r\n    };\r\n    // decompress publicKey\r\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\r\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\r\n    const keyConvert = publicKeyConvert(input, false)\r\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\r\n\r\n    const keyConvertBuffer = new Buffer(keyConvert);\r\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n    // console.log(keyConvertBuffer);\r\n\r\n    //console.log(keyConvert);\r\n    const uncompressedKey = keyConvertBuffer.toString('hex')\r\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\r\n    // console.log(uncompressedKey);\r\n\r\n    encrypted.ephemPublicKey = uncompressedKey;\r\n    const twoStripped = privateKey.substring(2)\r\n\r\n    const encryptedBuffer = {\r\n      iv: new Buffer(encrypted.iv, 'hex'),\r\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\r\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\r\n      mac: new Buffer(encrypted.mac, 'hex')\r\n    };\r\n\r\n    return decrypt(\r\n      new Buffer(twoStripped, 'hex'),\r\n      encryptedBuffer\r\n    ).then(decryptedBuffer => decryptedBuffer.toString());\r\n  },\r\n  // Testing of Encryption and Decryption from Public to Private key\r\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\r\n    const startTime = new Date();\r\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\r\n\r\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\r\n    //console.log(compressedKey);\r\n\r\n    // const bytesCompKey = Uint8Array.from(compressedKey);\r\n    //console.log(bytesCompKey);\r\n\r\n    const msgToEncrypt = \"PartialStringAS\";\r\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\r\n    console.log(\"Encryped Message With compressed public key:\" + msg);\r\n\r\n    const encryptionTime = new Date().getTime() - startTime.getTime();\r\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\r\n\r\n    // Decrypt this message\r\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\r\n\r\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\r\n  },\r\n  // To output messge payload if required\r\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\r\n    // Output AES\r\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\r\n    console.log(\"---------------------\");\r\n    console.log(\"secret --> \");\r\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\r\n    const asubE = this.encryptWithAES(subject, secret);\r\n    const amsgE = this.encryptWithAES(message, secret);\r\n    const actaE = this.encryptWithAES(calltoaction, secret);\r\n    const aimgE = this.encryptWithAES(imageurl, secret);\r\n\r\n    console.log(secretEncrypted);\r\n    console.log(\"asub --> \");\r\n    console.log(asubE);\r\n    console.log(\"amsg --> \");\r\n    console.log(amsgE);\r\n    console.log(\"acta --> \");\r\n    console.log(actaE);\r\n    console.log(\"aimg --> \");\r\n    console.log(aimgE);\r\n    console.log(\"decrypted secret --> \");\r\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\r\n    console.log(\"decrypted asub --> \");\r\n    console.log(this.decryptWithAES(asubE, secret));\r\n    console.log(\"decrypted amsg --> \");\r\n    console.log(this.decryptWithAES(amsgE, secret));\r\n    console.log(\"decrypted acta --> \");\r\n    console.log(this.decryptWithAES(actaE, secret));\r\n    console.log(\"decrypted aimg --> \");\r\n    console.log(this.decryptWithAES(aimgE, secret));\r\n  },\r\n  makeid: function (length) {\r\n     var result           = '[' + new Date().toISOString() + '] ';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n};\r\n\r\nexport default CryptoHelper;\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\nimport { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nrequire('dotenv').config();\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  3: process.env.REACT_APP_RPC_URL_3 as string\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [3] })\r\n\r\n// export const network = new NetworkConnector({\r\n//   urls: { 3: RPC_URLS[3] },\r\n//   defaultChainId: 3,\r\n//   pollingInterval: POLLING_INTERVAL\r\n// })\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 3: RPC_URLS[3] },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n//\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'web3-react example'\r\n// })\r\n//\r\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: 3,\r\n  url: RPC_URLS[3],\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: 'support@epns.io',\r\n  manifestAppUrl: 'https://staging-app.epns.io'\r\n})\r\n\r\n//\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n//\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n//\r\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\r\n\r\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\r\n\r\n// export const squarelink = new SquarelinkConnector({\r\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\r\n//   networks: [1, 100]\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nrequire('dotenv').config();\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized: boolean) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error, activate } = useWeb3React()\r\n\r\n  useEffect((): any => {\r\n    const { ethereum } = window as any\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\")\r\n        activate(injected)\r\n      }\r\n      const handleChainChanged = (chainId: string | number) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n        activate(injected)\r\n      }\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n        if (accounts.length > 0) {\r\n          activate(injected)\r\n        }\r\n      }\r\n      const handleNetworkChanged = (networkId: string | number) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n        activate(injected)\r\n      }\r\n\r\n      ethereum.on('connect', handleConnect)\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n      ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect)\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n        }\r\n      }\r\n    }\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\nimport { parseEther, bigNumber } from 'ethers/utils'\r\n\r\n// FeedDB Helper Function\r\nconst EPNSCoreHelper = {\r\n  // To get owner info\r\n  getOwnerInfo: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.governance()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To get user info\r\n  getUserInfo: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then(response => {\r\n          const mappings = { ...response };\r\n          mappings.addr = user;\r\n\r\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel address from it's id\r\n  getChannelAddressFromID: async (channelID, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.mapAddressChannels(channelID)\r\n        .then(response => {\r\n          console.log(\"getChannelAddressFromID() --> %o\", response.toString());\r\n          resolve(response.toString());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve a channel's Info from channel address\r\n  getChannelInfo: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channels(channel)\r\n        .then(response => {\r\n          // Add an extra field for future info\r\n          const mappings = { ...response };\r\n          mappings.addr = channel;\r\n\r\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel's AddChannel event\r\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      // To get channel ipfs hash from channel info\r\n      let filter = contract.filters.AddChannel(channel);\r\n      let block = startBlock;\r\n      if (startBlock != updateBlock) {\r\n        filter = contract.filters.UpdateChannel(channel);\r\n        block = updateBlock;\r\n      }\r\n\r\n      contract.queryFilter(filter, block, block)\r\n        .then(response => {\r\n          let filteredResponse;\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args.channel.toString() == channel.toString()) {\r\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\r\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\r\n          resolve(filteredResponse);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Retrive IPFS File from ipfshash\r\n  getJsonFileFromIdentity: async(identity) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Split Channel Identity, delimeter of identity is \"+\"\r\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\r\n\r\n      if (ids[0] == 1) {\r\n        // IPFS HASH\r\n        // Form Gateway URL\r\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\r\n        fetch(url)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\r\n            resolve(response);\r\n          })\r\n          .catch(err => {\r\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n\r\n    });\r\n  },\r\n  // Helper to get Channel from Channel's address\r\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getChannelInfo(channel, contract)\r\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\r\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from User's address\r\n  getChannelJsonFromUserAddress: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getUserInfo(user, contract)\r\n        .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Channels\r\n  getTotalNumberOfChannels: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.channelsCount()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\r\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\r\n        .then(async (response) => {\r\n          let channelsInfo = [];\r\n          const channelsCount = response;\r\n\r\n          if (atIndex > channelsCount || atIndex == -1) {\r\n            atIndex = channelsCount - 1;\r\n          }\r\n\r\n          if (numChannels == -1) {\r\n            numChannels = channelsCount;\r\n          }\r\n\r\n          // Get channels\r\n          let channelArrays = [];\r\n\r\n          // prefil and then refil\r\n          let count = 0;\r\n          for (let i = numChannels - 1; i >= 0; i--) {\r\n            const assignedChannelID = atIndex - i;\r\n            channelArrays.push(assignedChannelID);\r\n          }\r\n\r\n          const promises = channelArrays.map(async (channelID) => {\r\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\r\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\r\n                channelsInfo = [response, ...channelsInfo];\r\n              })\r\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\r\n          });\r\n\r\n          // wait until all promises are resolved\r\n          await Promise.all(promises);\r\n\r\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\r\n          resolve(channelsInfo);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\r\n          reject(err);\r\n        })\r\n    });\r\n  },\r\n  // Get Total Number of Users\r\n  getTotalNumberOfUsers: async (contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.usersCount()\r\n        .then(response => {\r\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve public key of a user\r\n  getPublicKey: async (address, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filteredResponse;\r\n      contract.queryFilter('PublicKeyRegistered')\r\n        .then(response => {\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args[0] == address) {\r\n              filteredResponse = item;\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\r\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\r\n\r\n          if (!filteredResponse || filteredResponse.length == 0) {\r\n            resolve(null)\r\n          }\r\n          else {\r\n            resolve(filteredResponse.args[1]);\r\n          }\r\n\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getSubscribedStatus: async (user, channel, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.memberExists(user, channel)\r\n        .then(response => {\r\n          console.log(\"getSubscribedStatus() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getTotalSubscribedChannels: async (user, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users[user].subscribedCount()\r\n        .then(response => {\r\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Fair Share\r\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then((response) => {\r\n          if (response.userActivated) {\r\n            contract.calcAllChannelsRatio(user, block)\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\r\n                resolve(response);\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n                reject(err);\r\n              });\r\n          }\r\n          else {\r\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\r\n            reject(\"User not activated\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Pool Funds\r\n  getPoolFunds: async(contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.poolFunds()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Helper Functions\r\n  // To format Big Number\r\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\r\n    try {\r\n      if (convertToCurrency) {\r\n        bignumber = bignumber.div(100000000000000);\r\n        bignumber = bignumber.div(10000);\r\n      }\r\n      bignumber = bignumber.toNumber();\r\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return \"---\";\r\n    }\r\n  },\r\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\r\n  metricFormatter: (num, digits) => {\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1E3, symbol: \"k\" },\r\n      { value: 1E6, symbol: \"M\" },\r\n      { value: 1E9, symbol: \"G\" },\r\n      { value: 1E12, symbol: \"T\" },\r\n      { value: 1E15, symbol: \"P\" },\r\n      { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n  },\r\n\r\n}\r\n\r\nexport default EPNSCoreHelper;\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { bigNumber, bigNumberify } from 'ethers/utils'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n// STATIC SINGLETON\r\nexport const ChannelEvents = {\r\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\r\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\r\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\r\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\r\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\r\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\r\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\r\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\r\n}\r\n\r\nexport default class ChannelsDataStore {\r\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\r\n\r\n    state = {\r\n      channelsCount: -1,\r\n      channelsMeta: {},\r\n      channelsJson: {},\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetChannelsListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.initChannelsListenersAsync();\r\n\r\n      // next get store channels count\r\n      this.getChannelsCountAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetChannelsListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\r\n      }\r\n    }\r\n\r\n    // init LISTENERS\r\n    initChannelsListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForAddChannelAnyAsync();\r\n      await this.listenForAddChannelSelfAsync();\r\n\r\n      await this.listenForUpdateChannelAnyAsync();\r\n      await this.listenForUpdateChannelSelfAsync();\r\n\r\n      await this.listenForSubscribeAnyAsync();\r\n      await this.listenForSubscribeSelfAsync();\r\n      await this.listenForUnsubscribeAnyAsync();\r\n      await this.listenForUnsubscribeSelfAsync();\r\n    }\r\n\r\n    // 1. Add Any Channel Listeners\r\n    listenForAddChannelAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.AddChannel(null, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // Do own stuff\r\n        await this.incrementChannelsCountAsync(1);\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 2. Add Self Channel Listener\r\n    listenForAddChannelSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.AddChannel(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // Do own stuff\r\n        // Nothing to do, just do callback\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 3. Update Any Channel Listener\r\n    listenForUpdateChannelAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.UpdateChannel(null, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 4. Update Self Channel Listener\r\n    listenForUpdateChannelSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, ipfs) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\r\n            if (callback) { callback(channel, ipfs); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 5. Subscriber Any\r\n    listenForSubscribeAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Subscribe(null, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // Do own stuff\r\n        if (this.state.channelsMeta[channel]) {\r\n          const channelID = this.state.channelsMeta[channel];\r\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n          count = count + 1;\r\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n        }\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 6. Subscriber Self\r\n    listenForSubscribeSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Subscribe(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 7. Unsubscribe Any\r\n    listenForUnsubscribeAnyAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Unsubscribe(null, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // Do own stuff\r\n        if (this.state.channelsMeta[channel]) {\r\n          const channelID = this.state.channelsMeta[channel];\r\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n          count = count - 1;\r\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n        }\r\n\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 8. Unsubscribe Self\r\n    listenForUnsubscribeSelfAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // CHANNELS COUNT\r\n    getChannelsCountAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.channelsCount = response;\r\n\r\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\r\n              resolve(this.state.channelsCount)\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n        else {\r\n          resolve(this.state.channelsCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementChannelsCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getChannelsCountAsync()\r\n          .then(response => {\r\n            this.state.channelsCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\r\n            resolve(this.state.channelsCount)\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n\r\n    }\r\n\r\n    // CHANNELS META FUNCTIONS\r\n    // To get channels meta\r\n    // get channels meta in a paginated format\r\n    // by passing in the starting index and the number of items per page\r\n    getChannelsMetaAsync = async (startIndex, pageCount) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        // get total number of channels\r\n        const channelsCount = await this.getChannelsCountAsync();\r\n        let stopIndex = startIndex + pageCount;\r\n\r\n        // if the stop index is -1 then get all channels\r\n        if (stopIndex == -1 || stopIndex > channelsCount) {\r\n          stopIndex = channelsCount;\r\n        }\r\n\r\n        // initialise an array with the values from 0 to the length of the number of channels\r\n        let channelIDs = [];\r\n\r\n        for(let i=startIndex; i < stopIndex ; i++){\r\n          channelIDs.push(i)\r\n        }\r\n\r\n        const promises = channelIDs.map(async (channelID) => {\r\n          // Match the cache\r\n          return this.getChannelMetaAsync(channelID)\r\n            .then(response => response )\r\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\r\n        });\r\n\r\n        // wait until all promises are resolved\r\n        const channelMetaData = await Promise.all(promises);\r\n\r\n        // return channels meta\r\n        console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\r\n        resolve(channelMetaData);\r\n      });\r\n    }\r\n\r\n    // To get a single channel meta via id\r\n    getChannelMetaAsync = async (channelID) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsMeta[channelID]) {\r\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\r\n          resolve(this.state.channelsMeta[channelID]);\r\n        }\r\n        else {\r\n          let channelAddress;\r\n\r\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\r\n            .then(async response => {\r\n              channelAddress = response;\r\n              await this.getChannelMetaViaAddressAsync(channelAddress)\r\n                .then(response => {\r\n                  // update the channel cache before resolving\r\n                  this.state.channelsMeta[channelID] = response;\r\n                  this.state.channelsMeta[channelAddress] = channelID;\r\n\r\n                  // resolve\r\n                  console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\r\n                  resolve(response);\r\n                })\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n    // To get a single channel meta via address\r\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsMeta[channelAddress]) {\r\n          const channelID = this.state.channelsMeta[channelAddress];\r\n\r\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\r\n          resolve(this.state.channelsMeta[channelID]);\r\n        }\r\n        else {\r\n          // Can't cache this :(, no way to know channel id\r\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\r\n            .then(response => {\r\n              // resolve\r\n              console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\r\n              resolve(response);\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n    // CHANNELS INFO FUNCTIONS\r\n    // To get a single channel meta via id\r\n    getChannelJsonAsync = async (channelAddress) => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsJson[channelAddress]) {\r\n          console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\r\n          resolve(this.state.channelsJson[channelAddress]);\r\n        }\r\n        else {\r\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\r\n            .then(response => {\r\n              // First set the cache\r\n              this.state.channelsJson[channelAddress] = response;\r\n\r\n              // resolve\r\n              console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\r\n              resolve(response);\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px'\r\n}\r\n\r\nexport const Device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from \"ethers\";\r\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\r\nimport moment from 'moment';\r\n\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\n\r\nfunction ViewNotificationItem({ notificationObject }) {\r\n  const { account, library } = useWeb3React();\r\n  const [ notification, setNotification ] = React.useState(null);\r\n  const [ subscribed, setSubscribed ] = React.useState(false);\r\n  const [ loading, setLoading ] = React.useState(true);\r\n\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n\r\n\r\n  React.useEffect(() => {\r\n    notifications();\r\n  }, [notificationObject]);\r\n\r\n  // to set notifications\r\n  const notifications = async () => {\r\n    setNotification(notificationObject)\r\n    setLoading(false);\r\n  }\r\n\r\n  // render\r\n  return (\r\n    <Container key={notificationObject.id}>\r\n      <ChannelDetailsWrapper>\r\n          <ChannelTitle>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"50%\" height={24} />\r\n            }\r\n            {!loading &&\r\n              <ChannelTitleLink>{notification.notificationTitle}</ChannelTitleLink>\r\n            }\r\n          </ChannelTitle>\r\n          <ChannelDesc>\r\n            {loading &&\r\n              <>\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n                </SkeletonWrapper>\r\n\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n                </SkeletonWrapper>\r\n\r\n                <SkeletonWrapper atH={5} atW={100}>\r\n                  <Skeleton color=\"#eee\" width=\"40%\" height={5} />\r\n                </SkeletonWrapper>\r\n              </>\r\n            }\r\n            {!loading &&\r\n\r\n              <ChannelDescLabel>{notification.notificationBody}</ChannelDescLabel>\r\n            }\r\n          </ChannelDesc>\r\n        </ChannelDetailsWrapper>\r\n\r\n        <ChannelMeta>\r\n          {!loading &&\r\n            <>\r\n              <Pool>\r\n                <br></br>\r\n                <PoolShare>\r\n                { notification.indexTimeStamp? moment\r\n\t\t\t\t\t\t\t\t\t\t\t\t.utc(parseInt(notification.indexTimeStamp) * 1000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.local()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.format(\"DD MMM YYYY | hh:mm A\"): \"N/A\"}\r\n                </PoolShare>\r\n              </Pool>\r\n            </>\r\n          }\r\n        </ChannelMeta>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ChannelDetailsWrapper = styled.div`\r\n  align-self: center;\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 30px 20px;\r\n\r\n  justify-content: space-between;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${props => props.atW + '%' || '100%'};\r\n  height: ${props => props.atH}px;\r\n  border-radius: ${props => props.borderRadius || 10}px;\r\n  margin-bottom: ${props => props.marginBottom || 5}px;\r\n  margin-right: ${props => props.marginRight || 0}px;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 10px;\r\n  margin-left: 4px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 550;\r\n  color: #e20880;\r\n  font-size: 18px;\r\n`\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n  margin: 0px 5px;\r\n`\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  // padding: 2px 8px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n  align-self: flex-end;\r\n`\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default ViewNotificationItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { BigNumber, bigNumberify, formatEther } from 'ethers/utils'\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nfunction NotificationToast({ notification, clearToast }) {\r\n\r\n  // toast customize\r\n  const LoaderToast = ({color }) => (\r\n      <Toaster>\r\n      <div>{notification.notificationTitle}</div>\r\n      <div>{notification.notificationBody}</div>\r\n      </Toaster>\r\n  )\r\n \r\n  // Render\r\n  return (\r\n    <>{\r\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nconst Toaster = styled.div`\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n\r\n// Export Default\r\nexport default NotificationToast;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { BigNumber, bigNumberify, formatEther } from 'ethers/utils'\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\n\r\nimport ViewNotificationItem from \"components/ViewNotificationItem\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport hex2ascii from 'hex2ascii'\r\n\r\nconst NOTIFICATIONS_URL = \"https://backend-staging.epns.io/apis/feeds/get_feeds\";\r\n// Create Header\r\nfunction Feedbox({ epnsReadProvider }) {\r\n\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [notifications, setNotifications] = React.useState([]);\r\n  // since we dont have how many notifications there are in total\r\n  // we use this field to note when there are no more notifications to load\r\n  const [finishedFetching, setFinishedFetching] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [toast, showToast] = React.useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  //define query\r\n  const notificationsPerPage = 6;\r\n  \r\n  const loadNotifications = (currentPage) => {\r\n    const body = {\r\n      \"user\": account,\r\n      \"page\": currentPage,\r\n      \"pageSize\": notificationsPerPage,\r\n      \"op\":\"read\"\r\n    }\r\n    axios.post(NOTIFICATIONS_URL, body)\r\n    .then(({data}) => {\r\n      const {count, results} = data;\r\n      const parsedNotification = results.map(parseAPINotifications);\r\n      if(count === 0){\r\n        setFinishedFetching(true);\r\n      }\r\n      setNotifications((oldNotifications) => ([\r\n        ...oldNotifications,\r\n        ...parsedNotification,\r\n      ]))\r\n    })\r\n    .catch(err => {\r\n        console.log(`\r\n        ============== There was an error [loadNotifications] ============\r\n        `, err.message);\r\n    }).finally(() => {\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  const clearToast = () => showToast(null);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsReadProvider) {\r\n      loadNotifications(currentPage);\r\n      return subscribe()\r\n    }\r\n  }, [epnsReadProvider]);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast()\r\n    }\r\n  }, [toast]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async() => {\r\n    await setCurrentPage((prevPage) => {\r\n      const newPage = prevPage + 1;\r\n      loadNotifications(newPage);\r\n      return newPage;\r\n    });\r\n  };\r\n  \r\n  const subscribe = () => {\r\n    if (account) {\r\n      return newNotification(onReceive);\r\n    }\r\n  };\r\n\r\n  //handle new notification\r\n  const onReceive = async notification => {\r\n    showToast(notification);\r\n    setNotifications(existingNotifications => [notification, ...existingNotifications]);\r\n    // setNotifications(notifications => [notification].concat(notifications));\r\n  };\r\n\r\n  //subscribe to SendNotification\r\n  const newNotification = (fn) => {\r\n    const event = 'SendNotification'\r\n\r\n    //callback function for listener\r\n    const cb = async (\r\n      eventChannelAddress: string,\r\n      eventUserAddress: string,\r\n      identityHex: string\r\n    ) => {\r\n      const userAddress = account\r\n      const identity = hex2ascii(identityHex)\r\n      const notificationId = identity\r\n        .concat('+')\r\n        .concat(eventChannelAddress)\r\n        .concat('+')\r\n        .concat(eventUserAddress)\r\n        .toLocaleLowerCase()\r\n      const ipfsId = identity.split('+')[1];\r\n\r\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(eventChannelAddress);\r\n\r\n      // Form Gateway URL\r\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\r\n      fetch(url)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n      const ipfsNotification = {...result}\r\n      const notification = {\r\n        id: notificationId,\r\n        userAddress: eventUserAddress,\r\n        channelAddress: eventChannelAddress,\r\n        indexTimeStamp: Date.now() / 1000, // todo\r\n        notificationTitle: ipfsNotification.notification.title || channelJson.name,\r\n        notificationBody: ipfsNotification.notification.body,\r\n        // ...ipfsNotification.data,\r\n      }\r\n      if (ipfsNotification.data.type === '1') {\r\n        const isSubscribed = \r\n        epnsReadProvider.memberExists(\r\n          userAddress,\r\n          eventChannelAddress\r\n        )\r\n        .then(isSubscribed => {\r\n          if (isSubscribed) {\r\n            fn(notification)\r\n          }\r\n        })\r\n      } else if (userAddress === eventUserAddress) {\r\n        fn(notification)\r\n      }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getting new notification data from ipfs --> %o\", err);\r\n      });\r\n    }\r\n    epnsReadProvider.on(event, cb)\r\n    return epnsReadProvider.off.bind(epnsReadProvider, event, cb)\r\n  }\r\n  // transform the data gotten from the API into a workable format\r\n  const parseAPINotifications = (oneAPINotification) => {\r\n    // extract required data\r\n    let {\r\n      payload_id: payloadId,\r\n      payload: {\r\n        data: {\r\n          amsg\r\n        },\r\n        notification: {\r\n          body,\r\n          title\r\n        }\r\n      }\r\n    } = oneAPINotification;\r\n\r\n    let timeStamp = \"\";\r\n    // parse the text for the timestamp\r\n    const matches = amsg.match(/\\[timestamp:(.*?)\\]/);\r\n    if (matches) {\r\n      timeStamp = matches[1];\r\n      amsg = amsg.replace(/ *\\[timestamp:[^)]*\\] */g, \"\");\r\n    }\r\n    // save payload into object\r\n    const parsedNotification = {\r\n      id: payloadId,\r\n      notificationBody: body,\r\n      notificationTitle: title,\r\n      indexTimeStamp: parseInt(timeStamp)\r\n    };\r\n    return parsedNotification\r\n  };\r\n  const showWayPoint = (index) => {\r\n    return (Number(index) === notifications.length - 1) && !finishedFetching;\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n      <Container>\r\n        {notifications &&\r\n          <Items id=\"scrollstyle-secondary\">\r\n            {notifications.map((oneNotification, index) => {  \r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = { () => handlePagination()}/>)}\r\n                <ViewNotificationItem\r\n                  key={oneNotification.id}\r\n                  notificationObject={oneNotification}\r\n                />\r\n                </>\r\n              )\r\n              })\r\n            }\r\n          </Items>\r\n        }\r\n        {(loading) && \r\n          <Loader\r\n          type=\"Oval\"\r\n          color=\"#35c5f3\"\r\n          height={40}\r\n          width={40}\r\n        />\r\n        }\r\n      \r\n        {\r\n        toast && \r\n        <NotificationToast\r\n          notification={toast}\r\n          clearToast = {clearToast}\r\n          />\r\n        }\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n// css styles\r\nconst Container = styled.div`\r\ndisplay: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\n// Export Default\r\nexport default Feedbox;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\n// Create Header\r\nfunction DisplayNotice({ title, theme }) {\r\n  React.useEffect(() => {\r\n\r\n  }, [title, theme]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <Container>\r\n      <AnimateOnChange\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        durationOut={200}\r\n      >\r\n        <Notice theme={theme}>{title}</Notice>\r\n      </AnimateOnChange>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n\r\n  ${props => props.theme === 'primary' && css`\r\n    background: #e20880;\r\n  `};\r\n\r\n  ${props => props.theme === 'secondary' && css`\r\n    background: #35c5f3;\r\n  `};\r\n\r\n  ${props => props.theme === 'third' && css`\r\n    background: #674c9f;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default DisplayNotice;\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { bigNumber } from 'ethers/utils'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n// STATIC SINGLETON\r\nexport const UserEvents = {\r\n    SUBSCRIBED: \"Subscribed\",\r\n    UNSUBSCRIBED: \"Unsubscribed\",\r\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\r\n    CREATED_CHANNEL: \"CreatedChannel\",\r\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\r\n}\r\n\r\nexport default class UsersDataStore {\r\n    static instance = UsersDataStore.instance || new UsersDataStore();\r\n\r\n    state = {\r\n      usersCount: -1,\r\n      userMeta: null,\r\n      ownerMeta: null,\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetUsersListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.initUsersListenersAsync();\r\n\r\n      // next get store user count & user meta\r\n      this.getOwnerMetaAsync();\r\n      this.getUsersCountAsync();\r\n      this.getUserMetaAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetUsersListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"PublicKeyRegistered\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\r\n      }\r\n\r\n      // reset user meta as well\r\n      this.state.userMeta = null;\r\n    }\r\n\r\n    // init LISTENERS\r\n    initUsersListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForSubscribedAsync();\r\n      await this.listenForUnsubscribedAsync();\r\n\r\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\r\n        await this.listenForPublicKeyBroadcastAsync();\r\n      }\r\n    }\r\n\r\n    // 1. Listen for Subscribe Async\r\n    listenForSubscribedAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Subscribe(null, this.state.account);\r\n\r\n      if (this.state.userMeta) {\r\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\r\n      }\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 2. Listen for Unsubscribe Async\r\n    listenForUnsubscribedAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.Unsubscribe(null, this.state.account);\r\n\r\n      if (this.state.userMeta) {\r\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\r\n      }\r\n\r\n      contract.on(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 3. Listen For Public Key Broadcast\r\n    listenForPublicKeyBroadcastAsync = async () => {\r\n      const contract = this.state.epnsReadProvider;\r\n      let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\r\n\r\n      if (this.state.userMeta) {\r\n        this.state.userMeta.publicKeyRegistered = true;\r\n      }\r\n\r\n      contract.once(filter, async (channel, user) => {\r\n        // then perform callbacks\r\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n            if (callback) { callback(channel, user); }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // GET OWNER META\r\n    getOwnerMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.ownerMeta) {\r\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\r\n          resolve(this.state.ownerMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.ownerMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\r\n              resolve(this.state.ownerMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    // USERS COUNT\r\n    getUsersCountAsync = async () => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.usersCount = response;\r\n              console.log(\"getUsersCountAsync() --> %o\", response);\r\n              resolve(this.state.usersCount)\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n        }\r\n        else {\r\n          resolve(this.state.usersCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementUsersCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getUsersCountAsync()\r\n          .then(response => {\r\n            this.state.usersCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\r\n            resolve(this.state.usersCount);\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n    }\r\n\r\n    // GET USER META\r\n    getUserMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.userMeta) {\r\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\r\n          resolve(this.state.userMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.userMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\r\n              resolve(this.state.userMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\r\n              reject(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { IoMdPeople } from 'react-icons/io';\r\nimport { GiTwoCoins } from 'react-icons/gi';\r\n \r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from \"ethers\";\r\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\r\n\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\n\r\n// Create Header\r\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsWriteProvide }) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [ channelJson, setChannelJson ] = React.useState({});\r\n  const [ subscribed, setSubscribed ] = React.useState(false);\r\n  const [ loading, setLoading ] = React.useState(true);\r\n\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n\r\n\r\n  React.useEffect(() => {\r\n    fetchChannelJson();\r\n    registerCallbacks();\r\n  }, [account, channelObject]);\r\n\r\n  // to fetch channels\r\n  const fetchChannelJson = async () => {\r\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\r\n    const subs = await EPNSCoreHelper.getSubscribedStatus(account, channelObject.addr, epnsReadProvider);\r\n    setSubscribed(subs);\r\n\r\n    setChannelJson(channelJson);\r\n    setLoading(false);\r\n  }\r\n\r\n  // to register callbacks\r\n  const registerCallbacks = () => {\r\n    UsersDataStore.instance.addCallbacks(\r\n      UserEvents.SUBSCRIBED,\r\n      \"FromViewChannelItem\",\r\n      () => {\r\n        setSubscribed(true);\r\n        channelObject.memberCount = channelObject.memberCount.add(1);\r\n      }\r\n    );\r\n\r\n    UsersDataStore.instance.addCallbacks(\r\n      UserEvents.UNSUBSCRIBED,\r\n      \"FromViewChannelItem\",\r\n      () => {\r\n        setSubscribed(false);\r\n        channelObject.memberCount = channelObject.memberCount.sub(1);\r\n      }\r\n    );\r\n\r\n    ChannelsDataStore.instance.addCallbacks(\r\n      ChannelEvents.SUBSCRIBER_ANY_CHANNEL,\r\n      \"FromViewChannelItem\",\r\n      (channel, user) => {\r\n        if (channel === channelObject.addr) {\r\n          channelObject.memberCount = channelObject.memberCount.add(1);\r\n        }\r\n      }\r\n    );\r\n\r\n    ChannelsDataStore.instance.addCallbacks(\r\n      ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL,\r\n      \"FromViewChannelItem\",\r\n      (channel, user) => {\r\n        if (channel === channelObject.addr) {\r\n          channelObject.memberCount = channelObject.memberCount.sub(1);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // to subscribe\r\n  const subscribe = async () => {\r\n    // Check if public key is broadcasted or not\r\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\r\n    if (!userMeta.publicKeyRegistered) {\r\n      const msg = \"Sign to enable Secrets! (Encrypted Messages)\\n Read more: https://epns.io/secret-messages\";\r\n\r\n      // Sign a message and extract public key\r\n      library\r\n        .getSigner(account)\r\n        .signMessage(msg)\r\n        .then(async signature => {\r\n          const publicKey = recoverPublicKey(arrayify(hashMessage(msg)), signature);\r\n          const formattedPubKey = publicKey.slice(0, 2) + publicKey.slice(4);\r\n\r\n          subscribeAction(formattedPubKey);\r\n        })\r\n        .catch(error => {\r\n          // Show toast as well\r\n          toast.dark('Skipped for now... Encrypted messages will require this!', {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n\r\n          subscribeAction(false);\r\n        })\r\n    }\r\n    else {\r\n      subscribeAction(false);\r\n    }\r\n  }\r\n\r\n  const subscribeAction = async (withPublicKey) => {\r\n    setTxInProgress(true);\r\n\r\n    let sendWithTxPromise;\r\n\r\n    if (withPublicKey) {\r\n      sendWithTxPromise = epnsWriteProvide.subscribeWithPublicKey(channelObject.addr, withPublicKey);\r\n    }\r\n    else {\r\n      sendWithTxPromise = epnsWriteProvide.subscribe(channelObject.addr);\r\n    }\r\n\r\n    sendWithTxPromise\r\n      .then(async tx => {\r\n\r\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n        catch(e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.dark('Transaction Cancelled!', {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      })\r\n  }\r\n\r\n  const unsubscribeAction = async () => {\r\n    setTxInProgress(true);\r\n\r\n    let sendWithTxPromise = epnsWriteProvide.unsubscribe(channelObject.addr);\r\n\r\n    sendWithTxPromise\r\n      .then(async tx => {\r\n\r\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n        catch(e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.dark('Transaction Cancelled!', {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      })\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Container key={channelObject.addr}>\r\n      <ChannelLogo>\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n          {loading &&\r\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n          }\r\n          {!loading &&\r\n            <ChannelLogoImg src={`${channelJson.icon}`} />\r\n          }\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n      </ChannelLogo>\r\n\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          {loading &&\r\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\r\n          }\r\n          {!loading &&\r\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\r\n          }\r\n        </ChannelTitle>\r\n\r\n        <ChannelDesc>\r\n          {loading &&\r\n            <>\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          }\r\n          {!loading &&\r\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\r\n          }\r\n        </ChannelDesc>\r\n\r\n        <ChannelMeta>\r\n          {loading &&\r\n            <>\r\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\r\n                <Skeleton />\r\n              </SkeletonWrapper>\r\n            </>\r\n          }\r\n          {!loading &&\r\n            <>\r\n              <Subscribers>\r\n                <IoMdPeople size={20} color=\"#ccc\"/>\r\n                <SubscribersCount>\r\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.memberCount)}\r\n                </SubscribersCount>\r\n              </Subscribers>\r\n              <Pool>\r\n                <GiTwoCoins size={20} color=\"#ccc\"/>\r\n                <PoolShare>\r\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\r\n                </PoolShare>\r\n              </Pool>\r\n            </>\r\n          }\r\n        </ChannelMeta>\r\n      </ChannelInfo>\r\n      {!!account && !!library &&\r\n        <>\r\n          <LineBreak />\r\n          <ChannelActions>\r\n            {loading &&\r\n              <SkeletonButton>\r\n                <Skeleton />\r\n              </SkeletonButton>\r\n            }\r\n            {!loading && !subscribed &&\r\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\r\n                {txInProgress &&\r\n                  <ActionLoader>\r\n                    <Loader\r\n                     type=\"Oval\"\r\n                     color=\"#FFF\"\r\n                     height={16}\r\n                     width={16}\r\n                    />\r\n                  </ActionLoader>\r\n                }\r\n                <ActionTitle hideit={txInProgress}>Subscribe</ActionTitle>\r\n              </SubscribeButton>\r\n            }\r\n            {!loading && subscribed &&\r\n              <>\r\n              {isOwner &&\r\n                <OwnerButton disabled>Owner</OwnerButton>\r\n              }\r\n              {!isOwner &&\r\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\r\n                  {txInProgress &&\r\n                    <ActionLoader>\r\n                      <Loader\r\n                       type=\"Oval\"\r\n                       color=\"#FFF\"\r\n                       height={16}\r\n                       width={16}\r\n                      />\r\n                    </ActionLoader>\r\n                  }\r\n                  <ActionTitle hideit={txInProgress}>Unsubscribe</ActionTitle>\r\n                </UnsubscribeButton>\r\n              }\r\n              </>\r\n            }\r\n          </ChannelActions>\r\n        </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${props => props.atW + '%' || '100%'};\r\n  height: ${props => props.atH}px;\r\n  border-radius: ${props => props.borderRadius || 10}px;\r\n  margin-bottom: ${props => props.marginBottom || 5}px;\r\n  margin-right: ${props => props.marginRight || 0}px;\r\n`\r\n\r\nconst ChannelLogo = styled.div`\r\n  max-width: 100px;\r\n  min-width: 32px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewChannelItem;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\r\n\r\nimport { FaGasPump } from 'react-icons/fa';\r\n\r\n// Faucet URLs\r\nfunction Faucets() {\r\n  // render\r\n  return (\r\n    <Section margin=\"5px 0px 0px 0px\">\r\n      <Content>\r\n        <ItemH\r\n          self=\"flex-end\"\r\n          bg=\"#fff\"\r\n          radius=\"8px\"\r\n          padding=\"30px 10px 10px 10px\"\r\n          border=\"1px solid #ededed\"\r\n          overflow=\"hidden\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span\r\n            pos=\"absolute\"\r\n            top=\"10px\"\r\n            right=\"0px\"\r\n            padding=\"5px 10px\"\r\n            bg=\"#e20880\"\r\n            color=\"#fff\"\r\n            size=\"12px\"\r\n            weight=\"600\"\r\n          >\r\n            Get Free Ropsten Ether\r\n          </Span>\r\n\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://faucet.metamask.io/\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Metamask Faucet\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://faucet.ropsten.be/\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Faucet Ropsten\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n\r\n        </ItemH>\r\n      </Content>\r\n    </Section>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default Faucets;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewChannelItem from \"components/ViewChannelItem\";\r\nimport Faucets from \"components/Faucets\";\r\n\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\n\r\n// Create Header\r\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide }) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [channels, setChannels] = React.useState([]);\r\n  const [totalChannelLength, setChannelLength] = React.useState(0);\r\n  const [paginatedChannels, setPaginatedChannels] = React.useState([]);\r\n  const [user, setUser] = React.useState(null);\r\n  const [owner, setOwner] = React.useState(null);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const channelsPerPage = 3;\r\n  const channelsVisited = page * channelsPerPage;\r\n\r\n  React.useEffect(() => {\r\n    fetchInitialsChannelMeta();\r\n  }, [account]);\r\n\r\n  //update paginatedChannels array when scrolled till the end\r\n  React.useEffect(() => {\r\n    if(channels){\r\n      setPaginatedChannels(prev => [...prev, ...channels.slice(channelsVisited, channelsVisited + channelsPerPage)])\r\n    }\r\n  }, [channels, page]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n  // to update a page\r\n  const updateCurrentPage = () => {\r\n    // fetch more channel information\r\n    setPage(prev => {\r\n      const newPage = prev + 1;\r\n      loadMoreChannelMeta(newPage);\r\n      return newPage;\r\n    });\r\n  }\r\n\r\n  // to fetch channels\r\n  const fetchInitialsChannelMeta = async () => {\r\n    // get and set user and owner first\r\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\r\n    setUser(userMeta);\r\n\r\n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\r\n    setOwner(ownerAddr);\r\n\r\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\r\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(channelsVisited, channelsPerPage);\r\n    const totalChannelsLength = await ChannelsDataStore.instance.getChannelsCountAsync();\r\n    setChannelLength(totalChannelsLength)\r\n    // sort this again, this time with subscriber count\r\n    // channelsMeta.sort((a, b) => {\r\n    //   if (a.memberCount.toNumber() < b.memberCount.toNumber()) return -1;\r\n    //   if (a.memberCount.toNumber() > b.memberCount.toNumber()) return 1;\r\n    //   return 0;\r\n    // });\r\n\r\n    // Filter out channel\r\n\r\n    setChannels(channelsMeta);\r\n    setLoading(false);\r\n  }\r\n\r\n  // load more channels when we get to the bottom of the page\r\n  const loadMoreChannelMeta = async (newPageNumber) => {\r\n    const startingPoint = newPageNumber * channelsPerPage;\r\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(startingPoint, channelsPerPage);\r\n    setChannels(oldChannels => ([\r\n      ...oldChannels,\r\n      ...moreChannels\r\n    ]));\r\n  }\r\n\r\n  // conditionally display the waymore bar which loads more information\r\n  const showWayPoint = (index) => {\r\n    return ( Number(index) === paginatedChannels.length -1 )\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && channels.length == 0 &&\r\n        <ContainerInfo>\r\n          <DisplayNotice\r\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\r\n            theme=\"primary\"\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && channels.length != 0 &&\r\n        <Items id=\"scrollstyle-secondary\">\r\n          <Faucets/>\r\n\r\n          {Object.keys(paginatedChannels).map(index => {\r\n            const isOwner = (\r\n              paginatedChannels[index].addr === account ||\r\n              (account === owner && paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\")\r\n            );\r\n\r\n            if (paginatedChannels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                <ViewChannelItem\r\n                  key={paginatedChannels[index].addr}\r\n                  channelObject={paginatedChannels[index]}\r\n                  isOwner={isOwner}\r\n                  epnsReadProvider={epnsReadProvider}\r\n                  epnsWriteProvide={epnsWriteProvide}\r\n                />\r\n                </>\r\n              );\r\n            }\r\n            else if (paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\r\n              return (\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                <ViewChannelItem\r\n                  key={paginatedChannels[index].addr}\r\n                  channelObject={paginatedChannels[index]}\r\n                  isOwner={isOwner}\r\n                  epnsReadProvider={epnsReadProvider}\r\n                  epnsWriteProvide={epnsWriteProvide}\r\n                />\r\n                </>\r\n              );\r\n            }\r\n            else {\r\n              return(\r\n                <>\r\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\r\n                </>\r\n              )\r\n            }\r\n          })}\r\n        </Items>\r\n      }\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n// Export Default\r\nexport default ViewChannels;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\n\r\n// Other Information URLs\r\nfunction ViewInfoItem() {\r\n  // render\r\n  return (\r\n    <>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (iOS)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For iOS Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (Android)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For Android Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\r\n            Click here for our How to Guides\r\n          </ChannelTitleLink>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: flex;\r\n  // flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewInfoItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction Info() {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && \r\n      <>\r\n        <InfoBox>\r\n          <ViewInfoItem/>\r\n        </InfoBox>\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\nconst InfoBox = styled.div`\r\n  padding: 10px 20px;\r\n  display: block;\r\n  align-self: stretch;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { BsFillImageFill } from 'react-icons/bs';\r\nimport { FiLink } from 'react-icons/fi';\r\n\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport CryptoHelper from 'helpers/CryptoHelper';\r\nconst ethers = require('ethers');\r\n\r\nconst ipfs = require('ipfs-api')();\r\n\r\n// Set Notification Form Type | 0 is reserved for protocol storage\r\nconst NFTypes = [\r\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\r\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\r\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\r\n];\r\n\r\n// Create Header\r\nfunction SendNotifications() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [nfProcessing, setNFProcessing] = React.useState(0);\r\n\r\n  const [nfRecipient, setNFRecipient] = React.useState('');\r\n  const [nfType, setNFType] = React.useState('');\r\n\r\n  const [nfSub, setNFSub] = React.useState('');\r\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\r\n\r\n  const [nfMsg, setNFMsg] = React.useState('');\r\n\r\n  const [nfCTA, setNFCTA] = React.useState('');\r\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\r\n\r\n  const [nfMedia, setNFMedia] = React.useState('');\r\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\r\n\r\n  const [nfInfo, setNFInfo] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    if (nfType === \"1\") {\r\n      // This is broadcast, nfRecipient will be the same\r\n      setNFRecipient(account);\r\n    }\r\n    else {\r\n      setNFRecipient('');\r\n    }\r\n  }, [nfType]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    // Check everything in order\r\n    e.preventDefault();\r\n\r\n    // Set to processing\r\n    setNFProcessing(1);\r\n\r\n    // Toastify\r\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    // Form signer and contract connection\r\n    var signer = library.getSigner(account);\r\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\r\n\r\n    // For payload basic\r\n    let nsub = nfSub;\r\n    let nmsg = nfMsg;\r\n    let secretEncrypted;\r\n\r\n    let asub = nfSub;\r\n    let amsg = nfMsg;\r\n    let acta = nfCTA;\r\n    let aimg = nfMedia;\r\n\r\n    // Decide type and storage\r\n    switch (nfType) {\r\n      // Broadcast Notification\r\n      case \"1\":\r\n        break;\r\n\r\n      // Targetted Notification\r\n      case \"3\":\r\n        break;\r\n\r\n      // Secret Notification\r\n      case \"2\":\r\n        // Create secret\r\n        let secret = CryptoHelper.makeid(14);\r\n\r\n        // Encrypt payload and change sub and nfMsg in notification\r\n        nsub = \"You have a secret message!\";\r\n        nmsg = \"Open the app to see your secret message!\";\r\n\r\n        // get public key from EPNSCoreHelper\r\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\r\n        if (k == null) {\r\n          // No public key, can't encrypt\r\n          setNFInfo(\"Public Key Registration is required for encryption!\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n            render: \"Unable to encrypt for this user, no public key registered\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        let publickey = k.toString().substring(2);\r\n        //console.log(\"This is public Key: \" + publickey);\r\n\r\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\r\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Handle Storage\r\n    let storagePointer = '';\r\n\r\n    // IPFS PAYLOAD --> 1, 2, 3\r\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\") {\r\n      // Checks for optional fields\r\n      if (nfSubEnabled && isEmpty(nfSub)) {\r\n        setNFInfo(\"Enter Subject or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (nfMediaEnabled && isEmpty(nfMediaEnabled)) {\r\n        setNFInfo(\"Enter Media URL or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\r\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (isEmpty(nfMsg)) {\r\n        setNFInfo(\"Message cannot be empty\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      const input = JSON.stringify(\r\n        {\r\n          \"notification\": {\r\n            \"title\": nsub,\r\n            \"body\": nmsg\r\n          },\r\n          \"data\": {\r\n            \"type\": nfType,\r\n            \"secret\": secretEncrypted,\r\n            \"asub\": asub,\r\n            \"amsg\": amsg,\r\n            \"acta\": acta,\r\n            \"aimg\": aimg\r\n          }\r\n        }\r\n      );\r\n\r\n      console.log(\"Uploding to IPFS...\");\r\n      toast.update(notificationToast, {\r\n        render: \"Uploding to IPFS...\",\r\n      });\r\n\r\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n      try {\r\n        storagePointer = await ipfs.add(input);\r\n      }\r\n      catch (e) {\r\n        setNFProcessing(2);\r\n        setNFInfo(\"IPFS Upload Error\");\r\n      }\r\n\r\n      console.log (\"IPFS cid: %o\", storagePointer);\r\n      toast.update(notificationToast, {\r\n        render: \"IPFS HASH: \" + storagePointer,\r\n      });\r\n\r\n    }\r\n\r\n    // Prepare Identity and send notification\r\n    const identity = nfType + \"+\" + storagePointer;\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise = contract.sendNotification(nfRecipient, identityBytes);\r\n\r\n    console.log (\"Sending Transaction... \");\r\n    toast.update(notificationToast, {\r\n      render: \"Sending Transaction...\",\r\n    });\r\n\r\n    anotherSendTxPromise\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log (\"Transaction Sent!\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transaction Sent\",\r\n          type: toast.TYPE.INFO,\r\n          autoClose: 5000\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log (\"Transaction Mined!\");\r\n\r\n        setNFProcessing(2);\r\n        setNFType('');\r\n        setNFInfo(\"Notification Sent\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transaction Mined / Notification Sent\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        setNFInfo(\"Transaction Failed, please try again\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Transacion Failed: \" + err,\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n      });\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\r\n            </H2>\r\n            <H3>EPNS supports three types of notifications (for now!). <b>Groups</b>, <b>Secrets</b> and <b>Targetted</b>.</H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content>\r\n          <Item align=\"stretch\">\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleSendMessage}\r\n            >\r\n              <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\r\n                  <DropdownStyledParent>\r\n                    <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\r\n                  </DropdownStyledParent>\r\n                </Item>\r\n                <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\r\n\r\n                {nfType &&\r\n                  <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\r\n                    </ItemH>\r\n\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\r\n                    </ItemH>\r\n\r\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\r\n                      <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\r\n                    </ItemH>\r\n                  </ItemH>\r\n                }\r\n              </Item>\r\n\r\n              {!nfType &&\r\n                <Item padding=\"0px 20px 30px 20px\" />\r\n              }\r\n\r\n              {(nfType === \"2\" || nfType === \"3\") &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Enter recipient wallet address\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #674c9f\"\r\n                    bg=\"#fff\"\r\n                    value={nfRecipient}\r\n                    onChange={(e) => {setNFRecipient(e.target.value)}}\r\n                  />\r\n                  {nfRecipient.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Recipient Wallet\r\n                      </Span>\r\n                    }\r\n                </Item>\r\n              }\r\n\r\n              {nfType && nfSubEnabled &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Subject of Notification\"\r\n                    padding=\"12px\"\r\n                    borderBottom=\"1px solid #000\"\r\n                    weight=\"400\"\r\n                    size=\"1.2em\"\r\n                    bg=\"#fff\"\r\n                    value={nfSub}\r\n                    onChange={(e) => {setNFSub(e.target.value)}}\r\n                  />\r\n                  {nfSub.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Subject\r\n                      </Span>\r\n                    }\r\n                </Item>\r\n              }\r\n\r\n              {nfType &&\r\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <TextField\r\n                    required\r\n                    placeholder=\"Notification Message\"\r\n                    rows=\"6\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    weight=\"400\"\r\n                    border=\"1px solid #000\"\r\n                    bg=\"#fff\"\r\n                    value={nfMsg}\r\n                    onChange={(e) => {setNFMsg(e.target.value)}}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                </Item>\r\n              }\r\n\r\n              {nfType && nfMediaEnabled &&\r\n                <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\r\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                    <BsFillImageFill size={24} color=\"#000\"/>\r\n                  </Item>\r\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Media URL for Notification\"\r\n                      padding=\"12px\"\r\n                      border=\"1px solid #000\"\r\n                      radius=\"4px\"\r\n                      weight=\"400\"\r\n                      bg=\"#f1f1f1\"\r\n                      value={nfMedia}\r\n                      onChange={(e) => {setNFMedia(e.target.value)}}\r\n                    />\r\n                    {nfMedia.trim().length == 0 &&\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Media URL\r\n                        </Span>\r\n                      }\r\n                    </Item>\r\n                </ItemH>\r\n              }\r\n\r\n              {nfType && nfCTAEnabled &&\r\n                <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\r\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                    <FiLink size={24} color=\"#000\"/>\r\n                  </Item>\r\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Call to Action Link\"\r\n                      padding=\"12px\"\r\n                      border=\"1px solid #000\"\r\n                      radius=\"4px\"\r\n                      weight=\"400\"\r\n                      bg=\"#f1f1f1\"\r\n                      value={nfCTA}\r\n                      onChange={(e) => {setNFCTA(e.target.value)}}\r\n                    />\r\n                    {nfCTA.trim().length == 0 &&\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Call to Action URL\r\n                        </Span>\r\n                      }\r\n                    </Item>\r\n                </ItemH>\r\n              }\r\n\r\n              {nfInfo && nfProcessing != 1 &&\r\n                <Item\r\n                  color=\"#fff\"\r\n                  bg=\"#e1087f\"\r\n                  padding=\"10px 15px\"\r\n                  margin = \"15px 0px\"\r\n                >\r\n                  <Span\r\n                    color=\"#fff\"\r\n                    textTransform=\"uppercase\"\r\n                    spacing=\"0.1em\"\r\n                    weight=\"400\"\r\n                    size=\"1em\"\r\n                  >\r\n                    {nfInfo}\r\n                  </Span>\r\n                </Item>\r\n              }\r\n\r\n              {nfType &&\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  <Button\r\n                    bg='#e20880'\r\n                    color='#fff'\r\n                    flex=\"1\"\r\n                    radius=\"0px\"\r\n                    padding=\"20px 10px\"\r\n                    disabled={nfProcessing == 1 ? true : false}\r\n                  >\r\n                    {nfProcessing == 1 &&\r\n                      <Loader\r\n                         type=\"Oval\"\r\n                         color=\"#fff\"\r\n                         height={24}\r\n                         width={24}\r\n                        />\r\n                    }\r\n                    {nfProcessing != 1 &&\r\n                      <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\r\n                    }\r\n                  </Button>\r\n                </Item>\r\n              }\r\n            </FormSubmision>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst DropdownStyledParent = styled.div `\r\n  .is-open {\r\n    margin-bottom: 130px;\r\n  }\r\n`\r\n\r\nconst DropdownStyled = styled(Dropdown)`\r\n\r\n  .Dropdown-control {\r\n    background-color: #000;\r\n    color: #fff;\r\n    padding: 12px 52px 12px 10px;\r\n    border: 1px solid #000;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-placeholder {\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  .Dropdown-arrow {\r\n    top: 18px;\r\n    bottom: 0;\r\n    border-color: #fff transparent transparent;\r\n  }\r\n\r\n  .Dropdown-menu {\r\n    border: 1px solid #000;\r\n    box-shadow: none;\r\n    background-color: #000;\r\n    border-radius: 0px;\r\n    margin-top: -3px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-option {\r\n    background-color: rgb(35 35 35);\r\n    color: #ffffff99;\r\n\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.7em;\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .Dropdown-option:hover {\r\n    background-color: #000000;\r\n    color: #fff;\r\n  }\r\n`\r\n\r\n\r\n// Export Default\r\nexport default SendNotifications;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport SendNotifications from 'components/SendNotifications';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelOwnerDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <SendNotifications />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelOwnerDashboard;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport CreateChannel from 'components/CreateChannel';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelCreationDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <CreateChannel />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelCreationDashboard;\r\n","import React from \"react\";\r\nimport ReactGA from 'react-ga';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from \"ethers\";\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\n\r\nimport Feedbox from 'segments/Feedbox';\r\nimport ViewChannels from 'segments/ViewChannels';\r\nimport Info from \"segments/Info\";\r\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\r\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\r\n\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\n\r\n\r\n// Create Header\r\nfunction Home({ setBadgeCount, bellPressed }) {\r\n  ReactGA.pageview('/home');\r\n\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\r\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const contractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, library);\r\n    setEpnsReadProvider(contractInstance);\r\n\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\r\n      setEpnsWriteProvider(signerInstance);\r\n    }\r\n\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(1);\r\n    setChannelJson([]);\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(account, epnsReadProvider);\r\n      ChannelsDataStore.instance.init(account, epnsReadProvider);\r\n\r\n      checkUserForChannelRights();\r\n    }\r\n\r\n  }, [epnsReadProvider]);\r\n\r\n\r\n  // Revert to Feedbox on bell pressed\r\n  React.useEffect(() => {\r\n    setControlAt(0);\r\n  }, [bellPressed]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n\r\n  //Start Listening...\r\n  const listenerForChannelRights = async () => {\r\n    ChannelsDataStore.instance.addCallbacks(\r\n      ChannelEvents.ADD_CHANNEL_SELF,\r\n      \"FromCreateChannel\",\r\n      () => {\r\n        checkUserForChannelRights();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelRights = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, epnsReadProvider)\r\n      .then(response => {\r\n        console.log(response);\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      });\r\n\r\n    // Start listening\r\n    listenerForChannelRights();\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Controls>\r\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(0)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\r\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\r\n          onClick={() => {\r\n            userClickedAt(1)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\r\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\r\n          disabled={!adminStatusLoaded}\r\n          onClick={() => {\r\n            if (adminStatusLoaded) {\r\n              userClickedAt(2)\r\n            }\r\n          }}\r\n        >\r\n          {!adminStatusLoaded &&\r\n            <Loader\r\n               type=\"Oval\"\r\n               color=\"#674c9f\"\r\n               height={32}\r\n               width={32}\r\n            />\r\n          }\r\n          {channelAdmin && adminStatusLoaded &&\r\n            <ControlChannelContainer>\r\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\r\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\r\n            </ControlChannelContainer>\r\n          }\r\n          {!channelAdmin && adminStatusLoaded &&\r\n            <>\r\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\r\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\r\n            </>\r\n          }\r\n        </ControlButton>\r\n\r\n        <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(3)\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\r\n          <ControlText active={controlAt == 3 ? 1 : 0}>Receive Notifs</ControlText>\r\n        </ControlButton>\r\n      </Controls>\r\n      <Interface>\r\n        {controlAt == 0 &&\r\n          <Feedbox\r\n            epnsReadProvider={epnsReadProvider}\r\n          />\r\n        }\r\n        {controlAt == 1 &&\r\n          <ViewChannels\r\n            epnsReadProvider={epnsReadProvider}\r\n            epnsWriteProvide={epnsWriteProvider}\r\n          />\r\n        }\r\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\r\n          <ChannelCreationDashboard />\r\n        }\r\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\r\n          <ChannelOwnerDashboard />\r\n        }\r\n        {controlAt == 3 &&\r\n          <Info/>\r\n        }\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  border-bottom: 10px solid rgb(180,180,180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(3.5) translate(-20px, 0px);\r\n    opacity: 0.4;\r\n  `};\r\n`\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.3) translate(-10px, 0px);\r\n  `};\r\n`\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst ControlChannelImage = styled.img`\r\n    width: 20%;\r\n    margin-bottom: 10px;\r\n    transition: transform .2s ease-out;\r\n    ${ props => props.active && css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\r\n  transition: transform .2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.1) translate(0px, -20px);\r\n  `};\r\n\r\n`\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  margin: 15px;\r\n  overflow: hidden;\r\n`\r\n\r\n// Export Default\r\nexport default Home;\r\n","// Usage:\r\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\r\n//   npm install blockies-identicon\r\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\r\n//   import Blockies from \"blockies/react-component\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\nimport React from 'react';\r\nimport blockies from \"./blockies\";\r\n\r\nexport default class BlockiesIdenticon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getOpts () {\r\n    return {\r\n      seed: this.props.opts.seed || \"foo\",\r\n      color: this.props.opts.color || \"#dfe\",\r\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\r\n      size: this.props.opts.size || 15,\r\n      scale: this.props.opts.scale || 3,\r\n      spotcolor: this.props.opts.spotcolor || \"#000\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Check for prop change\r\n    if (this.props.seed !== prevProps.seed) {\r\n      this.draw();\r\n    }\r\n  }\r\n  draw() {\r\n    blockies.render({\r\n      seed: this.props.opts.seed,\r\n      size: this.props.opts.size,\r\n      scale: this.props.opts.scale\r\n    }, this.canvas);\r\n  }\r\n  render() {\r\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\n// Create Header\r\nfunction Profile() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function(name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <>\r\n    {account && account !== '' && !error &&\r\n      <Container>\r\n        <Blocky>\r\n          <BlockyInner>\r\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\r\n          </BlockyInner>\r\n        </Blocky>\r\n        <Wallet>\r\n        {!ensFetched &&\r\n          <Loader\r\n      \t     type=\"Oval\"\r\n      \t     color=\"#FFF\"\r\n      \t     height={16}\r\n      \t     width={16}\r\n      \t  />\r\n        }\r\n        {ensFetched && ens &&\r\n          <>{ens}</>\r\n        }\r\n        {ensFetched && !ens &&\r\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n        }\r\n        </Wallet>\r\n      </Container>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  margin: 0;\r\n  padding: 0;\r\n  background: none;\r\n  border: 0;\r\n  outline: 0;\r\n  justify-content: flex-start;\r\n  flex: 1,\r\n  flex-direction: row;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 0px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: rgb(226,8,128);\r\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\r\n  const [badge, setBadge] = React.useState(0);\r\n  const [ring, setRing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Set new badge count and ring the bell\r\n    setBadge(badgeCount);\r\n\r\n    if (badge > 0) {\r\n      setResetRinger();\r\n    }\r\n  }, [badgeCount]);\r\n\r\n  const setResetRinger = () => {\r\n    setRing(true);\r\n\r\n    setTimeout(() => {\r\n        setRing(false)\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (bellPressedCB) {bellPressedCB();}\r\n      }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\r\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\r\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\r\n      {badge != 0 &&\r\n        <AnimateOnChange\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOut\"\r\n          durationOut={200}\r\n        >\r\n          <Badge>{badge}</Badge>\r\n        </AnimateOnChange>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  position: relative;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst tadaaa = keyframes`\r\n  0% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n\r\nconst BellImage = styled.img`\r\n  position: absolute;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.ringme && css`\r\n    animation: ${tadaaa} 1s ease-out;\r\n  `};\r\n\r\n\r\n`\r\n\r\nconst BellImageAbs = styled(BellImage)`\r\n  left: 0,\r\n`\r\n\r\nconst Badge = styled.span`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #fff;\r\n  padding: 2px 4px;\r\n  border-radius: 100%;\r\n  background: rgba(208.0, 44.0, 30.0, 1.0);\r\n  top: 0px;\r\n  left: 5px;\r\n  font-weight: bold;\r\n`\r\n\r\n// Export Default\r\nexport default Bell;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport Profile from 'components/Profile';\r\nimport Bell from 'components/Bell';\r\n\r\n\r\n// Create Header\r\nfunction Header({ badgeCount, bellPressedCB }) {\r\n  const context = useWeb3React<Web3Provider>()\r\n\r\n  const { active, error, account, chainId } = useWeb3React();\r\n  const { deactivate } = context\r\n\r\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\r\n\r\n  function getErrorMessage(error: Error) {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      return \"Unsupported Network, please connect to Ropsten\"\r\n    } else if (\r\n      error instanceof UserRejectedRequestErrorInjected\r\n    ) {\r\n      return 'Please authorize this website to access the dApp'\r\n    } else {\r\n      console.error(error)\r\n      return 'An unknown error occurred. Check the console for more details'\r\n    }\r\n  }\r\n\r\n  const bellPressed = () => {\r\n    setShowLoginControls(!showLoginControls);\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setShowLoginControls(false);\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer\r\n      direction=\"row\"\r\n      padding=\"10px 15px\"\r\n    >\r\n      <ItemH\r\n        justify=\"flex-start\"\r\n        flex=\"0\"\r\n      >\r\n        {active && !error &&\r\n          <Profile />\r\n        }\r\n        {!active &&\r\n          <Logo src=\"epns.png\" />\r\n        }\r\n      </ItemH>\r\n\r\n      <ItemH\r\n        justify=\"flex-end\"\r\n      >\r\n        {active && !error &&\r\n          <Bell\r\n            badgeCount={badgeCount}\r\n            bellPressedCB={bellPressed}\r\n            width={32}\r\n            height={32}\r\n          />\r\n        }\r\n\r\n        {showLoginControls &&\r\n          <Item\r\n            position=\"absolute\"\r\n          >\r\n            <Button\r\n              bg=\"#000\"\r\n              size=\"12px\"\r\n              spacing=\"0.2em\"\r\n              textTransform=\"uppercase\"\r\n              weight=\"600\"\r\n              radius=\"20px\"\r\n              onClick={() => disconnect()}\r\n            >\r\n              Disconnect\r\n            </Button>\r\n          </Item>\r\n        }\r\n\r\n        <ItemH\r\n          justify=\"flex-end\"\r\n          flex=\"initial\"\r\n        >\r\n          {!!error &&\r\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\r\n          }\r\n          {!active && !error &&\r\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\r\n          }\r\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\r\n        </ItemH>\r\n      </ItemH>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\n// CSS Styles\r\nconst HeaderContainer = styled(Section)`\r\n  @media (max-width: 1440px) {\r\n    background: rgb(255,255,255);\r\n  }\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst PrimaryTheme = styled(Notice)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ThirdTheme = styled(Notice)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst Connection = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n\r\n  ${props => props.phase === 'active' && css`\r\n    background: #77DD77;\r\n  `};\r\n\r\n  ${props => props.phase === 'waiting' && css`\r\n    background: #FFAE42;\r\n  `};\r\n\r\n  ${props => props.phase === 'error' && css`\r\n    background: #DC143C;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactGA from 'react-ga';\r\n\r\nimport styled from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport { useEagerConnect, useInactiveListener } from 'hooks'\r\nimport {\r\n  injected,\r\n  walletconnect,\r\n  portis,\r\n  trezor,\r\n  ledger\r\n} from 'connectors'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport Home from 'pages/Home';\r\nimport Header from 'segments/Header';\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst web3Connectors = {\r\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\r\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\r\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\r\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\r\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider, connector) {\r\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nfunction ChainId() {\r\n  const { chainId } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <span>Chain Id</span>\r\n      <span role=\"img\" aria-label=\"chain\">\r\n        ⛓\r\n      </span>\r\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction App() {\r\n  const context = useWeb3React<Web3Provider>()\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\r\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\r\n  const [ bellPressed, setBellPressed ] = React.useState(0);\r\n\r\n  // Initialize GA\r\n  ReactGA.initialize('UA-165415629-5');\r\n  ReactGA.pageview('/login');\r\n\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined)\r\n    }\r\n  }, [activatingConnector, connector])\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n\r\n  return (\r\n      <>\r\n        <HeaderContainer>\r\n          <Header\r\n            badgeCount={badgeCount}\r\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\r\n          />\r\n        </HeaderContainer>\r\n\r\n        <ParentContainer>\r\n        {(active) && !error && (\r\n          <HomeContainer>\r\n            <Home\r\n              setBadgeCount={setBadgeCount}\r\n              bellPressed={bellPressed}\r\n            />\r\n          </HomeContainer>\r\n\r\n        )}\r\n\r\n        {!active &&\r\n          <Item>\r\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\r\n            <Item\r\n              bg=\"#fafafa\"\r\n              border=\"1px solid #ddd\"\r\n              padding=\"15px\"\r\n              radius=\"12px\"\r\n            >\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\r\n              </H2>\r\n\r\n              <ItemH\r\n                maxWidth=\"800px\"\r\n                align=\"stretch\"\r\n              >\r\n                {Object.keys(web3Connectors).map(name => {\r\n                  const currentConnector = web3Connectors[name].obj\r\n                  const activating = currentConnector === activatingConnector\r\n                  const connected = currentConnector === connector\r\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n                  const image = web3Connectors[name].logo\r\n                  const title = web3Connectors[name].title\r\n\r\n                  return (\r\n                    <ProviderButton\r\n                      disabled={disabled}\r\n                      key={name}\r\n                      onClick={() => {\r\n                        setActivatingConnector(currentConnector)\r\n                        activate(currentConnector)\r\n                      }}\r\n                      border=\"#35c5f3\"\r\n                    >\r\n                      <ProviderImage src={image} />\r\n\r\n                      <Span\r\n                        spacing=\"0.1em\"\r\n                        textTransform=\"uppercase\"\r\n                        size=\"12px\"\r\n                        weight=\"600\"\r\n                        padding=\"10px\"\r\n                      >\r\n                        {title}\r\n                      </Span>\r\n                    </ProviderButton>\r\n                  )\r\n                })}\r\n              </ItemH>\r\n            </Item>\r\n\r\n            <Span margin=\"10px\" size=\"14px\">\r\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\r\n            </Span>\r\n          </Item>\r\n        }\r\n        </ParentContainer>\r\n\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n        />\r\n      </>\r\n  );\r\n}\r\n\r\n\r\n// CSS STYLES\r\nconst HeaderContainer = styled.header`\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`\r\n\r\nconst ParentContainer = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 80px 20px 50px 20px;\r\n  flex: 1;\r\n`\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-self: center;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n`\r\n\r\nconst ProviderLogo = styled.img`\r\n  width: 15vw;\r\n  align-self: center;\r\n  display: flex;\r\n  margin: 10px 20px 20px 20px;\r\n  min-width: 200px;\r\n`\r\n\r\nconst ProviderButton = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 280px;\r\n  background: #fff;\r\n  outline: 0;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n    border: 1px solid ${props => props.border}\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n    border: 1px solid ${props => props.border}\r\n  }\r\n`\r\n\r\nconst ProviderImage = styled.img`\r\n  width: 32px;\r\n  max-height: 32px;\r\n  padding: 10px;\r\n`\r\n\r\nconst ProviderLabel = styled.span`\r\n  font-size: 12px;\r\n  margin: 5px;\r\n`\r\n\r\nconst StyledContainer = styled(ToastContainer).attrs({\r\n  // custom props\r\n})`\r\n  .Toastify__toast-container {}\r\n  .Toastify__toast {}\r\n  .Toastify__toast--error {}\r\n  .Toastify__toast--warning {}\r\n  .Toastify__toast--success {}\r\n  .Toastify__toast-body {\r\n    font-size: 12px;\r\n  }\r\n  .Toastify__progress-bar {}\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\r\n\r\nimport './index.css';\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { ethers } from \"ethers\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// You should replace this uri with your own and put it into a .env file\r\nconst client = new ApolloClient({\r\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>,\r\n    document.getElementById(\"root\"),\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\r\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\r\nconst addresses = {\r\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\r\n  epnscore: \"0xc882dA9660d29c084345083922F8a9292E58787D\",\r\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\r\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\r\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\r\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\r\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\r\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\r\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\r\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\r\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\r\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\r\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\r\n};\r\n\r\nexport default addresses;\r\n","import erc20Abi from \"./abis/erc20\";\r\nimport ownableAbi from \"./abis/ownable\";\r\nimport epnscoreAbi from \"./abis/epnscore\";\r\nimport daiAbi from \"./abis/dai\";\r\nimport epnsTokenAbi from \"./abis/EPNS.json\";\r\nimport stakingAbi from \"./abis/Staking.json\";\r\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\r\nimport rockstarAbi from \"./abis/Rockstar.json\";\r\nimport ec721Abi from \"./abis/ERC721.json\";\r\nimport NFTRewards from \"./abis/NFTRewards.json\";\r\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\r\n\r\nexport const abis = {\r\n  erc20: erc20Abi,\r\n  ownable: ownableAbi,\r\n  epnscore: epnscoreAbi,\r\n  dai: daiAbi,\r\n  epnsToken: epnsTokenAbi,\r\n  staking: stakingAbi,\r\n  yieldFarming: yieldFarmingAbi,\r\n  rockstar: rockstarAbi,\r\n  erc721: ec721Abi,\r\n  NFTRewards: NFTRewards,\r\n  distributor: MerkleDistributorAbi,\r\n};\r\n\r\nexport { default as addresses } from \"./addresses\";\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { FiLink } from 'react-icons/fi';\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport { bigNumberify, parseUnits } from 'ethers/utils'\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require('ethers');\r\n\r\nconst ipfs = require('ipfs-api')()\r\n\r\nconst minStakeFees = 50;\r\n\r\n// Create Header\r\nfunction CreateChannel() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState('');\r\n\r\n  const [uploadDone, setUploadDone] = React.useState(false);\r\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\r\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\r\n\r\n  const [channelName, setChannelName] = React.useState('');\r\n  const [channelInfo, setChannelInfo] = React.useState('');\r\n  const [channelURL, setChannelURL] = React.useState('');\r\n  const [channelFile, setChannelFile] = React.useState(undefined);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\r\n\r\n  const [stepFlow, setStepFlow] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // called every time a file's `status` changes\r\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\r\n\r\n  const onDropHandler=(files) =>{\r\n    //   var file = files[0]\r\n    //   const reader = new FileReader();\r\n    //   reader.onload = (event) => {\r\n    //     console.log(event.target.result);\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n    // setChannelFile(file);\r\n    // console.log(\"Drop Handler\");\r\n    // console.log(file);\r\n  }\r\n\r\n  // receives array of files that are done uploading when submit button is clicked\r\n  const handleLogoSubmit = (files, allFiles) => {\r\n    // console.log(files.map(f => f.meta))\r\n    allFiles.forEach(f => {\r\n      var file = f.file;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      // console.log(f.file);\r\n\r\n      reader.onloadend = function (e) {\r\n        // console.log(reader.result);\r\n        const response = handleLogoSizeLimitation(reader.result);\r\n        if (response.success) {\r\n          setStepFlow(2);\r\n          setProcessing(0);\r\n          setUploadDone(true);\r\n          setChannelFile(reader.result);\r\n        }\r\n        else {\r\n          setProcessing(3);\r\n          setProcessingInfo(response.info);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleLogoSizeLimitation = (base64) => {\r\n      // Setup Error on higher size of 128px\r\n      var sizeOf = require('image-size');\r\n      var base64Data = base64.split(';base64,').pop();\r\n      var img = Buffer.from(base64Data, 'base64');\r\n      var dimensions = sizeOf(img);\r\n\r\n      // Only proceed if image is equal to or less than 128\r\n      if (dimensions.width > 128 || dimensions.height > 128) {\r\n        console.log(\"Image size check failed... returning\");\r\n        return {\r\n          success: 0,\r\n          info: \"Image size check failed, Image should be 128X128PX\"\r\n        };\r\n      }\r\n\r\n      // only proceed if png or jpg\r\n      // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\r\n      // char(0) => '/' : jpg\r\n      // char(0) => 'i' : png\r\n      let fileext;\r\n      console.log(base64Data.charAt(0));\r\n      if (base64Data.charAt(0) == '/') {\r\n        return {\r\n          success: 1,\r\n          info: \"Image checks passed\"\r\n        };\r\n      }\r\n      else if (base64Data.charAt(0) == 'i') {\r\n        return {\r\n          success: 1,\r\n          info: \"Image checks passed\"\r\n        };\r\n      }\r\n      else {\r\n        return {\r\n          success: 0,\r\n          info: \"Image extension should be jpg or png\"\r\n        };\r\n      }\r\n  }\r\n\r\n  const handleCreateChannel = async (e) => {\r\n    // Check everything in order\r\n    // skip this for now\r\n    e.preventDefault();\r\n\r\n    if (isEmpty(channelName) || isEmpty(channelInfo) || isEmpty(channelURL) || isEmpty(channelFile)) {\r\n      setProcessing(3);\r\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\r\n\r\n      return false;\r\n    }\r\n\r\n    // Check complete, start logic\r\n    setChannelInfoDone(true);\r\n    setProcessing(1);\r\n\r\n    const input = JSON.stringify(\r\n      {\r\n        \"name\": channelName,\r\n        \"info\": channelInfo,\r\n        \"url\": channelURL,\r\n        \"icon\": channelFile\r\n      }\r\n    )\r\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n    setProcessingInfo(\"Uploading Payload...\")\r\n    const storagePointer = await ipfs.add(input);\r\n    console.log(\"IPFS storagePointer:\", storagePointer);\r\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\")\r\n    //console.log(await ipfs.cat(storagePointer));\r\n\r\n    // Send Transaction\r\n    // First Approve DAI\r\n    var signer = library.getSigner(account);\r\n\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n\r\n    // Pick between 50 DAI AND 25K DAI\r\n    const fees = parseUnits(channelStakeFees.toString(), 18);\r\n\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n\r\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\r\n\r\n    const channelType = 2; // Open Channel\r\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise = contract.createChannelWithFees(channelType, identityBytes);\r\n\r\n    setProcessingInfo(\"Creating Channel TX in progress\");\r\n    anotherSendTxPromise\r\n      .then(async function(tx) {\r\n        console.log(tx);\r\n        console.log(\"Check: \" + account);\r\n\r\n        await library.waitForTransaction(tx.hash);\r\n        setProcessingInfo(\"Channel Created\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error --> %o\", err);\r\n        setProcessing(3);\r\n        setProcessingInfo(\"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\");\r\n      });\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  //mind Dai\r\n  const mintDai = async() => {\r\n    var signer = library.getSigner(account);\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n\r\n    let daiAmount = 1000\r\n    const amount = parseUnits(daiAmount.toString(), 18);\r\n    var mintTransactionPromise = daiContract.mint(amount);\r\n    const tx = await mintTransactionPromise;\r\n    console.log(tx)\r\n    await library.waitForTransaction(tx.hash);\r\n    setProcessingInfo(\"1000 Dai minted successfully!\");\r\n    console.log(\"Transaction Completed\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Create</Span><Span weight=\"200\"> Your Channel!</Span>\r\n            </H2>\r\n            <H3><b>Ethereum Push Notification Service</b> (EPNS) makes it extremely easy to open and maintain a genuine channel of communication with your users.</H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"0px 20px 20px\">\r\n          <ItemH justify=\"space-between\">\r\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 1 ? \"active\" : \"inactive\"} />\r\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 2 ? \"active\" : \"inactive\"} />\r\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 3 ? \"active\" : \"inactive\"} />\r\n            <Line />\r\n          </ItemH>\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* Image Upload Section */}\r\n      {!uploadDone &&\r\n        <Section>\r\n          <Content padding=\"50px 20px 20px\">\r\n            <Item align=\"flex-start\">\r\n              <H3 color=\"#e20880\">Upload Channel Logo to start the process. Make sure image is 128x128px.</H3>\r\n            </Item>\r\n\r\n            <Item margin=\"-10px 0px 20px 0px\">\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                onSubmit={handleLogoSubmit}\r\n                onDrop={onDropHandler}\r\n                maxFiles={1}\r\n                multiple={false}\r\n                accept=\"image/jpeg,image/png\"\r\n              />\r\n            </Item>\r\n            <Item align=\"flex-end\">\r\n              <Minter onClick = {() => {\r\n                mintDai()\r\n              }}>\r\n                <Pool>\r\n                  <br></br>\r\n                  <PoolShare>\r\n                    Get Free DAI for Channel\r\n                  </PoolShare>\r\n                </Pool>\r\n              </Minter>\r\n            </Item>\r\n\r\n          </Content>\r\n        </Section>\r\n      }\r\n\r\n      {/* Stake Fees Section */}\r\n      {uploadDone && !stakeFeesChoosen &&\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item>\r\n\r\n            <Item margin=\"-10px 20px 20px 20px\" padding=\"20px 20px 10px 20px\" bg=\"#f1f1f1\">\r\n              <Slider\r\n                defaultValue={minStakeFees}\r\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={minStakeFees}\r\n                marks\r\n                min={minStakeFees}\r\n                max={25000}\r\n              />\r\n              <Span weight=\"400\" size=\"1.0em\" textTransform=\"uppercase\" spacing=\"0.2em\">Amount Staked: {channelStakeFees} DAI</Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg='#e20880'\r\n                color='#fff'\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={() => {setStakeFeesChoosen(true); setStepFlow(3)}}\r\n              >\r\n                <Span color=\"#fff\" weight=\"400\" textTransform=\"uppercase\" spacing=\"0.1em\">Continue</Span>\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      }\r\n\r\n      {/* Channel Entry */}\r\n      {uploadDone && stakeFeesChoosen && !channelInfoDone &&\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\r\n            </Item>\r\n\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleCreateChannel}\r\n            >\r\n\r\n              <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                <Input\r\n                  required\r\n                  placeholder=\"Your Channel Name\"\r\n                  maxlength = \"40\"\r\n                  padding=\"12px\"\r\n                  borderBottom=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1.2em\"\r\n                  bg=\"#fff\"\r\n                  value={channelName}\r\n                  onChange={(e) => {setChannelName(e.target.value)}}\r\n                />\r\n                {channelName.trim().length == 0 &&\r\n                    <Span\r\n                      padding=\"4px 10px\"\r\n                      right=\"0px\"\r\n                      top=\"0px\"\r\n                      pos=\"absolute\"\r\n                      color=\"#fff\"\r\n                      bg=\"#000\"\r\n                      size=\"0.7rem\"\r\n                      z=\"1\"\r\n                    >\r\n                      Name of Channel\r\n                    </Span>\r\n                  }\r\n              </Item>\r\n\r\n              <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                <TextField\r\n                  required\r\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\r\n                  rows=\"4\"\r\n                  maxlength=\"200\"\r\n                  radius=\"4px\"\r\n                  padding=\"12px\"\r\n                  weight=\"400\"\r\n                  border=\"1px solid #000\"\r\n                  bg=\"#fff\"\r\n                  value={channelInfo}\r\n                  onChange={(e) => {setChannelInfo(e.target.value)}}\r\n                  autocomplete=\"off\"\r\n                />\r\n              </Item>\r\n\r\n              <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\r\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                  <FiLink size={24} color=\"#000\"/>\r\n                </Item>\r\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Call to Action Link\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #000\"\r\n                    radius=\"4px\"\r\n                    weight=\"400\"\r\n                    bg=\"#f1f1f1\"\r\n                    value={channelURL}\r\n                    onChange={(e) => {setChannelURL(e.target.value)}}\r\n                  />\r\n                  {channelURL.trim().length == 0 &&\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Channel's Website URL\r\n                      </Span>\r\n                    }\r\n                  </Item>\r\n              </ItemH>\r\n\r\n              <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                <Button\r\n                  bg='#e20880'\r\n                  color='#fff'\r\n                  flex=\"1\"\r\n                  radius=\"0px\"\r\n                  padding=\"20px 10px\"\r\n                  disabled={processing == 1 ? true : false}\r\n                >\r\n                  {processing == 1 &&\r\n                    <Loader\r\n                       type=\"Oval\"\r\n                       color=\"#fff\"\r\n                       height={24}\r\n                       width={24}\r\n                      />\r\n                  }\r\n                  {processing != 1 &&\r\n                    <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Setup Channel\" />\r\n                  }\r\n                </Button>\r\n              </Item>\r\n            </FormSubmision>\r\n          </Content>\r\n        </Section>\r\n      }\r\n\r\n      {/* Channel Setup Progress */}\r\n      {(processing == 1 || processing == 3) &&\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            {processing == 1 &&\r\n              <Item margin=\"20px 0px 10px 0px\">\r\n                <Loader\r\n                  type=\"Oval\"\r\n                  color=\"#000\"\r\n                  height={24}\r\n                  width={24}\r\n                />\r\n              </Item>\r\n            }\r\n\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin = \"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n\r\n          </Content>\r\n        </Section>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Step = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  background: ${props => props.bg || \"#fff\"};\r\n  border: 4px solid ${props => props.activeBG || \"#000\"};\r\n  border-radius: 100%;\r\n\r\n  ${({ type }) => type == \"active\" && css`\r\n    background: ${props => props.activeBG || \"#ddd\"};\r\n    border: 4px solid #00000022;\r\n  `};\r\n`\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`\r\n\r\nconst Channel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`\r\n\r\nconst Notice = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  color: #674c9f;\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  margin-top: 0px;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Info = styled.label`\r\n  padding-bottom: 20px;\r\n  font-size: 14px;\r\n  color: #000;\r\n`\r\n\r\nconst Info2 = styled(Info)`\r\n\r\n`\r\nconst Name = styled(Input)`\r\n  border-bottom: 1px solid #e20880;\r\n  font-size: 24px;\r\n`\r\n\r\nconst ShortInfo = styled.textarea`\r\n  outline: 0;\r\n  border: 0;\r\n  border-bottom: 1px solid #35c5f3;\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-height: 80px;\r\n  color: #111;\r\n`\r\n\r\nconst Url = styled(Input)`\r\n  border-bottom: 1px solid #674c9f;\r\n  font-size: 1=8px;\r\n`\r\n\r\nconst Text = styled.span`\r\n\r\n`\r\n\r\nconst Continue = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  background: ${props => props.theme || '#674c9f'};\r\n  margin: 30px 0px 0px 0px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`\r\nconst Minter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n  // font-size: 11px;\r\n`\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default CreateChannel;\r\n","(function() {\r\n\t// The random number is a js implementation of the Xorshift PRNG\r\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\n\r\n\tfunction seedrand(seed) {\r\n\t\tfor (var i = 0; i < randseed.length; i++) {\r\n\t\t\trandseed[i] = 0;\r\n\t\t}\r\n\t\tfor (var i = 0; i < seed.length; i++) {\r\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rand() {\r\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\r\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\r\n\r\n\t\trandseed[0] = randseed[1];\r\n\t\trandseed[1] = randseed[2];\r\n\t\trandseed[2] = randseed[3];\r\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\r\n\r\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\r\n\t}\r\n\r\n\tfunction createColor() {\r\n\t\t//saturation is the whole color spectrum\r\n\t\tvar h = Math.floor(rand() * 360);\r\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\r\n\t\tvar s = ((rand() * 60) + 40) + '%';\r\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\r\n\r\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n\t\treturn color;\r\n\t}\r\n\r\n\tfunction createImageData(size) {\r\n\t\tvar width = size; // Only support square icons for now\r\n\t\tvar height = size;\r\n\r\n\t\tvar dataWidth = Math.ceil(width / 2);\r\n\t\tvar mirrorWidth = width - dataWidth;\r\n\r\n\t\tvar data = [];\r\n\t\tfor(var y = 0; y < height; y++) {\r\n\t\t\tvar row = [];\r\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\r\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\r\n\t\t\t\t// spot color has 13% chance\r\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\r\n\t\t\t}\r\n\t\t\tvar r = row.slice(0, mirrorWidth);\r\n\t\t\tr.reverse();\r\n\t\t\trow = row.concat(r);\r\n\r\n\t\t\tfor(var i = 0; i < row.length; i++) {\r\n\t\t\t\tdata.push(row[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction buildOpts(opts) {\r\n\t\tvar newOpts = {};\r\n\r\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\r\n\r\n\t\tseedrand(newOpts.seed);\r\n\r\n\t\tnewOpts.size = opts.size || 8;\r\n\t\tnewOpts.scale = opts.scale || 4;\r\n\t\tnewOpts.color = opts.color || createColor();\r\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\r\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\r\n\r\n\t\treturn newOpts;\r\n\t}\r\n\r\n\tfunction renderIcon(opts, canvas) {\r\n\t\topts = buildOpts(opts || {});\r\n\t\tvar imageData = createImageData(opts.size);\r\n\t\tvar width = Math.sqrt(imageData.length);\r\n\r\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\r\n\r\n\t\tvar cc = canvas.getContext('2d');\r\n\t\tcc.fillStyle = opts.bgcolor;\r\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\tcc.fillStyle = opts.color;\r\n\r\n\t\tfor(var i = 0; i < imageData.length; i++) {\r\n\r\n\t\t\t// if data is 0, leave the background\r\n\t\t\tif(imageData[i]) {\r\n\t\t\t\tvar row = Math.floor(i / width);\r\n\t\t\t\tvar col = i % width;\r\n\r\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\r\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\r\n\r\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createIcon(opts) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\r\n\t\trenderIcon(opts, canvas);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tvar api = {\r\n\t\tcreate: createIcon,\r\n\t\trender: renderIcon\r\n\t};\r\n\r\n\tif (typeof module !== \"undefined\") {\r\n\t\tmodule.exports = api;\r\n\t}\r\n\tif (typeof window !== \"undefined\") {\r\n\t\t window.blockies = api;\r\n\t}\r\n\r\n})();\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  align-self: stretch;\r\n  justify-content: center;\r\n  align-items: ${props => props.align || 'initial'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  margin: ${props => props.margin || '0px'};\r\n  padding: ${props => props.padding || '0px'};\r\n  overflow: ${props => props.overflow || 'initial'};\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\nexport const SectionFS = styled(Section)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const SectionFSHero = styled(Section)`\r\n  min-height: 100vh;\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const SectionHero = styled(Section)`\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${props => props.padding || \"40px 0px\"};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  position: relative;\r\n`\r\n\r\nexport const ItemBreak = styled.div`\r\n  flex-basis: 100%;\r\n`\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: ${props => props.wrap || 'wrap'};\r\n  position: ${props => props.position || 'relative'};\r\n  justify-content: center;\r\n  background: ${props => props.bg || 'transparent'};\r\n  flex: ${props => props.flex || '1'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  margin: ${props => props.margin || '0px'};\r\n  min-width: ${props => props.minWidth || 'auto'};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  width: ${props => props.width || \"auto\" };\r\n  height: ${props => props.height || \"auto\" };\r\n\r\n  border: ${props => props.border || \"none\"};\r\n\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  overflow: ${props => props.overflow || \"initial\"};\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\r\n  }\r\n\r\n  ${ItemBreak} {\r\n    width: 0;\r\n  }\r\n`\r\n\r\nexport const ItemH = styled(Item)`\r\n  flex-direction: row;\r\n  flex: ${props => props.flex || '1'};\r\n\r\n  ${ItemBreak} {\r\n    width: auto;\r\n    height: 0;\r\n  }\r\n`\r\n\r\nexport const WaveOuter = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: ${props => props.bottom || '-70px'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const WaveInner = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const Arc = styled.div`\r\n  position: absolute;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n  \twidth: 300%;\r\n  \theight: 300%;\r\n  \ttop: -25%;\r\n  \tleft: -100%;\r\n\r\n\r\n    ${ props => props.arcRGB && css`\r\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\r\n    `};\r\n  }\r\n`\r\n\r\nexport const H1 = styled.h1`\r\n  @media (max-width: 480px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n`\r\n\r\nexport const H3 = styled.h3`\r\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"1rem\"};\r\n  text-transform: ${props => props.textTransform || \"uppercase\"};\r\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n`\r\n\r\nexport const P = styled.p`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n`\r\n\r\nexport const Para = styled(P)`\r\n  font-weight: ${props => props.weight || 300};\r\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\r\n  font-size: ${props => props.size || \"1.1em\"};\r\n  color: ${props => props.color || \"#000000ee\"};\r\n`\r\n\r\nexport const Span = styled.span`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n\r\n  position: ${props => props.pos || 'initial'};\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  z-index: ${props => props.z || 'auto'};\r\n`\r\n\r\nexport const B = styled.span`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 'bold'};\r\n`\r\n\r\nexport const UL = styled.ul`\r\n\r\n`\r\n\r\nexport const LI = styled.li`\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  width: ${props => props.width || \"initial\" };\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`\r\n\r\nexport const A = styled(Anchor)`\r\n  display: inline;\r\n  color: #e1087f;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"tranparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"initial\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  text-transform: ${props => props.textTransform || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const Showoff = styled.div`\r\n  position: absolute;\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n  opacity: ${props => props.opacity || 'initial'};\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n\r\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\r\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\r\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\r\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\r\n\r\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\r\n\r\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\r\n  }\r\n`\r\n\r\nexport const FormSubmision = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  position: relative;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: ${props => props.display || 'flex'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n\r\n  cursor: ${props => props.cursor || \"initial\"};\r\n  pointer: ${props => props.hand || \"initial\"};\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nexport const TextField = styled.textarea`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  resize: vertical;\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n"],"sourceRoot":""}