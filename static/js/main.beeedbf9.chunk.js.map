{"version":3,"sources":["helpers/CryptoHelper.js","serviceWorker.js","connectors.ts","hooks.ts","config/index.js","helpers/EPNSCoreHelper.js","components/NotificationToast.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/notificationSlice.js","segments/Feedbox.tsx","components/DisplayNotice.js","assets/Device.js","api/index.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","redux/slices/adminSlice.js","components/ChannelSettings.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","redux/store.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/SharedStyling.js","components/CreateChannel.js","components/blockies.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","Boolean","window","location","hostname","match","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","dotenv","etherscanToken","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","NotificationWrapper","styled","Toaster","NotificationToast","notification","clearToast","LoaderToast","color","notificationTitle","notificationBody","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","AliasVerificationModal","onClose","onSuccess","verificationStatus","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","padding","CustomInput","required","placeholder","radius","border","onChange","target","margin","flex","self","disabled","verifyChannelAlias","tx","setTimeout","type","height","width","StyledInput","cursor","size","Input","Container","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","href","rel","ContainerInfo","InfoBox","Info","React","controlAt","contractSlice","createSlice","name","initialState","page","notifications","finishedFetching","reducers","addPaginatedNotifications","state","action","payload","incrementPage","addNewNotification","setFinishedFetching","actions","Items","Feedbox","dispatch","useDispatch","epnsCommReadProvider","useSelector","contracts","loadNotifications","api","fetchNotifications","count","results","parsedResponse","parseApiResponse","useEffect","handlePagination","id","oneNotification","index","cta","title","app","icon","image","Number","showWayPoint","onEnter","Notice","span","props","theme","css","DisplayNotice","animationIn","animationOut","durationOut","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","BASE_URL","postReq","path","obj","axios","post","headers","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","subscribers","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","cachedSubscribers","op","subs","data","getChannelJsonAsync","instance","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","channelsCache","setChannelMeta","cacheChannelInfo","meta","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","admin","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","onCoreNetwork","ALLOWED_CORE_NETWORK","showToast","verifiedBy","fetchChannelJson","channelState","EPNS_DOMAIN","verifyingContract","channelSubscribers","find","sub","toLowerCase","subscribe","subscribeAction","notificationToast","toaster","subscriber","_signTypedData","signature","txToast","contractAddress","res","update","render","TYPE","SUCCESS","ERROR","finally","unsubscribeAction","style","unsubscriber","src","display","marginLeft","info","blockChannel","INFO","verifyChannel","unverifyChannel","wait","Faucets","overflow","pos","top","right","direction","textAlign","CenterContainer","ViewChannels","moreLoading","setMoreLoading","channelsVisited","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","DropdownStyled","Dropdown","SendNotifications","epnsCommWriteProvider","channelDetails","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","isChannelDeactivated","includes","bodyValidated","validated","handleSendMessage","preventDefault","communicatorContract","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","body","JSON","stringify","at","add","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","field","trim","justify","onSubmit","minWidth","options","option","Switch","checked","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","AddDelegateModal","addDelegate","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","setUserChannelDetails","setCanVerify","ChannelSettings","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","poolContribution","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","epnscore","waitForTransaction","hash","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","pow","walletAddress","flexDirection","justifyContent","flexWrap","background","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","ReactGA","pageview","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","aliasAddress","ethAddress","status","coreContractInstance","commAddress","epnsEthComm","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","pushChannelAdmin","checkUserForChannelOwnership","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","toLocaleLowerCase","ipfsId","ipfsNotification","toastMessage","notificationObject","off","bind","listenFornewNotifications","controlIndex","ownerAccount","getChannelVerfication","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","className","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","App","connector","activate","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","keys","currentConnector","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h1","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField","textarea","ALIAS_CHAINS","Step","activeBG","Line","Minter","Pool","PoolShare","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","randseed","rand","t","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","slice","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","module","exports"],"mappings":"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","file":"static/js/main.beeedbf9.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [\n  42 ,//for ropsten\n  80001 //for mumbai\n];\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 3: RPC_URLS[3] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 3,\n  url: RPC_URLS[3],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channelById(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity, channel) => {\n    const enableLogs = 0;\n\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      if(!identity){\n        reject(\"There is no identity file for channel:\",channel);\n      }\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response, channel))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess, verificationStatus\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n            // await tx.wait(1);\n            // setLoading(\"Transaction Mined!\");\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    {\n                        verificationStatus === null ?\n                        (\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\n                        ) : (\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                        )\n                    }\n                </Item>\n                {\n                    verificationStatus !== null && (\n                        <>\n                            <Item align=\"flex-start\">\n                                <CustomInput\n                                    required\n                                    placeholder=\"Enter ethereum wallet address of this channel\"\n                                    radius=\"4px\"\n                                    padding=\"12px\"\n                                    border=\"1px solid #674c9f\"\n                                    bg=\"#fff\"\n                                    value={mainAdress}\n                                    onChange={(e) => {setMainAddress(e.target.value)}}\n                                />\n                            </Item>\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                                <Button\n                                    bg='#e20880'\n                                    color='#fff'\n                                    flex=\"1\"\n                                    radius=\"0px\"\n                                    padding=\"20px 10px\"\n                                    disabled={mainAdress.length !== 42}\n                                    onClick={submitAlias}\n                                >\n                                    { loading && <Loader\n                                        type=\"Oval\"\n                                        color=\"#FFF\"\n                                        height={16}\n                                        width={16}\n                                        />\n                                    }\n                                    <StyledInput\n                                        cursor=\"hand\"\n                                        textTransform=\"uppercase\"\n                                        color=\"#fff\" weight=\"400\"\n                                        size=\"0.8em\" spacing=\"0.2em\"\n                                        value={loading ? loading : \"Verify Alias\"}\n                                    />\n                                </Button>\n                            </Item>\n                        </>\n                    )\n                }\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS Browser Extension\n            </AppLink>\n          </AppLinkText>\n          \n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default Info;\n","/**\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"notifications\",\n    initialState,\n    reducers: {\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        }\n    }\n});\n\nexport const {\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk-staging\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n} from \"redux/slices/notificationSlice\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction Feedbox() {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\n  const { notifications, page, finishedFetching } = useSelector(\n    (state: any) => state.notifications\n  );\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page\n      );\n      const parsedResponse = utils.parseApiResponse(results);\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (epnsCommReadProvider) {\n      loadNotifications();\n    }\n  }, [epnsCommReadProvider, account]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return Number(index) === notifications.length - 1 && !finishedFetching;\n  };\n\n  // Render\n  return (\n    <>\n      <Container>\n        {notifications && (\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {\n              const { cta, title, message, app, icon, image } = oneNotification;\n\n              // render the notification item\n              return (\n                <div key={`${message}+${title}`}>\n                  {showWayPoint(index) && (\n                    <Waypoint onEnter={() => handlePagination()} />\n                  )}\n                  <NotificationItem\n                    notificationTitle={title}\n                    notificationBody={message}\n                    cta={cta}\n                    app={app}\n                    icon={icon}\n                    image={image}\n                  />\n                </div>\n              );\n            })}\n          </Items>\n        )}\n        {loading && (\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import axios from \"axios\";\n\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\nconst BASE_URL = \"https://backend-kovan.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n};\n\nexport default class ChannelsDataStore {\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n  state = {\n    channelsCount: -1,\n    channelsMeta: {},\n    channelsJson: {},\n    subscribers: {},\n\n    callbacks: [],\n\n    account: null,\n    epnsReadProvider: null,\n    epnsCommReadProvider: null,\n  };\n\n  // init\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\n    // set account\n    this.state.account = account;\n\n    // First attach listeners then overwrite the old one if any\n    this.resetChannelsListeners();\n    this.state.epnsReadProvider = epnsReadProvider;\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\n    this.initChannelsListenersAsync();\n\n    // next get store channels count\n    this.getChannelsCountAsync();\n  };\n\n  // RESET LISTENERS\n  resetChannelsListeners = () => {\n    // only proceed if a read provider is attached\n    if (this.state.epnsReadProvider) {\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n    }\n  };\n\n  // init LISTENERS\n  initChannelsListenersAsync = async () => {\n    // Add Listeners\n    await this.listenForAddChannelAnyAsync();\n    await this.listenForAddChannelSelfAsync();\n\n    await this.listenForUpdateChannelAnyAsync();\n    await this.listenForUpdateChannelSelfAsync();\n\n    // use the communicator contract for the below\n    await this.listenForSubscribeAnyAsync();\n    await this.listenForSubscribeSelfAsync();\n    await this.listenForUnsubscribeAnyAsync();\n    await this.listenForUnsubscribeSelfAsync();\n  };\n\n  // 1. Add Any Channel Listeners\n  listenForAddChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      await this.incrementChannelsCountAsync(1);\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 2. Add Self Channel Listener\n  listenForAddChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      // Nothing to do, just do callback\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 3. Update Any Channel Listener\n  listenForUpdateChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 4. Update Self Channel Listener\n  listenForUpdateChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 5. Subscriber Any\n  listenForSubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 6. Subscriber Self\n  listenForSubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 7. Unsubscribe Any\n  listenForUnsubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      // Do own stuff\n      // if (this.state.channelsMeta[channel]) {\n      //   const channelID = this.state.channelsMeta[channel];\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //   count = count - 1;\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      // }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 8. Unsubscribe Self\n  listenForUnsubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // FOR CALLBACKS\n  addCallbacks = (callbackType, callbackID, callback) => {\n    // first check if callback already exists\n    if (!this.state.callbacks[callbackType]) {\n      this.state.callbacks[callbackType] = {};\n    }\n\n    if (!this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = callback;\n    }\n  };\n\n  removeCallbacks = (callbackType, callbackID) => {\n    // first check if callback already exists\n    if (this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = null;\n    }\n  };\n\n  // CHANNELS COUNT\n  getChannelsCountAsync = async () => {\n    const enableLogs = 0;\n\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsCount == -1) {\n        // Count not set, get and set it first\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            this.state.channelsCount = response;\n\n            if (enableLogs)\n              console.log(\"getChannelsCountAsync() --> %o\", response);\n            resolve(this.state.channelsCount);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n            reject(err);\n          });\n      } else {\n        resolve(this.state.channelsCount);\n      }\n    });\n  };\n\n  incrementChannelsCountAsync = async (incrementCount) => {\n    return new Promise((resolve, reject) => {\n      this.getChannelsCountAsync()\n        .then((response) => {\n          this.state.channelsCount = response + incrementCount;\n          console.log(\n            \"incrementChannelsCountAsync() --> %d\",\n            this.state.channelsCount\n          );\n          resolve(this.state.channelsCount);\n        })\n        .catch((err) => {\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\n          reject(err);\n        });\n    });\n  };\n\n  // CHANNELS META FUNCTIONS\n  // To get channels meta\n  // get channels meta in a paginated format\n  // by passing in the starting index and the number of items per page\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\n    return new Promise(async (resolve, reject) => {\n      // get total number of channels\n      const channelsCount = await this.getChannelsCountAsync();\n      let stopIndex = startIndex + pageCount;\n\n      // if the stop index is -1 then get all channels\n      if (stopIndex == -1 || stopIndex > channelsCount) {\n        stopIndex = channelsCount;\n      }\n\n      // initialise an array with the values from 0 to the length of the number of channels\n      let channelIDs = [];\n\n      for (let i = startIndex; i < stopIndex; i++) {\n        channelIDs.push(i);\n      }\n      console.log({ channelIDs });\n\n      const promises = channelIDs.map(async (channelID) => {\n        // Match the cache\n        return this.getChannelMetaAsync(channelID)\n          .then((response) => response)\n          .catch((err) =>\n            console.log(\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\n              err\n            )\n          );\n      });\n\n      // wait until all promises are resolved\n      const channelMetaData = await Promise.all(promises);\n\n      // return channels meta\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n      resolve(channelMetaData);\n    });\n  };\n\n  // To get a single channel meta via id\n  getChannelMetaAsync = async (channelID) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelID]) {\n        console.log(\n          \"getChannelMetaAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        let channelAddress;\n\n        await EPNSCoreHelper.getChannelAddressFromID(\n          channelID,\n          this.state.epnsReadProvider\n        )\n          .then(async (response) => {\n            channelAddress = response;\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\n              (response) => {\n                // update the channel cache before resolving\n                this.state.channelsMeta[channelID] = response;\n                this.state.channelsMeta[channelAddress] = channelID;\n\n                // resolve\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                resolve(response);\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n\n  // To get a single channel meta via address\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelAddress]) {\n        const channelID = this.state.channelsMeta[channelAddress];\n\n        console.log(\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        // Can't cache this :(, no way to know channel id\n        await EPNSCoreHelper.getChannelInfo(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // resolve\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\n              err\n            );\n            reject(err);\n          });\n      }\n    });\n  };\n\n  getChannelSubscribers = async (channelAddress) => {\n    const cachedSubscribers = this.state.subscribers[channelAddress];\n    if (cachedSubscribers) {\n      return cachedSubscribers;\n    }\n    return postReq(\"/channels/get_subscribers\", {\n      channel: channelAddress,\n      op: \"read\",\n    })\n      .then(({ data }) => {\n        const subs = data.subscribers;\n        this.state.subscribers[channelAddress] = subs;\n        return subs\n      })\n      .catch((err) => {\n        console.log(`getChannelSubscribers => ${err.message}`);\n        return [];\n      });\n  };\n\n  // CHANNELS INFO FUNCTIONS\n  // To get a single channel meta via id\n  getChannelJsonAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsJson[channelAddress]) {\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n        resolve(this.state.channelsJson[channelAddress]);\n      } else {\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // First set the cache\n            this.state.channelsJson[channelAddress] = response;\n\n            // resolve\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n}\n","/**\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  CHANNNEL_DEACTIVATED_STATE: 2,\n  CHANNEL_BLOCKED_STATE: 3,\n  CHANNEL_ACTIVE_STATE: 1,\n  page: 0,\n  channels: [], // the channels meta-data\n  channelsCache: {}, // a mapping of channel address to channel details\n};\n\nexport const contractSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    setChannelMeta: (state, action) => {\n      state.channels = action.payload;\n    },\n    incrementPage: (state) => {\n      state.page += 1;\n    },\n    cacheChannelInfo: (state, action) => {\n      const { address, meta } = action.payload;\n      state.channelsCache[address] = meta;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setChannelMeta,\n  incrementPage,\n  cacheChannelInfo,\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Device } from \"assets/Device\";\n\nimport { toast as toaster } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport Loader from \"react-loader-spinner\";\nimport Skeleton from \"@yisheng90/react-loading\";\nimport { IoMdPeople } from \"react-icons/io\";\nimport { GoVerified } from \"react-icons/go\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NotificationToast from \"components/NotificationToast\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport { postReq } from \"api\";\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\n\n// Create Header\nfunction ViewChannelItem({ channelObjectProp }) {\n  const dispatch = useDispatch();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n    pushAdminAddress,\n    ZERO_ADDRESS,\n  } = useSelector((state) => state.contracts);\n  const { canVerify } = useSelector((state) => state.admin);\n\n  const { channelsCache } = useSelector((state) => state.channels);\n  const { account, library, chainId } = useWeb3React();\n  const isOwner = channelObjectProp.addr === account;\n\n  const [channelObject, setChannelObject] = React.useState({});\n  const [channelJson, setChannelJson] = React.useState({});\n  const [subscribed, setSubscribed] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [memberCount, setMemberCount] = React.useState(0);\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\n  const [isVerified, setIsVerified] = React.useState(false);\n  const [isBlocked, setIsBlocked] = React.useState(false);\n  const [vLoading, setvLoading] = React.useState(false);\n  const [bLoading, setBLoading] = React.useState(false);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n  const [canUnverify, setCanUnverify] = React.useState(false);\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\n\n  // ------ toast related section\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: (\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\n      ),\n      notificationBody:\n        \"Please connect to the Kovan network to opt-in/opt-out of channels\",\n    });\n  };\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // ------ toast related section\n\n  React.useEffect(() => {\n    if (!channelObject.addr) return;\n    if (channelObject.verifiedBy) {\n      // procced as usual\n      fetchChannelJson();\n      setIsBlocked(\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\n      );\n    } else {\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\n        setChannelObject(response);\n        fetchChannelJson();\n      });\n    }\n  }, [account, channelObject, chainId]);\n\n  React.useEffect(() => {\n    if (!channelObjectProp) return;\n    setChannelObject(channelObjectProp);\n  }, [channelObjectProp]);\n\n  React.useEffect(() => {\n    if(!isVerified || !channelObject.verifiedBy) return;\n    ChannelsDataStore.instance.getChannelJsonAsync(\n      channelObject.verifiedBy\n    ).then((verifierDetails) => {\n      setVerifierDetails(verifierDetails);\n    })\n  }, [isVerified, channelObject]);\n\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address,\n  };\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    let channelJson = {};\n    if (channelsCache[channelObject.addr]) {\n      channelJson = channelsCache[channelObject.addr];\n    } else {\n      channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        channelObject.addr\n      );\n      dispatch(\n        cacheChannelInfo({\n          address: channelObject.addr,\n          meta: channelJson,\n        })\n      );\n    }\n    const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n      channelObject.addr\n    );\n    const subscribed = channelSubscribers.find((sub) => {\n      return sub.toLowerCase() === account.toLowerCase();\n    });\n\n    setIsPushAdmin(pushAdminAddress === account);\n    setMemberCount(channelSubscribers.length);\n    setSubscribed(subscribed);\n    setIsVerified(Boolean(channelObject.verifiedBy !== ZERO_ADDRESS));\n    setCanUnverify(channelObject.verifiedBy == account);\n    setChannelJson(channelJson);\n    setLoading(false);\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // to subscribe\n  const subscribe = async () => {\n    subscribeAction(false);\n  };\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const verifyChannel = () => {\n    setvLoading(true);\n    // post op\n    epnsWriteProvider\n      .verifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n        setIsVerified(true);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setvLoading(false);\n      });\n  };\n\n  const unverifyChannel = () => {\n    setvLoading(true);\n    epnsWriteProvider\n      .unverifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        setIsVerified(false);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      });\n    setvLoading(false);\n  };\n  const blockChannel = () => {\n    setBLoading(true);\n    epnsWriteProvider\n      .blockChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction Sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setBLoading(false);\n        setIsBlocked(true);\n      });\n  };\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    const type = {\n      Subscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"subscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" },\n      ],\n    };\n    const message = {\n      channel: channelObject.addr,\n      subscriber: account,\n      action: \"Subscribe\",\n    };\n\n    const signature = await library\n      .getSigner(account)\n      ._signTypedData(EPNS_DOMAIN, type, message);\n\n    let txToast = toaster.dark(\n      <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    postReq(\"/channels/subscribe_offchain\", {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address,\n    })\n      .then((res) => {\n        setSubscribed(true);\n        setMemberCount(memberCount + 1);\n        toaster.update(txToast, {\n          render: \"Sucesfully opted into channel !\",\n          type: toaster.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        console.log(res);\n      })\n      .catch((err) => {\n        toaster.update(txToast, {\n          render:\n            \"There was an error opting into channel (\" + err.message + \")\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        console.log(err);\n      })\n      .finally(() => {\n        setTxInProgress(false);\n      });\n  };\n\n  const unsubscribeAction = async () => {\n    if (!onCoreNetwork) {\n      return showNetworkToast();\n    }\n    const type = {\n      Unsubscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"unsubscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" },\n      ],\n    };\n    const message = {\n      channel: channelObject.addr,\n      unsubscriber: account,\n      action: \"Unsubscribe\",\n    };\n    const signature = await library\n      .getSigner(account)\n      ._signTypedData(EPNS_DOMAIN, type, message);\n\n    let txToast = toaster.dark(\n      <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    postReq(\"/channels/unsubscribe_offchain\", {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address,\n    })\n      .then((res) => {\n        setSubscribed(false);\n        setMemberCount(memberCount + 1);\n        toaster.update(txToast, {\n          render: \"Sucesfully opted out of channel !\",\n          type: toaster.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        console.log(res);\n      })\n      .catch((err) => {\n        toaster.update(txToast, {\n          render:\n            \"There was an error opting into channel (\" + err.message + \")\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        console.log(err);\n      })\n      .finally(() => {\n        setTxInProgress(false);\n      });\n  };\n\n  if (isBlocked) return <></>;\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n            {loading ? (\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n            ) : (\n              <ChannelLogoImg src={`${channelJson.icon}`} />\n            )}\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading ? (\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          ) : (\n            <ChannelTitleLink\n              href={channelJson.url}\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              {channelJson.name}\n              {isVerified && (\n                <Subscribers style={{ display: \"inline\", marginLeft: \"8px\" }}>\n                  <GoVerified size={18} color=\"#35c4f3\" />\n                </Subscribers>\n              )}\n            </ChannelTitleLink>\n          )}\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          )}\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\" />\n                <SubscribersCount>{memberCount}</SubscribersCount>\n              </Subscribers>\n              {verifierDetails && (\n                  <Subscribers>\n                    <VerifiedBy>VERIFIED BY:</VerifiedBy>\n                    <VerifierIcon src={verifierDetails.icon}/>\n                    <VerifierName>{verifierDetails.name}</VerifierName>\n                  </Subscribers>\n              )}\n            </>\n          )}\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library && (\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading && (\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            )}\n            {!loading && isPushAdmin && (\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\n                {bLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\n              </UnsubscribeButton>\n            )}\n            {!loading && !subscribed && (\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && subscribed && (\n              <>\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\n                {!isOwner && (\n                  <UnsubscribeButton\n                    onClick={unsubscribeAction}\n                    disabled={txInProgress}\n                  >\n                    {txInProgress && (\n                      <ActionLoader>\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#FFF\"\n                          height={16}\n                          width={16}\n                        />\n                      </ActionLoader>\n                    )}\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                  </UnsubscribeButton>\n                )}\n              </>\n            )}\n          </ChannelActions>\n        </>\n      )}\n      {toast && (\n        <NotificationToast notification={toast} clearToast={clearToast} />\n      )}\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\n  height: ${(props) => props.atH}px;\n  border-radius: ${(props) => props.borderRadius || 10}px;\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\n  margin-right: ${(props) => props.marginRight || 0}px;\n`;\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`;\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`;\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`;\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst VerifiedBy = styled.span`\n  color: #ec008c;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.05em;\n  font-weight: 400;\n  display: inline-block;\n  margin-left: 10px;\n`;\n\nconst VerifierIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 4px;\n`;\nconst VerifierName = styled.span`\n  text-transform: uppercase;\n  font-weight: 600;\n  color: black;\n  font-size: 16px;\n  letter-spacing: 0.1em;\n`;\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`;\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`;\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`;\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`;\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`;\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`;\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  // max-width: 250px;\n  display: flex;\n  justify-content: flex-end;\n  // justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst ActionTitle = styled.span`\n  ${(props) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`;\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`;\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n`;\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Kovan Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.io/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://gitter.im/kovan-testnet/faucet\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Kovan\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\n\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\n\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\n\nconst CHANNELS_PER_PAGE = 10; //pagination parameter which indicates how many channels to return over one iteration\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n// Create Header\nfunction ViewChannels() {\n  const dispatch = useDispatch();\n  const { account, chainId } = useWeb3React();\n  const { channels, page } = useSelector((state: any) => state.channels);\n\n  const [loading, setLoading] = React.useState(false);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  // const [page, setPage] = React.useState(0);\n\n  const channelsVisited = page * CHANNELS_PER_PAGE;\n\n  // fetch channel data if we are just getting to this pae\n  React.useEffect(() => {\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if (loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    dispatch(incrementPage());\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\n  };\n\n  // to fetch initial channels and logged in user data\n  const fetchInitialsChannelMeta = async () => {\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(\n      channelsVisited,\n      CHANNELS_PER_PAGE\n    );\n    if (!channels.length) {\n      dispatch(setChannelMeta(channelsMeta));\n    }\n    setLoading(false);\n  };\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(\n      startingPoint,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\n    setMoreLoading(false);\n  };\n\n  // conditionally display the waymore bar which loads more information\n  // load more channels when we are at the bottom of the page\n  const showWayPoint = (index: any) => {\n    return Number(index) === channels.length - 1;\n  };\n\n  return (\n    <>\n      <Container>\n        {!loading && channels.length == 0 ? (\n          <ContainerInfo>\n            <DisplayNotice\n              title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n              theme=\"primary\"\n            />\n          </ContainerInfo>\n        ) : (\n          <Items id=\"scrollstyle-secondary\">\n            {!loading && <Faucets />}\n\n            {channels.filter(Boolean).map((channel, index) => (\n              <>\n                {channel.addr !== ZERO_ADDRESS && (\n                  <div key={channel.addr}>\n                    <ViewChannelItem\n                      channelObjectProp={channel}\n                    />\n                  </div>\n                )}\n                {showWayPoint(index) && (\n                  <Waypoint onEnter={updateCurrentPage} />\n                )}\n              </>\n            ))}\n\n            {/* display loader if pagination is loading next batch of channels */}\n            {((moreLoading && channels.length) || loading) && (\n              <CenterContainer>\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n              </CenterContainer>\n            )}\n          </Items>\n        )}\n      </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`;\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`;\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n\n// Export Default\nexport default ViewChannels;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Dropdown from \"react-dropdown\";\nimport { FiLink } from \"react-icons/fi\";\nimport Loader from \"react-loader-spinner\";\nimport styled from \"styled-components\";\nimport { BsFillImageFill } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  H2,\n  H3,\n  Span,\n  Button,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { CloseIcon } from \"assets/icons\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport CryptoHelper from \"helpers/CryptoHelper\";\nconst ethers = require(\"ethers\");\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\n  { value: \"2\", label: \"Secret (IPFS Payload)\" },\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\n  { value: \"4\", label: \"Subset (IPFS Payload)\" },\n];\nconst LIMITER_KEYS = [\"Enter\", \",\"];\n\n// Create Header\nfunction SendNotifications() {\n  const { account } = useWeb3React();\n  const { epnsCommWriteProvider } = useSelector((state: any) => state.contracts);\n  const { channelDetails } = useSelector((state: any) => state.admin);\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState(\"\");\n  const [nfSub, setNFSub] = React.useState(\"\");\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n  const [nfMsg, setNFMsg] = React.useState(\"\");\n  const [nfCTA, setNFCTA] = React.useState(\"\");\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n  const [nfMedia, setNFMedia] = React.useState(\"\");\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n  const [nfInfo, setNFInfo] = React.useState(\"\");\n\n  const isChannelDeactivated =\n    channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE;\n\n  // fetch basic channel information\n  React.useEffect(() => {\n    setChannelAddress(account);\n  }, [account, channelDetails]);\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e: any) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if (LIMITER_KEYS.includes(e.key)) {\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>\n        // use this combination to remove duplicates\n        Array.from(new Set([...oldRecipients, tempRecipeint]))\n      );\n      setTempRecipient(\"\");\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress: any) => {\n    const filteredRecipients = multipleRecipients.filter(\n      (rec) => rec !== recipientAddress\n    );\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    } else {\n      setNFRecipient(\"\");\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there\n    if (nfType === \"4\" && !multipleRecipients.length) {\n      toast.update(notificationToast, {\n        render:\n          \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      validated = false;\n    }\n    return validated;\n  };\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    // do some validation\n    if (!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    const communicatorContract = epnsCommWriteProvider;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(\n          nfRecipient,\n          epnsCommWriteProvider\n        );\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(\n          secret,\n          publickey\n        );\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      // Targetted Notification\n      case \"4\":\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = \"\";\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        notification: {\n          title: nsub,\n          body: nmsg,\n        },\n        data: {\n          type: nfType,\n          secret: secretEncrypted,\n          asub: asub,\n          amsg: amsg,\n          acta: acta,\n          aimg: aimg,\n        },\n      };\n\n      // if we are sending a subset type, then include recipients\n      if (nfType === \"4\") {\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      } catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log(\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise;\n\n    anotherSendTxPromise = communicatorContract.sendNotification(\n      channelAddress,\n      nfRecipient,\n      identityBytes\n    );\n\n    console.log(\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Notification...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Notification Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType(\"\");\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n      })\n  };\n\n  const isEmpty = (field: any) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span>\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Notification\n              </Span>\n            </H2>\n            {!isChannelDeactivated ? (\n              <H3>\n                EPNS supports four types of notifications (for now!).{\" \"}\n                <b>Groups</b>, <b>Secrets</b>, <b>Targetted</b> and{\" \"}\n                <b>Subsets</b>.\n              </H3>\n            ) : (\n              <H3>This channel has been deactivated, please reactivate it!.</H3>\n            )}\n          </Item>\n        </Content>\n      </Section>\n\n      {!isChannelDeactivated && (\n        <Section>\n          <Content>\n            <Item align=\"stretch\">\n              <FormSubmision\n                flex=\"1\"\n                direction=\"column\"\n                margin=\"0px\"\n                justify=\"center\"\n                size=\"1.1rem\"\n                onSubmit={handleSendMessage}\n              >\n                <Item margin=\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Item\n                    flex=\"5\"\n                    justify=\"flex-start\"\n                    align=\"stretch\"\n                    minWidth=\"280px\"\n                  >\n                    <DropdownStyledParent>\n                      <DropdownStyled\n                        options={NFTypes}\n                        onChange={(option) => {\n                          setNFType(option.value);\n                          console.log(option);\n                        }}\n                        value={nfType}\n                        placeholder=\"Select Type of Notification to Send\"\n                      />\n                    </DropdownStyledParent>\n                  </Item>\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  {nfType && (\n                    <ItemH\n                      margin=\"0px 15px 15px 15px\"\n                      bg=\"#f1f1f1\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      justify=\"space-between\"\n                    >\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Subject\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfSubEnabled}\n                          onChange={() => setNFSubEnabled(!nfSubEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Media\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfMediaEnabled}\n                          onChange={() => setNFMediaEnabled(!nfMediaEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable CTA\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfCTAEnabled}\n                          onChange={() => setNFCTAEnabled(!nfCTAEnabled)}\n                        />\n                      </ItemH>\n                    </ItemH>\n                  )}\n                </Item>\n\n                {(nfType === \"2\" || nfType === \"3\") && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Enter recipient wallet address\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      border=\"1px solid #674c9f\"\n                      bg=\"#fff\"\n                      value={nfRecipient}\n                      onChange={(e) => {\n                        setNFRecipient(e.target.value);\n                      }}\n                    />\n                    {nfRecipient.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType === \"4\" && (\n                  <>\n                    <MultiRecipientsContainer>\n                      {multipleRecipients.map((oneRecipient) => (\n                        <span key={oneRecipient}>\n                          {oneRecipient}\n                          <i onClick={() => removeRecipient(oneRecipient)}>\n                            <CloseIcon />\n                          </i>\n                        </span>\n                      ))}\n                    </MultiRecipientsContainer>\n                    <Item\n                      margin=\"15px 20px 15px 20px\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      align=\"stretch\"\n                    >\n                      <Input\n                        required={multipleRecipients.length === 0}\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={tempRecipeint}\n                        onKeyPress={handleSubsetInputChange}\n                        onChange={(e) => {\n                          const text = e.target.value;\n                          if (!LIMITER_KEYS.includes(text)) {\n                            setTempRecipient(e.target.value);\n                          }\n                        }}\n                      />\n                      {nfRecipient.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Recipient Wallet\n                        </Span>\n                      )}\n                    </Item>\n                  </>\n                )}\n\n                {nfType && nfSubEnabled && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Subject of Notification\"\n                      padding=\"12px\"\n                      borderBottom=\"1px solid #000\"\n                      weight=\"400\"\n                      size=\"1.2em\"\n                      bg=\"#fff\"\n                      value={nfSub}\n                      onChange={(e) => {\n                        setNFSub(e.target.value);\n                      }}\n                    />\n                    {nfSub.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <TextField\n                      required\n                      placeholder=\"Notification Message\"\n                      rows=\"6\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      weight=\"400\"\n                      border=\"1px solid #000\"\n                      bg=\"#fff\"\n                      value={nfMsg}\n                      onChange={(e) => {\n                        setNFMsg(e.target.value);\n                      }}\n                      autocomplete=\"off\"\n                    />\n                  </Item>\n                )}\n\n                {nfType && nfMediaEnabled && (\n                  <ItemH\n                    padding=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <BsFillImageFill size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Media URL for Notification\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfMedia}\n                        onChange={(e) => {\n                          setNFMedia(e.target.value);\n                        }}\n                      />\n                      {nfMedia.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfType && nfCTAEnabled && (\n                  <ItemH\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <FiLink size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Call to Action Link\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfCTA}\n                        onChange={(e) => {\n                          setNFCTA(e.target.value);\n                        }}\n                      />\n                      {nfCTA.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfInfo && nfProcessing != 1 && (\n                  <Item\n                    color=\"#fff\"\n                    bg=\"#e1087f\"\n                    padding=\"10px 15px\"\n                    margin=\"15px 0px\"\n                  >\n                    <Span\n                      color=\"#fff\"\n                      textTransform=\"uppercase\"\n                      spacing=\"0.1em\"\n                      weight=\"400\"\n                      size=\"1em\"\n                    >\n                      {nfInfo}\n                    </Span>\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 0px 0px 0px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Button\n                      bg=\"#e20880\"\n                      color=\"#fff\"\n                      flex=\"1\"\n                      radius=\"0px\"\n                      padding=\"20px 10px\"\n                      disabled={nfProcessing == 1 ? true : false}\n                    >\n                      {nfProcessing == 1 && (\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#fff\"\n                          height={24}\n                          width={24}\n                        />\n                      )}\n                      {nfProcessing != 1 && (\n                        <Input\n                          cursor=\"hand\"\n                          textTransform=\"uppercase\"\n                          color=\"#fff\"\n                          weight=\"400\"\n                          size=\"0.8em\"\n                          spacing=\"0.2em\"\n                          type=\"submit\"\n                          value=\"Send Notification\"\n                        />\n                      )}\n                    </Button>\n                  </Item>\n                )}\n              </FormSubmision>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DropdownStyledParent = styled.div`\n  .is-open {\n    margin-bottom: 130px;\n  }\n`;\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n\n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i {\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`;\n\n// Export Default\nexport default SendNotifications;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AddDelegateModal({\n    onClose,onSuccess, addDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        addDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Add an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Add Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, {useRef, useState} from 'react';\nimport { useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\n\n\nexport default function RemoveDelegateModal({\n    onClose,onSuccess, removeDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        removeDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Remove Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, { useRef, useState } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { useClickAway } from \"react-use\";\nimport {\n  Section,\n  Content,\n  Item,\n  H3,\n  Span,\n  Button,\n} from \"components/SharedStyling\";\n\nconst MIN_STAKE_FEES = 50;\n\nexport default function ActivateChannelModal({\n  activateChannel,\n  loading,\n  setChannelStakeFees,\n  channelStakeFees,\n  onClose,\n}) {\n  const popupRef = React.useRef(null);\n  useClickAway(popupRef, onClose); //close the popoup when we click away\n  return (\n    <PopupOverlay>\n      <PopupSlider ref={popupRef}>\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={MIN_STAKE_FEES}\n                onChangeCommitted={(_, value) =>\n                  setChannelStakeFees(Number(value))\n                }\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={MIN_STAKE_FEES}\n                marks\n                min={MIN_STAKE_FEES}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={activateChannel}\n              >\n                {loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                ) : (\n                  <Span\n                    color=\"#fff\"\n                    weight=\"400\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                  >\n                    Reactivate Channel\n                  </Span>\n                )}\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      </PopupSlider>\n    </PopupOverlay>\n  );\n}\n\nconst PopupOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupSlider = styled.div`\n  height: 200px;\n  width: 70vw;\n  background: white;\n`;\n","/**\n * This file helps us to maintain the state of the user(if they have an account)\n * as well as the privilidges the logged in user has\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    channelDetails: null,\n    canVerify: false\n};\n\nexport const contractSlice = createSlice({\n    name: \"admin\",\n    initialState,\n    reducers: {\n        setUserChannelDetails: (state, action) => {\n            state.channelDetails = action.payload;\n        },\n        setCanVerify: (state, action) => {\n            state.canVerify = action.payload;\n        }\n    }\n});\n\nexport const {\n    setUserChannelDetails,\n    setCanVerify\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport { Section, Content, Item } from \"components/SharedStyling\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { toast as toaster } from \"react-toastify\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport AddDelegateModal from \"./AddDelegateModal\";\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\nimport ActivateChannelModal from \"./ActivateChannelModal\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Loader from \"react-loader-spinner\";\nconst ethers = require(\"ethers\");\n\nconst MIN_STAKE_FEES = 50;\n\n// Create Header\nfunction ChannelSettings() {\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails } = useSelector((state: any) => state.admin);\n  const {\n    CHANNNEL_DEACTIVATED_STATE,\n    CHANNEL_BLOCKED_STATE,\n    CHANNEL_ACTIVE_STATE,\n  } = useSelector((state: any) => state.channels);\n\n  const { channelState } = channelDetails;\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n\n  const [loading, setLoading] = React.useState(false);\n  const [\n    showActivateChannelPopup,\n    setShowActivateChannelPopup,\n  ] = React.useState(false);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\n    MIN_STAKE_FEES\n  );\n  const [poolContrib, setPoolContrib] = React.useState(0);\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\n    false\n  );\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\n\n  // toaster customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n\n  React.useEffect(() => {\n    // To set channel info from a channel details\n    // setChannelState(channelDetails.channelState);\n    setPoolContrib(\n      +EPNSCoreHelper.formatBigNumberToMetric(\n        channelDetails.poolContribution,\n        true\n      )\n    );\n  }, [account]);\n\n  const toggleChannelActivationState = () => {\n    if (isChannelBlocked) return;\n    if (isChannelDeactivated) {\n      setShowActivateChannelPopup(true);\n    } else {\n      deactivateChannel();\n    }\n  };\n\n  /**\n   * Function to activate a channel that has been deactivated\n   */\n  const activateChannel = async () => {\n    // First Approve DAI\n    setLoading(true);\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n\n    await library.waitForTransaction(tx.hash);\n    await epnsWriteProvider\n      .reactivateChannel(fees)\n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        toaster.update(notificationToast(), {\n          render: \"Channel Recreated\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNEL_ACTIVE_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowActivateChannelPopup(false);\n      });\n  };\n\n  /**\n   * Function to deactivate a channel that has been deactivated\n   */\n  const deactivateChannel = async () => {\n    // setLoading(true);\n    if (!poolContrib) return;\n\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\n\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\n      value: amountToBeConverted,\n    });\n\n    const pushValue = response.response.data.quote.PUSH.price;\n    const amountsOut = pushValue * Math.pow(10, 18);\n\n    await epnsWriteProvider\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\n      .deactivateChannel(Math.floor(pushValue)) //use this to remove trailing zeros 1232323200000000 -> 12323232\n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sending\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNNEL_DEACTIVATED_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\n        console.log({\n          err,\n        });\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setLoading(false);\n      });\n  };\n\n  const addDelegate = async (walletAddress: string) => {\n    setAddDelegateLoading(true);\n    return epnsCommWriteProvider.addDelegate(walletAddress)\n      .finally(() => {\n        setAddDelegateLoading(false);\n      });\n  };\n\n  const removeDelegate = (walletAddress: string) => {\n    setRemoveDelegateLoading(true);\n    return epnsCommWriteProvider.removeDelegate(walletAddress)\n      .finally(() => {\n        setRemoveDelegateLoading(false);\n      });\n  };\n\n  if (!onCoreNetwork) {\n    //temporarily deactivate the deactivate button if not on core network\n    return <></>;\n  }\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 10px\">\n          <Item\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              flexWrap: \"wrap\",\n            }}\n            align=\"flex-end\"\n          >\n            <ChannelActionButton\n              onClick={toggleChannelActivationState}\n              style={{\n                background: \"#e20880\",\n              }}\n            >\n              <ActionTitle>\n                {loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                ) : isChannelBlocked ? (\n                  \"Channel Blocked\"\n                ) : isChannelDeactivated ? (\n                  \"Activate Channel\"\n                ) : (\n                  \"Deactivate Channel\"\n                )}\n              </ActionTitle>\n            </ChannelActionButton>\n            <div\n              style={{\n                display:\n                  isChannelBlocked || isChannelDeactivated ? \"none\" : \"flex\",\n              }}\n            >\n              <ChannelActionButton onClick={() => setAddModalOpen(true)}>\n                <ActionTitle>\n                  {addDelegateLoading ? (\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  ) : (\n                    \"Add Delegate\"\n                  )}\n                </ActionTitle>\n              </ChannelActionButton>\n\n              <ChannelActionButton onClick={() => setRemoveModalOpen(true)}>\n                <ActionTitle>\n                  {removeDelegateLoading ? (\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  ) : (\n                    \"Remove Delegate\"\n                  )}\n                </ActionTitle>\n              </ChannelActionButton>\n            </div>\n          </Item>\n        </Content>\n        {/* modal to display the activate channel popup */}\n        {showActivateChannelPopup && (\n          <ActivateChannelModal\n            onClose={() => {\n              if (showActivateChannelPopup) {\n                setShowActivateChannelPopup(false);\n              }\n            }}\n            activateChannel={activateChannel}\n            loading={loading}\n            setChannelStakeFees={setChannelStakeFees}\n            channelStakeFees={channelStakeFees}\n          />\n        )}\n        {/* modal to add a delegate */}\n        {addModalOpen && (\n          <AddDelegateModal\n            onClose={() => setAddModalOpen(false)}\n            onSuccess={() => {\n              toaster.update(notificationToast(), {\n                render: \"Delegate Added\",\n                type: toaster.TYPE.INFO,\n                autoClose: 5000,\n              });\n            }}\n            addDelegate={addDelegate}\n          />\n        )}\n        {/* modal to remove a delegate */}\n        {removeModalOpen && (\n          <RemoveDelegateModal\n            onClose={() => {\n              setRemoveModalOpen(false);\n            }}\n            onSuccess={() => {\n              toaster.update(notificationToast(), {\n                render: \"Delegate Removed\",\n                type: toaster.TYPE.INFO,\n                autoClose: 5000,\n              });\n            }}\n            removeDelegate={removeDelegate}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ActionTitle = styled.span`\n  ${(props: any) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background-color: #674c9f;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\n// Export Default\nexport default ChannelSettings;\n","import React from \"react\";\nimport { Section, Content } from \"components/SharedStyling\";\n\nimport SendNotifications from \"components/SendNotifications\";\nimport ChannelSettings from \"components/ChannelSettings\";\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  React.useEffect(() => {});\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <ChannelSettings />\n          <SendNotifications />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","/**\n * This file helps us maintain a global state of all contracts to be used across the application\n * This is used to prevent duplication of logic and instantiating contracts multiple times\n * This is also used to prevent passing props everywhere and making the code ugly\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\n  epnsReadProvider: null, // the core contract reader\n  epnsWriteProvider: null, // the core contract with signer\n  epnsCommReadProvider: null, // the communicator contract reader\n  epnsCommWriteProvider: null, // the communicator write contract with signer\n  pushAdminAddress: null, // the address of the push admin\n};\n\nexport const contractSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    setCoreReadProvider: (state, action) => {\n      state.epnsReadProvider = action.payload;\n    },\n    setCoreWriteProvider: (state, action) => {\n      state.epnsWriteProvider = action.payload;\n    },\n    setCommunicatorReadProvider: (state, action) => {\n      state.epnsCommReadProvider = action.payload;\n    },\n    setCommunicatorWriteProvider: (state, action) => {\n      state.epnsCommWriteProvider = action.payload;\n    },\n    setPushAdmin: (state, action) => {\n      state.pushAdminAddress = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ethers } from \"ethers\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport hex2ascii from \"hex2ascii\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport config from \"config\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport NotificationToast from \"components/NotificationToast\";\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\nimport Info from \"segments/Info\";\nimport Feedbox from \"segments/Feedbox\";\nimport ViewChannels from \"segments/ViewChannels\";\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport UsersDataStore from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\";\nimport {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin,\n} from \"redux/slices/contractSlice\";\nimport { setUserChannelDetails, setCanVerify } from \"redux/slices/adminSlice\";\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\nexport const ALLOWED_CORE_NETWORK = 42; //chainId of network which we have deployed the core contract on\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\n\n// Create Header\nfunction Home() {\n  ReactGA.pageview(\"/home\");\n\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n  } = useSelector((state) => state.contracts);\n\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: (\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\n      ),\n      notificationBody:\n        \"Please connect to the Kovan network to access channels\",\n    });\n  };\n  /**\n   * Event listener for new notifications\n   */\n  const listenFornewNotifications = () => {\n    const event = \"SendNotification\";\n    //callback function for listener\n    const cb = async (eventChannelAddress, eventUserAddress, identityHex) => {\n      const userAddress = account;\n      const identity = hex2ascii(identityHex);\n      const notificationId = identity\n        .concat(\"+\")\n        .concat(eventChannelAddress)\n        .concat(\"+\")\n        .concat(eventUserAddress)\n        .toLocaleLowerCase();\n      const ipfsId = identity.split(\"+\")[1];\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        eventChannelAddress\n      );\n      \n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\n      fetch(url)\n      .then((result) => result.json())\n      .then(async (result) => {\n        const ipfsNotification = { ...result };\n        const notificationTitle = ipfsNotification.notification.title !== \"\"\n        ? ipfsNotification.notification.title\n        : channelJson.name;\n          const toastMessage = {\n            notificationTitle,\n            notificationBody: ipfsNotification.notification.body\n          }\n          // console.log({\n          //   channelJson,\n          //   result\n          // });\n          const notificationObject = {\n            title: notificationTitle,\n            message: ipfsNotification.data.amsg,\n            cta: ipfsNotification.data.acta,\n            app: channelJson.name,\n            icon: channelJson.icon,\n            image: ipfsNotification.data.aimg\n          };\n\n          if (ipfsNotification.data.type === \"1\") {\n            const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n              eventChannelAddress\n            );\n            const isSubscribed = channelSubscribers.find((sub) => {\n              return sub.toLowerCase() === account.toLowerCase();\n            });\n            if (isSubscribed) {\n              console.log(\"message recieved\", notificationObject);\n              showToast(toastMessage);\n              dispatch(addNewNotification(notificationObject));\n            }\n          } else if (userAddress === eventUserAddress) {\n            showToast(toastMessage);\n            dispatch(addNewNotification(notificationObject));\n          }\n        })\n        .catch((err) => {\n          console.log(\n            \"!!!Error, getting new notification data from ipfs --> %o\",\n            err\n          );\n        });\n    };\n    epnsCommReadProvider.on(event, cb);\n    return epnsCommReadProvider.off.bind(epnsCommReadProvider, event, cb);\n  };\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // toast related section\n\n  /**\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\n   */\n  React.useEffect(() => {\n    (async function init() {\n      const coreProvider = onCoreNetwork\n        ? library\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\n            etherscan: config.etherscanToken,\n          });\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if (!onCoreNetwork) {\n        // get the eth address of the alias address, in order to properly render information about the channel\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\n          aliasAddress: account,\n          op: \"read\",\n        }).then(({ data }) => {\n          console.log({ data });\n          const ethAccount = data;\n          if (ethAccount) {\n            setAliasEthAccount(ethAccount.ethAddress);\n          }\n          return data;\n        });\n        if (aliasEth) {\n          // if an alias exists, check if its verified.\n          await postReq(\"/channels/get_alias_verification_status\", {\n            aliasAddress: account,\n            op: \"read\",\n          }).then(({ data }) => {\n            // if it returns undefined then we need to let them know to verify their channel\n            if (!data) {\n              setAliasVerified(false);\n              return;\n            }\n            const { status } = data;\n            setAliasVerified(status || null);\n            return data;\n          });\n        }\n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(\n        addresses.epnscore,\n        abis.epnscore,\n        coreProvider\n      );\n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork\n        ? addresses.epnsEthComm\n        : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(\n        commAddress,\n        abis.epnsComm,\n        library\n      );\n      dispatch(setCommunicatorReadProvider(commContractInstance));\n      dispatch(setCoreReadProvider(coreContractInstance));\n      // initialise the read contract for the communicator function\n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(\n          addresses.epnscore,\n          abis.epnscore,\n          signer\n        );\n        const communicatorSignerInstance = new ethers.Contract(\n          commAddress,\n          abis.epnsComm,\n          signer\n        );\n        dispatch(setCoreWriteProvider(coreSignerInstance));\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\n      }\n    })();\n  }, [account, chainId]);\n\n  /**\n   * When we instantiate the contract instances, fetch basic information about the user\n   * Corresponding channel owned.\n   */\n  React.useEffect(() => {\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n    // save push admin to global state\n    epnsReadProvider.pushChannelAdmin().then((response) => {\n      dispatch(setPushAdmin(response));\n    });\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      ChannelsDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      checkUserForChannelOwnership();\n      listenFornewNotifications();\n    }\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  };\n\n  // Check if a user is a channel or not\n  const checkUserForChannelOwnership = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(async (response) => {\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\n          ownerAccount\n        );\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n          ownerAccount\n        );\n        dispatch(\n          setUserChannelDetails({\n            ...response,\n            ...channelJson,\n            subscribers: channelSubscribers,\n          })\n        );\n        dispatch(setCanVerify(Boolean(verificationStatus)));\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch((err) => {\n        console.log(\n          \"There was an error [checkUserForChannelOwnership]:\",\n          err.message\n        );\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      })\n      .finally(() => {\n        setAdminStatusLoaded(true);\n      });\n  };\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton\n          index={0}\n          active={controlAt == 0 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/feedbox.svg\"\n            active={controlAt == 0 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={1}\n          active={controlAt == 1 ? 1 : 0}\n          border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/channel.svg\"\n            active={controlAt == 1 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={2}\n          active={controlAt == 2 ? 1 : 0}\n          border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\n              if (!channelAdmin && !onCoreNetwork) {\n                return showNetworkToast();\n              }\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\n                return setModalOpen(true);\n              }\n              userClickedAt(2);\n            }\n          }}\n        >\n          {!adminStatusLoaded && (\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\n          )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            (onCoreNetwork ? true : aliasVerified) && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  {channelJson.name}\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === false &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Verify channel alias\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === null &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Contact the admin\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {!channelAdmin && adminStatusLoaded && (\n            <>\n              <ControlImage\n                src=\"./svg/channeladmin.svg\"\n                active={controlAt == 2 ? 1 : 0}\n              />\n              <ControlText active={controlAt == 2 ? 1 : 0}>\n                Create Your Channel\n              </ControlText>\n            </>\n          )}\n        </ControlButton>\n\n        <ControlButton\n          index={3}\n          active={controlAt == 3 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3);\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>\n            Receive Notifs\n          </ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 && <Feedbox />}\n        {controlAt == 1 && <ViewChannels />}\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded && (\n          <ChannelCreationDashboard />\n        )}\n        {controlAt == 2 && channelAdmin && adminStatusLoaded && (\n          <ChannelOwnerDashboard />\n        )}\n        {controlAt == 3 && <Info />}\n        {toast && (\n          <NotificationToast notification={toast} clearToast={clearToast} />\n        )}\n        {modalOpen && (\n          <AliasVerificationodal\n            onClose={() => setModalOpen(false)}\n            onSuccess={() => setAliasVerified(true)}\n            verificationStatus={aliasVerified}\n          />\n        )}\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`;\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  border-bottom: 10px solid rgb(180, 180, 180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-20px, 0px);\n      opacity: 0.4;\n    `};\n`;\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.3) translate(-10px, 0px);\n    `};\n`;\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`;\n\nconst ControlChannelImage = styled.img`\n  width: 20%;\n  margin-bottom: 10px;\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`;\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n  transition: transform 0.2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.1) translate(0px, -20px);\n    `};\n`;\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 15px;\n  overflow: hidden;\n`;\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header() {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Kovan or Polygon(Mumbai) network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={0}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Web3Provider } from \"ethers/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\nimport Home from \"pages/Home\";\nimport Header from \"segments/Header\";\nimport styled from \"styled-components\";\nimport { Item, ItemH, Span, H2, B, A } from \"components/SharedStyling\";\n\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// define the different type of connectors which we use\nconst web3Connectors = {\n  Injected: {\n    obj: injected,\n    logo: \"./svg/login/metamask.svg\",\n    title: \"MetaMask\",\n  },\n  WalletConnect: {\n    obj: walletconnect,\n    logo: \"./svg/login/walletconnect.svg\",\n    title: \"Wallet Connect\",\n  },\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\n};\n\nexport default function App() {\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\n  const [activatingConnector, setActivatingConnector] = React.useState<\n    AbstractConnector\n  >();\n\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n  // Initialize GA\n  ReactGA.initialize(\"UA-165415629-5\");\n  ReactGA.pageview(\"/login\");\n  // Initialize GA\n\n  return (\n    <>\n      <HeaderContainer>\n        <Header/>\n      </HeaderContainer>\n\n      <ParentContainer>\n        {active && !error && (\n          <HomeContainer>\n            <Home />\n          </HomeContainer>\n        )}\n\n        {!active && (\n          <Item>\n            <ProviderLogo\n              src=\"./epnshomelogo.png\"\n              srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\n            />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                  Connect\n                </Span>\n                <Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH maxWidth=\"800px\" align=\"stretch\">\n                {Object.keys(web3Connectors).map((name) => {\n                  const currentConnector = web3Connectors[name].obj;\n                  const connected = currentConnector === connector;\n                  const disabled =\n                    !triedEager ||\n                    !!activatingConnector ||\n                    connected ||\n                    !!error;\n                  const image = web3Connectors[name].logo;\n                  const title = web3Connectors[name].title;\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector);\n                        activate(currentConnector);\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  );\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our{\" \"}\n              <A href=\"https://epns.io/tos\" target=\"_blank\">\n                Terms of Service\n              </A>{\" \"}\n              and our{\" \"}\n              <A href=\"https://epns.io/privacy\" target=\"_blank\">\n                Privacy Policy\n              </A>\n              .\n            </Span>\n          </Item>\n        )}\n      </ParentContainer>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n      />\n    </>\n  );\n}\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`;\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`;\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${(props) => props.border};\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${(props) => props.border};\n  }\n`;\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`;\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`;\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {\n  }\n  .Toastify__toast {\n  }\n  .Toastify__toast--error {\n  }\n  .Toastify__toast--warning {\n  }\n  .Toastify__toast--success {\n  }\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {\n  }\n`;\n","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport contractReducer from './slices/contractSlice';\nimport channelReducer from './slices/channelSlice';\nimport adminReducer from './slices/adminSlice';\nimport notificationReducer from './slices/notificationSlice';\n\nconst rootReducer = combineReducers({\n\tcontracts: contractReducer,\n    channels: channelReducer,\n    admin: adminReducer,\n\tnotifications: notificationReducer\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n\tmiddleware: getDefaultMiddleware({\n\t\tserializableCheck: false,\n\t\timmutableCheck: false\n\t})\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ethers } from \"ethers\";\nimport { Provider } from \"react-redux\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as dotenv from \"dotenv\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\n// enable environmental variables across the entire application\ndotenv.config();\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache(),\n});\n\n/**\n * A utility function used to get the provider\n */\nfunction getLibrary(provider) {\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\n  // adding this is important to deal with changing networks\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\n    if (oldNetwork) {\n      // when network has been changed, refresh the page\n      window.location.reload();\n    }\n  });\n  return gottenProvider;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <App />\n      </Web3ReactProvider>\n    </ApolloProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x97D7c5f14B8fe94Ef2b4bA589379f5Ec992197dA\",\n  epnsEthComm: \"0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC\", // the ropsten core contract\n  epnsPolyComm: \"0xAf55BE8e6b0d6107891bA76eADeEa032ef8A4504\", // the ploygon comm contract\n  dai: \"0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n","import React from \"react\";\nimport Select from \"react-select\";\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [chainDetails, setChainDetails] = React.useState(\"\");\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      channelAlias\n        ? isEmpty(chainDetails)\n        : chainDetails\n        ? isEmpty(channelAlias)\n        : false\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    console.log({\n      chainDetails,\n      channelAlias,\n    });\n    var chainDetailsSplit = chainDetails.split(\":\");\n    var blockchain = chainDetailsSplit[0];\n    var chain_id = chainDetailsSplit[1];\n    var address = channelAlias;\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        await library.waitForTransaction(tx.hash);\n        setProcessing(3);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        console.log({ err });\n        setProcessing(3);\n        setProcessingInfo(\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    try {\n      var signer = library.getSigner(account);\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n      console.log({\n        daiContract,\n      });\n      console.log(1);\n      let daiAmount = 1000;\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n      console.log(2);\n      var mintTransactionPromise = daiContract.mint(amount);\n      console.log(3);\n      const tx = await mintTransactionPromise;\n      console.log(tx);\n      await library.waitForTransaction(tx.hash);\n      console.log(4);\n      setProcessingInfo(\"1000 Dai minted successfully!\");\n      console.log(\"Transaction Completed\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            <Item align=\"flex-end\">\n              <Minter\n                onClick={() => {\n                  mintDai();\n                }}\n              >\n                <Pool>\n                  <br></br>\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\n                </Pool>\n              </Minter>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n                style={{ position: \"relative\" }}\n              >\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Alias network\"\n                  name=\"color\"\n                  options={ALIAS_CHAINS}\n                  theme={(theme) => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: \"#e20880\",\n                      primary: \"#e20880\",\n                    },\n                  })}\n                  onChange={(selectedOption) => {\n                    setChainDetails(selectedOption.value);\n                  }}\n                />\n                <Input\n                  placeholder=\"Your Channel's Alias address\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  style={{ paddingLeft: \"22%\" }}\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n"],"sourceRoot":""}